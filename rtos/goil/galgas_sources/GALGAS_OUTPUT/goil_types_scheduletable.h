//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'goil_types_scheduletable.h'                      *
//                        Generated by version 2.0.0                         *
//                       july 7th, 2010, at 17h16'15"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_types_scheduletable_DEFINED
#define goil_types_scheduletable_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "goil_basic_types.h"
#include "goil_types_action.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_sd_autostart_false ;
class cPtr_sd_autostart_false ;
class GGS_sd_autostart_true ;
class cPtr_sd_autostart_true ;
class GGS_sd_autostart_synchron ;
class cPtr_sd_autostart_synchron ;
class GGS_sd_autostart_relative ;
class cPtr_sd_autostart_relative ;
class GGS_sd_autostart_absolute ;
class cPtr_sd_autostart_absolute ;
class GGS_ltgt_sync_obj ;
class cPtr_ltgt_sync_obj ;
class GGS_ltgt_sync_void ;
class cPtr_ltgt_sync_void ;
class GGS_ltgt_sync_false ;
class cPtr_ltgt_sync_false ;
class GGS_ltgt_sync_true ;
class cPtr_ltgt_sync_true ;
class GGS_action_list ;
class GGS_adjustable_obj ;
class cPtr_adjustable_obj ;
class GGS_adjustable_void ;
class cPtr_adjustable_void ;
class GGS_adjustable_false ;
class cPtr_adjustable_false ;
class GGS_adjustable_true ;
class cPtr_adjustable_true ;
class GGS_expiry_point_obj ;
class cPtr_expiry_point_obj ;
class GGS_expiry_point_list ;
class GGS_scheduletable_obj ;
class cPtr_scheduletable_obj ;
class GGS_scheduletable_map ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  GALGAS class 'GGS_sd_autostart_false'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sd_autostart_false ;

//---------------------------------------------------------------------------*

class GGS_sd_autostart_false : public GGS_autostart_obj {
//--- Default constructor
  public : inline GGS_sd_autostart_false (void) :
  GGS_autostart_obj () {}

//--- Pointer assignment constructor
  public : GGS_sd_autostart_false (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sd_autostart_false (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sd_autostart_false
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sd_autostart_false constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sd_autostart_false * getPtr (void) const {
    return (cPtr_sd_autostart_false *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sd_autostart_false * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sd_autostart_false * operator () (LOCATION_ARGS) const {
      return (cPtr_sd_autostart_false *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sd_autostart_false castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sd_autostart_false ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_sd_autostart_true'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sd_autostart_true ;

//---------------------------------------------------------------------------*

class GGS_sd_autostart_true : public GGS_autostart_obj {
//--- Default constructor
  public : inline GGS_sd_autostart_true (void) :
  GGS_autostart_obj () {}

//--- Pointer assignment constructor
  public : GGS_sd_autostart_true (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sd_autostart_true (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sd_autostart_true
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sd_autostart_true constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_stringset & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sd_autostart_true * getPtr (void) const {
    return (cPtr_sd_autostart_true *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_stringset  reader_app_modes (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sd_autostart_true * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sd_autostart_true * operator () (LOCATION_ARGS) const {
      return (cPtr_sd_autostart_true *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sd_autostart_true castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sd_autostart_true ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sd_autostart_synchron'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sd_autostart_synchron ;

//---------------------------------------------------------------------------*

class GGS_sd_autostart_synchron : public GGS_sd_autostart_true {
//--- Default constructor
  public : inline GGS_sd_autostart_synchron (void) :
  GGS_sd_autostart_true () {}

//--- Pointer assignment constructor
  public : GGS_sd_autostart_synchron (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sd_autostart_synchron (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sd_autostart_synchron
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sd_autostart_synchron constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_stringset & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sd_autostart_synchron * getPtr (void) const {
    return (cPtr_sd_autostart_synchron *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sd_autostart_synchron * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sd_autostart_synchron * operator () (LOCATION_ARGS) const {
      return (cPtr_sd_autostart_synchron *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sd_autostart_synchron castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sd_autostart_synchron ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sd_autostart_relative'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sd_autostart_relative ;

//---------------------------------------------------------------------------*

class GGS_sd_autostart_relative : public GGS_sd_autostart_true {
//--- Default constructor
  public : inline GGS_sd_autostart_relative (void) :
  GGS_sd_autostart_true () {}

//--- Pointer assignment constructor
  public : GGS_sd_autostart_relative (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sd_autostart_relative (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sd_autostart_relative
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sd_autostart_relative constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_luint64 & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sd_autostart_relative * getPtr (void) const {
    return (cPtr_sd_autostart_relative *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_offset (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sd_autostart_relative * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sd_autostart_relative * operator () (LOCATION_ARGS) const {
      return (cPtr_sd_autostart_relative *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sd_autostart_relative castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sd_autostart_relative ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 GALGAS class 'GGS_sd_autostart_absolute'                  *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sd_autostart_absolute ;

//---------------------------------------------------------------------------*

class GGS_sd_autostart_absolute : public GGS_sd_autostart_true {
//--- Default constructor
  public : inline GGS_sd_autostart_absolute (void) :
  GGS_sd_autostart_true () {}

//--- Pointer assignment constructor
  public : GGS_sd_autostart_absolute (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sd_autostart_absolute (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sd_autostart_absolute
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sd_autostart_absolute constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_stringset & argument_1,
                                const GGS_luint64 & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sd_autostart_absolute * getPtr (void) const {
    return (cPtr_sd_autostart_absolute *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_luint64  reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sd_autostart_absolute * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sd_autostart_absolute * operator () (LOCATION_ARGS) const {
      return (cPtr_sd_autostart_absolute *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sd_autostart_absolute castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sd_autostart_absolute ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_ltgt_sync_obj'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ltgt_sync_obj ;

//---------------------------------------------------------------------------*

class GGS_ltgt_sync_obj : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_ltgt_sync_obj (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_ltgt_sync_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ltgt_sync_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ltgt_sync_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ltgt_sync_obj * getPtr (void) const {
    return (cPtr_ltgt_sync_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_loc (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ltgt_sync_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ltgt_sync_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_ltgt_sync_obj *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ltgt_sync_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__ltgt_sync_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ltgt_sync_void'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ltgt_sync_void ;

//---------------------------------------------------------------------------*

class GGS_ltgt_sync_void : public GGS_ltgt_sync_obj {
//--- Default constructor
  public : inline GGS_ltgt_sync_void (void) :
  GGS_ltgt_sync_obj () {}

//--- Pointer assignment constructor
  public : GGS_ltgt_sync_void (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ltgt_sync_void (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ltgt_sync_void
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ltgt_sync_void constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ltgt_sync_void * getPtr (void) const {
    return (cPtr_ltgt_sync_void *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ltgt_sync_void * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ltgt_sync_void * operator () (LOCATION_ARGS) const {
      return (cPtr_ltgt_sync_void *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ltgt_sync_void castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ltgt_sync_void ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ltgt_sync_false'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ltgt_sync_false ;

//---------------------------------------------------------------------------*

class GGS_ltgt_sync_false : public GGS_ltgt_sync_obj {
//--- Default constructor
  public : inline GGS_ltgt_sync_false (void) :
  GGS_ltgt_sync_obj () {}

//--- Pointer assignment constructor
  public : GGS_ltgt_sync_false (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ltgt_sync_false (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ltgt_sync_false
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ltgt_sync_false constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ltgt_sync_false * getPtr (void) const {
    return (cPtr_ltgt_sync_false *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ltgt_sync_false * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ltgt_sync_false * operator () (LOCATION_ARGS) const {
      return (cPtr_ltgt_sync_false *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ltgt_sync_false castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ltgt_sync_false ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_ltgt_sync_true'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ltgt_sync_true ;

//---------------------------------------------------------------------------*

class GGS_ltgt_sync_true : public GGS_ltgt_sync_obj {
//--- Default constructor
  public : inline GGS_ltgt_sync_true (void) :
  GGS_ltgt_sync_obj () {}

//--- Pointer assignment constructor
  public : GGS_ltgt_sync_true (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_ltgt_sync_true (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_ltgt_sync_true
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_ltgt_sync_true constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_basic_type & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_ltgt_sync_true * getPtr (void) const {
    return (cPtr_ltgt_sync_true *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_strategy (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_precision (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_ltgt_sync_true * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_ltgt_sync_true * operator () (LOCATION_ARGS) const {
      return (cPtr_ltgt_sync_true *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ltgt_sync_true castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__ltgt_sync_true ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        sorted list '@action_list'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_action_list ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_action_list ;

//---------------------------------------------------------------------------*


class GGS_action_list : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_action_list cElement ;
//--- Default Constructor
  public : GGS_action_list (void) ;
//--- Copy Constructor
  public : GGS_action_list (const GGS_action_list & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_action_list & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_action_list & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_action_list constructor_emptySortedList (void) ;
  public : static GGS_action_list constructor_sortedListWithValue (const GGS_uint & argument_0,
                           const GGS_action_obj & argument_1) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_action_list * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_uint & _out_0,
                              GGS_action_obj & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_uint & _out_0,
                             GGS_action_obj & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_uint & _out_0,
                                GGS_action_obj & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_uint & _out_0,
                                 GGS_action_obj & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_action_list inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0,
                                const GGS_action_obj & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_action_list operator_concat (const GGS_action_list & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0,
                                const GGS_action_obj & argument_1) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_action_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_action_list & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint  & _order (LOCATION_ARGS) const ;
    public : /* const */ GGS_action_obj  & _actionobj (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_adjustable_obj'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_adjustable_obj ;

//---------------------------------------------------------------------------*

class GGS_adjustable_obj : public GGS_oil_obj {
//--- Default constructor
  public : inline GGS_adjustable_obj (void) :
  GGS_oil_obj () {}

//--- Pointer assignment constructor
  public : GGS_adjustable_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_adjustable_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_adjustable_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_adjustable_obj * getPtr (void) const {
    return (cPtr_adjustable_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_location (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_adjustable_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_adjustable_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_adjustable_obj *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_adjustable_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__adjustable_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_adjustable_void'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_adjustable_void ;

//---------------------------------------------------------------------------*

class GGS_adjustable_void : public GGS_adjustable_obj {
//--- Default constructor
  public : inline GGS_adjustable_void (void) :
  GGS_adjustable_obj () {}

//--- Pointer assignment constructor
  public : GGS_adjustable_void (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_adjustable_void (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_adjustable_void
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_adjustable_void constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_adjustable_void * getPtr (void) const {
    return (cPtr_adjustable_void *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_adjustable_void * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_adjustable_void * operator () (LOCATION_ARGS) const {
      return (cPtr_adjustable_void *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_adjustable_void castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__adjustable_void ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_adjustable_false'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_adjustable_false ;

//---------------------------------------------------------------------------*

class GGS_adjustable_false : public GGS_adjustable_obj {
//--- Default constructor
  public : inline GGS_adjustable_false (void) :
  GGS_adjustable_obj () {}

//--- Pointer assignment constructor
  public : GGS_adjustable_false (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_adjustable_false (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_adjustable_false
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_adjustable_false constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_location & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_adjustable_false * getPtr (void) const {
    return (cPtr_adjustable_false *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_adjustable_false * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_adjustable_false * operator () (LOCATION_ARGS) const {
      return (cPtr_adjustable_false *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_adjustable_false castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__adjustable_false ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_adjustable_true'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_adjustable_true ;

//---------------------------------------------------------------------------*

class GGS_adjustable_true : public GGS_adjustable_obj {
//--- Default constructor
  public : inline GGS_adjustable_true (void) :
  GGS_adjustable_obj () {}

//--- Pointer assignment constructor
  public : GGS_adjustable_true (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_adjustable_true (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_adjustable_true
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_adjustable_true constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_location & argument_1,
                                const GGS_basic_type & argument_2,
                                const GGS_basic_type & argument_3
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_adjustable_true * getPtr (void) const {
    return (cPtr_adjustable_true *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_basic_type  reader_max_retard (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_max_advance (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_adjustable_true * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_adjustable_true * operator () (LOCATION_ARGS) const {
      return (cPtr_adjustable_true *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_adjustable_true castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__adjustable_true ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'set_adjustable'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_set_adjustable (C_Compiler &,
                                GGS_adjustable_obj  &,
                                GGS_adjustable_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_expiry_point_obj'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_expiry_point_obj ;

//---------------------------------------------------------------------------*

class GGS_expiry_point_obj : public GGS_oil_obj {
//--- Default constructor
  public : inline GGS_expiry_point_obj (void) :
  GGS_oil_obj () {}

//--- Pointer assignment constructor
  public : GGS_expiry_point_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_expiry_point_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_expiry_point_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_expiry_point_obj constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_basic_type & argument_1,
                                const GGS_lstring & argument_2,
                                const GGS_adjustable_obj & argument_3,
                                const GGS_action_list & argument_4
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_expiry_point_obj * getPtr (void) const {
    return (cPtr_expiry_point_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_basic_type  reader_offset (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_name (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_adjustable_obj  reader_adjust (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_action_list  reader_actions (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers
  public : void modifier_setActions (C_Compiler & inLexique, const GGS_action_list  & inValue COMMA_LOCATION_ARGS) ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_expiry_point_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_expiry_point_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_expiry_point_obj *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_expiry_point_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__expiry_point_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     sorted list '@expiry_point_list'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_expiry_point_list ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_expiry_point_list ;

//---------------------------------------------------------------------------*


class GGS_expiry_point_list : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_expiry_point_list cElement ;
//--- Default Constructor
  public : GGS_expiry_point_list (void) ;
//--- Copy Constructor
  public : GGS_expiry_point_list (const GGS_expiry_point_list & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_expiry_point_list & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_expiry_point_list & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_expiry_point_list constructor_emptySortedList (void) ;
  public : static GGS_expiry_point_list constructor_sortedListWithValue (const GGS_uint64 & argument_0,
                           const GGS_expiry_point_obj & argument_1) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_expiry_point_list * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_uint64 & _out_0,
                              GGS_expiry_point_obj & _out_1
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_uint64 & _out_0,
                             GGS_expiry_point_obj & _out_1
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_uint64 & _out_0,
                                GGS_expiry_point_obj & _out_1
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_uint64 & _out_0,
                                 GGS_expiry_point_obj & _out_1
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_expiry_point_list inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint64 & argument_0,
                                const GGS_expiry_point_obj & argument_1) ;
//--- Handling '.' GALGAS operator
  public : GGS_expiry_point_list operator_concat (const GGS_expiry_point_list & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint64 & argument_0,
                                const GGS_expiry_point_obj & argument_1) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_expiry_point_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_expiry_point_list & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint64  & _off (LOCATION_ARGS) const ;
    public : /* const */ GGS_expiry_point_obj  & _point (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_scheduletable_obj'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_scheduletable_obj ;

//---------------------------------------------------------------------------*

class GGS_scheduletable_obj : public GGS_oil_obj {
//--- Default constructor
  public : inline GGS_scheduletable_obj (void) :
  GGS_oil_obj () {}

//--- Pointer assignment constructor
  public : GGS_scheduletable_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_scheduletable_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_scheduletable_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_scheduletable_obj constructor_new (C_Compiler & inLexique,
                                const GGS_lstring & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_autostart_obj & argument_2,
                                const GGS_ltgt_sync_obj & argument_3,
                                const GGS_basic_type & argument_4,
                                const GGS_basic_type & argument_5,
                                const GGS_expiry_point_list & argument_6,
                                const GGS_lstringlist & argument_7
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_scheduletable_obj * getPtr (void) const {
    return (cPtr_scheduletable_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_counter (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_autostart_obj  reader_autostart (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_ltgt_sync_obj  reader_ltgt_sync (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_periodic (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_length (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_expiry_point_list  reader_exp_points (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstringlist  reader_acc_apps (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers
  public : void modifier_setCounter (C_Compiler & inLexique, const GGS_lstring  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setAutostart (C_Compiler & inLexique, const GGS_autostart_obj  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setLtgt_sync (C_Compiler & inLexique, const GGS_ltgt_sync_obj  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setPeriodic (C_Compiler & inLexique, const GGS_basic_type  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setLength (C_Compiler & inLexique, const GGS_basic_type  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setExp_points (C_Compiler & inLexique, const GGS_expiry_point_list  & inValue COMMA_LOCATION_ARGS) ;
  public : void modifier_setAcc_apps (C_Compiler & inLexique, const GGS_lstringlist  & inValue COMMA_LOCATION_ARGS) ;

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_scheduletable_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_scheduletable_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_scheduletable_obj *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_scheduletable_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__scheduletable_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Map '@scheduletable_map'                          *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_scheduletable_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_scheduletable_map ;

//---------------------------------------------------------------------------*

class GGS_scheduletable_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_scheduletable_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_scheduletable_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_scheduletable_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_scheduletable_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_scheduletable_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_scheduletable_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_scheduletable_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_scheduletable_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_scheduletable_obj & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_del [] ;

//--- 'del' Remove Modifier
  public : void modifier_del (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_scheduletable_obj & outParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_scheduletable_obj &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_scheduletable_obj   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_scheduletable_obj & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_scheduletable_obj & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_scheduletable_obj & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_scheduletable_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_scheduletable_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_scheduletable_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_scheduletable_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_scheduletable_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_scheduletable_obj   & _scheduletable (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Function 'default_scheduletable_obj'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_default_scheduletable_obj ;

//---------------------------------------------------------------------------*

GGS_scheduletable_obj  function_default_scheduletable_obj (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_sd_autostart_false'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sd_autostart_false : public cPtr_autostart_obj {
  private : typedef cPtr_autostart_obj inherited ;
//--- Constructor
  public : cPtr_sd_autostart_false (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_sd_autostart_true'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sd_autostart_true : public cPtr_autostart_obj {
  private : typedef cPtr_autostart_obj inherited ;
//--- Constructor
  public : cPtr_sd_autostart_true (const GGS_location & ,
                                const GGS_stringset & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_stringset  app_modes ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sd_autostart_synchron'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sd_autostart_synchron : public cPtr_sd_autostart_true {
  private : typedef cPtr_sd_autostart_true inherited ;
//--- Constructor
  public : cPtr_sd_autostart_synchron (const GGS_location & ,
                                const GGS_stringset & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sd_autostart_relative'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sd_autostart_relative : public cPtr_sd_autostart_true {
  private : typedef cPtr_sd_autostart_true inherited ;
//--- Constructor
  public : cPtr_sd_autostart_relative (const GGS_location & ,
                                const GGS_stringset & ,
                                const GGS_luint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint64  offset ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               abstract class 'cPtr_sd_autostart_absolute'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sd_autostart_absolute : public cPtr_sd_autostart_true {
  private : typedef cPtr_sd_autostart_true inherited ;
//--- Constructor
  public : cPtr_sd_autostart_absolute (const GGS_location & ,
                                const GGS_stringset & ,
                                const GGS_luint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_luint64  value ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_ltgt_sync_obj'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ltgt_sync_obj : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_ltgt_sync_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  loc ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_ltgt_sync_void'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ltgt_sync_void : public cPtr_ltgt_sync_obj {
  private : typedef cPtr_ltgt_sync_obj inherited ;
//--- Constructor
  public : cPtr_ltgt_sync_void (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_ltgt_sync_false'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ltgt_sync_false : public cPtr_ltgt_sync_obj {
  private : typedef cPtr_ltgt_sync_obj inherited ;
//--- Constructor
  public : cPtr_ltgt_sync_false (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_ltgt_sync_true'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_ltgt_sync_true : public cPtr_ltgt_sync_obj {
  private : typedef cPtr_ltgt_sync_obj inherited ;
//--- Constructor
  public : cPtr_ltgt_sync_true (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_basic_type & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  strategy ;
  public : GGS_basic_type  precision ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  Element of sorted list '@action_list'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_action_list : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint  order ;
  public : GGS_action_obj  actionobj ;
//--- Constructor
  public : elementOf_GGS_action_list (const GGS_uint & ,
                                const GGS_action_obj & ) ;

//--- Access to next
  public : inline elementOf_GGS_action_list * nextObject (void) const { return (elementOf_GGS_action_list *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_action_list * previousObject (void) const { return (elementOf_GGS_action_list *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_action_list ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_adjustable_obj'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_adjustable_obj : public cPtr_oil_obj {
  private : typedef cPtr_oil_obj inherited ;
//--- Constructor
  public : cPtr_adjustable_obj (const GGS_lstring & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  location ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_adjustable_void'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_adjustable_void : public cPtr_adjustable_obj {
  private : typedef cPtr_adjustable_obj inherited ;
//--- Constructor
  public : cPtr_adjustable_void (const GGS_lstring & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_adjustable_false'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_adjustable_false : public cPtr_adjustable_obj {
  private : typedef cPtr_adjustable_obj inherited ;
//--- Constructor
  public : cPtr_adjustable_false (const GGS_lstring & ,
                                const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_adjustable_true'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_adjustable_true : public cPtr_adjustable_obj {
  private : typedef cPtr_adjustable_obj inherited ;
//--- Constructor
  public : cPtr_adjustable_true (const GGS_lstring & ,
                                const GGS_location & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_basic_type  max_retard ;
  public : GGS_basic_type  max_advance ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_expiry_point_obj'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_expiry_point_obj : public cPtr_oil_obj {
  private : typedef cPtr_oil_obj inherited ;
//--- Constructor
  public : cPtr_expiry_point_obj (const GGS_lstring & ,
                                const GGS_basic_type & ,
                                const GGS_lstring & ,
                                const GGS_adjustable_obj & ,
                                const GGS_action_list & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_basic_type  offset ;
  public : GGS_lstring  name ;
  public : GGS_adjustable_obj  adjust ;
  public : GGS_action_list  actions ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of sorted list '@expiry_point_list'                 *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_expiry_point_list : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_uint64  off ;
  public : GGS_expiry_point_obj  point ;
//--- Constructor
  public : elementOf_GGS_expiry_point_list (const GGS_uint64 & ,
                                const GGS_expiry_point_obj & ) ;

//--- Access to next
  public : inline elementOf_GGS_expiry_point_list * nextObject (void) const { return (elementOf_GGS_expiry_point_list *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_expiry_point_list * previousObject (void) const { return (elementOf_GGS_expiry_point_list *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_expiry_point_list ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_scheduletable_obj'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_scheduletable_obj : public cPtr_oil_obj {
  private : typedef cPtr_oil_obj inherited ;
//--- Constructor
  public : cPtr_scheduletable_obj (const GGS_lstring & ,
                                const GGS_lstring & ,
                                const GGS_autostart_obj & ,
                                const GGS_ltgt_sync_obj & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_expiry_point_list & ,
                                const GGS_lstringlist & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  counter ;
  public : GGS_autostart_obj  autostart ;
  public : GGS_ltgt_sync_obj  ltgt_sync ;
  public : GGS_basic_type  periodic ;
  public : GGS_basic_type  length ;
  public : GGS_expiry_point_list  exp_points ;
  public : GGS_lstringlist  acc_apps ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   Element of map '@scheduletable_map'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class e_scheduletable_map {
  public : GGS_scheduletable_obj  scheduletable ;

  public : e_scheduletable_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_scheduletable_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_scheduletable_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_scheduletable_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_scheduletable_map * nextObject (void) const { return (elementOf_GGS_scheduletable_map *) mNextItem ; }
  public : inline elementOf_GGS_scheduletable_map * infObject (void) const { return (elementOf_GGS_scheduletable_map *) mInfPtr ; }
  public : inline elementOf_GGS_scheduletable_map * supObject (void) const { return (elementOf_GGS_scheduletable_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_scheduletable_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*

#endif
