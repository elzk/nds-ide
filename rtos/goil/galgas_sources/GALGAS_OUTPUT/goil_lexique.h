//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'goil_lexique.h'                            *
//                        Generated by version 2.0.0                         *
//                       july 9th, 2010, at 9h38'48"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1


#ifndef goil_5F_lexique_0_DEFINED
#define goil_5F_lexique_0_DEFINED

//---------------------------------------------------------------------------*

#include "galgas/GGS_lstring.h"
#include "galgas/GGS_luint.h"
#include "galgas/GGS_lsint.h"
#include "galgas/GGS_luint64.h"
#include "galgas/GGS_lsint64.h"
#include "galgas/GGS_lchar.h"
#include "galgas/GGS_ldouble.h"
#include "galgas/GGS_lbool.h"
#include "galgas-utilities/C_Lexique.h"

//---------------------------------------------------------------------------*

#include "galgas2/predefined-types.h"

//---------------------------------------------------------------------------*
//                                                                           *
//                    E X T E R N    R O U T I N E S                         *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*
//                                                                           *
//                    E X T E R N    F U N C T I O N S                       *
//                                                                           *
//---------------------------------------------------------------------------*

//---------------------------------------------------------------------------*
//                                                                           *
//                       T O K E N    C L A S S                              *
//                                                                           *
//---------------------------------------------------------------------------*

class cTokenFor_goil_5F_lexique : public cToken {
  public : C_String mLexicalAttribute_a_5F_string ;
  public : C_String mLexicalAttribute_att_5F_token ;
  public : double mLexicalAttribute_floatNumber ;
  public : PMUInt64 mLexicalAttribute_integerNumber ;
  public : C_String mLexicalAttribute_number ;

  public : cTokenFor_goil_5F_lexique (void) ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     S C A N N E R    C L A S S                            *
//                                                                           *
//---------------------------------------------------------------------------*

class C_Lexique_goil_5F_lexique : public C_Lexique {
//--- Constructors
  public : C_Lexique_goil_5F_lexique (C_Compiler * inCallerCompiler,
                       const C_String & inDependencyFileExtension,
                       const C_String & inDependencyFilePath,
                       C_galgas_io * inParametersPtr,
                       const C_String & inSourceFileName
                       COMMA_LOCATION_ARGS) ;

  public : C_Lexique_goil_5F_lexique (C_Compiler * inCallerCompiler,
                       C_galgas_io * inParametersPtr,
                       const C_String & inSourceString,
                       const C_String & inStringForError
                       COMMA_LOCATION_ARGS) ;

//--- Declaring a protected virtual destructor enables the compiler to raise
//    an error if a direct delete is performed; only the static method
//    C_GGS_Object::detachPointer may invoke delete.
  #ifndef DO_NOT_GENERATE_CHECKINGS
    protected : virtual ~ C_Lexique_goil_5F_lexique (void) {}
  #endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2


//--- Terminal symbols enumeration
  public : enum {kToken_,
   kToken_comment,
   kToken_idf,
   kToken_string,
   kToken_g_5F_string,
   kToken_uint_5F_number,
   kToken_float_5F_number,
   kToken_set_5F_start_5F_uint_5F_number,
   kToken_command,
   kToken_APP_5F_SRC,
   kToken_COMPILER,
   kToken_ASSEMBLER,
   kToken_LINKER,
   kToken_SCRIPT,
   kToken_CFLAGS,
   kToken_CPPFLAGS,
   kToken_ASFLAGS,
   kToken_LDFLAGS,
   kToken_APP_5F_NAME,
   kToken_TRAMPOLINE_5F_BASE_5F_PATH,
   kToken_OIL_5F_VERSION,
   kToken_IMPLEMENTATION,
   kToken_OS,
   kToken_TASK,
   kToken_COUNTER,
   kToken_ALARM,
   kToken_RESOURCE,
   kToken_EVENT,
   kToken_ISR,
   kToken_MESSAGE,
   kToken_COM,
   kToken_NM,
   kToken_APPMODE,
   kToken_IPDU,
   kToken_CPU,
   kToken_UINT_33__32_,
   kToken_INT_33__32_,
   kToken_UINT_36__34_,
   kToken_INT_36__34_,
   kToken_FLOAT,
   kToken_ENUM,
   kToken_STRING,
   kToken_BOOLEAN,
   kToken_WITH_5F_AUTO,
   kToken_NO_5F_DEFAULT,
   kToken_AUTO,
   kToken_MASK,
   kToken_CATEGORY,
   kToken_OS_5F_TYPE,
   kToken_TASK_5F_TYPE,
   kToken_COUNTER_5F_TYPE,
   kToken_ALARM_5F_TYPE,
   kToken_RESOURCE_5F_TYPE,
   kToken_EVENT_5F_TYPE,
   kToken_ISR_5F_TYPE,
   kToken_MESSAGE_5F_TYPE,
   kToken_COM_5F_TYPE,
   kToken_NM_5F_TYPE,
   kToken_APPMODE_5F_TYPE,
   kToken_IPDU_5F_TYPE,
   kToken_STATUS,
   kToken_EXTENDED,
   kToken_STARTUPHOOK,
   kToken_ERRORHOOK,
   kToken_SHUTDOWNHOOK,
   kToken_PRETASKHOOK,
   kToken_POSTTASKHOOK,
   kToken_USEGETSERVICEID,
   kToken_USEPARAMETERACCESS,
   kToken_USERESSCHEDULER,
   kToken_SYSTEM_5F_CALL,
   kToken_MEMMAP,
   kToken_MEMORY_5F_PROTECTION,
   kToken_TRACE,
   kToken_DEBUG,
   kToken_FILE,
   kToken_METHOD,
   kToken_FORMAT,
   kToken_TRACE_5F_TASK,
   kToken_TRACE_5F_ISR,
   kToken_TRACE_5F_RESOURCE,
   kToken_TRACE_5F_ALARM,
   kToken_TRACE_5F_USER,
   kToken_DESCRIPTION,
   kToken_PRIORITY,
   kToken_SCHEDULE,
   kToken_ACTIVATION,
   kToken_AUTOSTART,
   kToken_MAXALLOWEDVALUE,
   kToken_TICKSPERBASE,
   kToken_MINCYCLE,
   kToken_TYPE,
   kToken_UNIT,
   kToken_ACTION,
   kToken_SETEVENT,
   kToken_ACTIVATETASK,
   kToken_ALARMCALLBACK,
   kToken_ALARMCALLBACKNAME,
   kToken_ALARMTIME,
   kToken_CYCLETIME,
   kToken_INCREMENTCOUNTER,
   kToken_RESOURCEPROPERTY,
   kToken_STANDARD,
   kToken_LINKED,
   kToken_LINKEDRESOURCE,
   kToken_INTERNAL,
   kToken_MESSAGEPROPERTY,
   kToken_NOTIFICATION,
   kToken_NOTIFICATIONERROR,
   kToken_SEND_5F_STATIC_5F_INTERNAL,
   kToken_SEND_5F_STATIC_5F_EXTERNAL,
   kToken_SEND_5F_DYNAMIC_5F_EXTERNAL,
   kToken_SEND_5F_ZERO_5F_INTERNAL,
   kToken_SEND_5F_ZERO_5F_EXTERNAL,
   kToken_RECEIVE_5F_ZERO_5F_INTERNAL,
   kToken_RECEIVE_5F_ZERO_5F_EXTERNAL,
   kToken_RECEIVE_5F_UNQUEUED_5F_INTERNAL,
   kToken_RECEIVE_5F_QUEUED_5F_INTERNAL,
   kToken_RECEIVE_5F_UNQUEUED_5F_EXTERNAL,
   kToken_RECEIVE_5F_QUEUED_5F_EXTERNAL,
   kToken_RECEIVE_5F_DYNAMIC_5F_EXTERNAL,
   kToken_RECEIVE_5F_ZERO_5F_SENDERS,
   kToken_CDATATYPE,
   kToken_SENDINGMESSAGE,
   kToken_NONE,
   kToken_COMCALLBACK,
   kToken_COMCALLBACKNAME,
   kToken_INMCALLBACK,
   kToken_CALLBACKROUTINENAME,
   kToken_MONITOREDIPDU,
   kToken_TRANSFERPROPERTY,
   kToken_TRIGGERED,
   kToken_PENDING,
   kToken_NETWORKMESSAGE,
   kToken_FILTER,
   kToken_ALWAYS,
   kToken_NEVER,
   kToken_MASKEDNEWEQUALSX,
   kToken_MASKEDNEWDIFFERSX,
   kToken_NEWISEQUAL,
   kToken_NEWISDIFFERENT,
   kToken_MASKEDNEWEQUALSMASKEDOLD,
   kToken_MASKEDNEWDIFFERSMASKEDOLD,
   kToken_NEWISWITHIN,
   kToken_NEWISOUTSIDE,
   kToken_NEWISGREATER,
   kToken_NEWISLESSOREQUAL,
   kToken_NEWISLESS,
   kToken_NEWISGREATEROREQUAL,
   kToken_ONEEVERYN,
   kToken_MIN,
   kToken_MAX,
   kToken_X,
   kToken_PERIOD,
   kToken_OFFSET,
   kToken_NETWORKORDERCALLOUT,
   kToken_CPUORDERCALLOUT,
   kToken_INITIALVALUE,
   kToken_QUEUESIZE,
   kToken_LINK,
   kToken_RECEIVEMESSAGE,
   kToken_FLAG,
   kToken_FLAGNAME,
   kToken_STATIC,
   kToken_DYNAMIC,
   kToken_ZERO,
   kToken_SIZEINBITS,
   kToken_MAXSIZEINBITS,
   kToken_BITORDERING,
   kToken_BIGENDIAN,
   kToken_LITTLEENDIAN,
   kToken_BITPOSITION,
   kToken_DATAINTERPRETATION,
   kToken_UNSIGNEDINTEGER,
   kToken_BYTEARRAY,
   kToken_DIRECTION,
   kToken_SENT,
   kToken_RECEIVED,
   kToken_COMTIMEBASE,
   kToken_COMERRORHOOK,
   kToken_COMUSEGETSERVICEID,
   kToken_COMUSEPARAMETERACCESS,
   kToken_COMSTARTCOMEXTENSION,
   kToken_COMAPPMODE,
   kToken_COMSTATUS,
   kToken_USE,
   kToken_COMEXTENDED,
   kToken_COMSTANDARD,
   kToken_IPDUPROPERTY,
   kToken_IPDUCALLOUT,
   kToken_LAYERUSED,
   kToken_TRANSMISSIONMODE,
   kToken_DIRECT,
   kToken_PERIODIC,
   kToken_MIXED,
   kToken_TIMEOUT,
   kToken_FIRTSTIMEOUT,
   kToken_MINIMUMDELAYTIME,
   kToken_TIMEPERIOD,
   kToken_TIMEOFFSET,
   kToken_NON,
   kToken_FULL,
   kToken_FALSE,
   kToken_TRUE,
   kToken_PROTECTIONHOOK,
   kToken_SCALABILITYCLASS,
   kToken_STACKMONITORING,
   kToken_TIMING_5F_PROTECTION,
   kToken_ACCESSING_5F_APPLICATION,
   kToken_SC_31_,
   kToken_SC_32_,
   kToken_SC_33_,
   kToken_SC_34_,
   kToken_SCHEDULETABLE,
   kToken_APPLICATION,
   kToken_LOCAL_5F_TO_5F_GLOBAL_5F_TIME_5F_SYNCHRONIZATION,
   kToken_SYNC_5F_STRATEGY,
   kToken_MAX_5F_INCREASE,
   kToken_MAX_5F_DECREASE,
   kToken_MAX_5F_INCREASE_5F_ASYNC,
   kToken_MAX_5F_DECREASE_5F_ASYNC,
   kToken_PRECISION,
   kToken_LENGTH,
   kToken_EXPIRY_5F_POINT,
   kToken_MAX_5F_RETARD,
   kToken_MAX_5F_ADVANCE,
   kToken_ADJUSTABLE,
   kToken_ABSOLUTE,
   kToken_RELATIVE,
   kToken_SYNCHRON,
   kToken_START,
   kToken_TRUSTED,
   kToken_HAS_5F_RESTARTTASK,
   kToken_RESTARTTASK,
   kToken_TRUSTED_5F_FUNCTION,
   kToken_NAME,
   kToken_EXECUTIONBUDGET,
   kToken_EXECUTIONTIME,
   kToken_TIMEFRAME,
   kToken_MAXOSINTERRUPTLOCKTIME,
   kToken_MAXALLINTERRUPTLOCKTIME,
   kToken_LOCKINGTIME,
   kToken_RESOURCELOCK,
   kToken_MAXRESOURCELOCKTIME,
   kToken_SMOOTH,
   kToken_HARD,
   kToken_TICKS,
   kToken_NANOSECONDS,
   kToken_SOFTWARE,
   kToken_HARDWARE,
   kToken_OSINTERNAL,
   kToken_GPT,
   kToken_NS_5F_PER_5F_HW_5F_TICK,
   kToken_GPTCHANNELNAME,
   kToken_DRIVER,
   kToken_TIMECONSTANTS,
   kToken_TIMECONSTANT,
   kToken_NS,
   kToken_CONSTNAME,
   kToken_SOURCE,
   kToken__3B_,
   kToken__3A_,
   kToken__3D_,
   kToken__7B_,
   kToken__7D_,
   kToken__2E__2E_,
   kToken__5B_,
   kToken__5D_,
   kToken__2C_,
   kToken__2E_,
   kToken__2D_,
   kToken_include} ;

//--- Key words table 'makefileKeywords'
  public : static PMSInt16 search_into_makefileKeywords (const C_String & inSearchedString) ;

//--- Key words table 'oilVersion'
  public : static PMSInt16 search_into_oilVersion (const C_String & inSearchedString) ;

//--- Key words table 'oilDefinitions'
  public : static PMSInt16 search_into_oilDefinitions (const C_String & inSearchedString) ;

//--- Key words table 'objList'
  public : static PMSInt16 search_into_objList (const C_String & inSearchedString) ;

//--- Key words table 'dataTypes'
  public : static PMSInt16 search_into_dataTypes (const C_String & inSearchedString) ;

//--- Key words table 'miscSpecifiers'
  public : static PMSInt16 search_into_miscSpecifiers (const C_String & inSearchedString) ;

//--- Key words table 'objectRefType'
  public : static PMSInt16 search_into_objectRefType (const C_String & inSearchedString) ;

//--- Key words table 'os_attributes'
  public : static PMSInt16 search_into_os_attributes (const C_String & inSearchedString) ;

//--- Key words table 'trace_attributes'
  public : static PMSInt16 search_into_trace_attributes (const C_String & inSearchedString) ;

//--- Key words table 'task_attributes'
  public : static PMSInt16 search_into_task_attributes (const C_String & inSearchedString) ;

//--- Key words table 'counter_attributes'
  public : static PMSInt16 search_into_counter_attributes (const C_String & inSearchedString) ;

//--- Key words table 'as_counter_attributes'
  public : static PMSInt16 search_into_as_counter_attributes (const C_String & inSearchedString) ;

//--- Key words table 'alarm_attributes'
  public : static PMSInt16 search_into_alarm_attributes (const C_String & inSearchedString) ;

//--- Key words table 'resource_attributes'
  public : static PMSInt16 search_into_resource_attributes (const C_String & inSearchedString) ;

//--- Key words table 'message_attributes'
  public : static PMSInt16 search_into_message_attributes (const C_String & inSearchedString) ;

//--- Key words table 'networkmessage_attribute'
  public : static PMSInt16 search_into_networkmessage_attribute (const C_String & inSearchedString) ;

//--- Key words table 'com_attribute'
  public : static PMSInt16 search_into_com_attribute (const C_String & inSearchedString) ;

//--- Key words table 'ipdu_attribute'
  public : static PMSInt16 search_into_ipdu_attribute (const C_String & inSearchedString) ;

//--- Key words table 'scheduling'
  public : static PMSInt16 search_into_scheduling (const C_String & inSearchedString) ;

//--- Key words table 'boolean'
  public : static PMSInt16 search_into_boolean (const C_String & inSearchedString) ;

//--- Key words table 'autosar_attr'
  public : static PMSInt16 search_into_autosar_attr (const C_String & inSearchedString) ;

//--- Key words table 'autosar_key'
  public : static PMSInt16 search_into_autosar_key (const C_String & inSearchedString) ;

//--- Key words table 'autosar_objs'
  public : static PMSInt16 search_into_autosar_objs (const C_String & inSearchedString) ;

//--- Key words table 'schedtable_attrs'
  public : static PMSInt16 search_into_schedtable_attrs (const C_String & inSearchedString) ;

//--- Key words table 'autostart_attrs'
  public : static PMSInt16 search_into_autostart_attrs (const C_String & inSearchedString) ;

//--- Key words table 'application_attrs'
  public : static PMSInt16 search_into_application_attrs (const C_String & inSearchedString) ;

//--- Key words table 'timing_prot_attribs'
  public : static PMSInt16 search_into_timing_prot_attribs (const C_String & inSearchedString) ;

//--- Key words table 'sync_strategy'
  public : static PMSInt16 search_into_sync_strategy (const C_String & inSearchedString) ;

//--- Key words table 'unit'
  public : static PMSInt16 search_into_unit (const C_String & inSearchedString) ;

//--- Key words table 'cpt_type_attr'
  public : static PMSInt16 search_into_cpt_type_attr (const C_String & inSearchedString) ;

//--- Key words table 'it_src_attr'
  public : static PMSInt16 search_into_it_src_attr (const C_String & inSearchedString) ;

//--- Key words table 'OILDelimiters'
  public : static PMSInt16 search_into_OILDelimiters (const C_String & inSearchedString) ;

//--- Key words table 'commands'
  public : static PMSInt16 search_into_commands (const C_String & inSearchedString) ;
  

//--- Assign from attribute (v1)
  public : void assignFromAttribute_a_5F_string (GGS_lstring & outValue) const ;
  public : void assignFromAttribute_att_5F_token (GGS_lstring & outValue) const ;
  public : void assignFromAttribute_floatNumber (GGS_ldouble & outValue) const ;
  public : void assignFromAttribute_integerNumber (GGS_luint64 & outValue) const ;
  public : void assignFromAttribute_number (GGS_lstring & outValue) const ;


//--- Assign from attribute (v2)
  public : GALGASap_lstring synthetizedAttribute_a_5F_string (void) const ;
  public : GALGASap_lstring synthetizedAttribute_att_5F_token (void) const ;
  public : GALGASap_ldouble synthetizedAttribute_floatNumber (void) const ;
  public : GALGASap_luint_36__34_ synthetizedAttribute_integerNumber (void) const ;
  public : GALGASap_lstring synthetizedAttribute_number (void) const ;


//--- Attribute access
  public : C_String attributeValue_a_5F_string (void) const ;
  public : C_String attributeValue_att_5F_token (void) const ;
  public : double attributeValue_floatNumber (void) const ;
  public : PMUInt64 attributeValue_integerNumber (void) const ;
  public : C_String attributeValue_number (void) const ;


//--- Parse lexical token
  protected : virtual bool parseLexicalToken (void) ;

//--- Append terminal message
  protected : virtual void appendTerminalMessageToSyntaxErrorMessage (const PMSInt16 numeroTerminal,
                                                              C_String & messageErreur) ;

//--- Get terminal count
  public : virtual PMSInt16 terminalVocabularyCount (void) const { return 271 ; }

//--- Get Token String
  public : virtual C_String getCurrentTokenString (const cToken * inTokenPtr) const ;

//--- Enter Token
  protected : void enterToken (const cTokenFor_goil_5F_lexique & inToken) ;
} ;

//---------------------------------------------------------------------------*

#endif
