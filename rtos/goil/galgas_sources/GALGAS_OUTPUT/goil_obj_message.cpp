//---------------------------------------------------------------------------*
//                                                                           *
//                       File 'goil_obj_message.cpp'                         *
//                        Generated by version 2.0.0                         *
//                       july 7th, 2010, at 17h16'51"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != 820
  #error "This file has been compiled with a version of GALGAS that uses libpm version 820, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "goil_obj_message.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_obj_message.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'mess'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mess_i0_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_message_map  &var_cas_messages) {
  GGS_lstring  var_cas_message_name ;
  GGS_message_obj  var_cas_mess ;
  GGS_lstring  var_cas_desc ;
  GGS_mess_prop_obj  var_cas_mess_prop ;
  GGS_action_obj  var_cas_notif ;
  GGS_action_obj  var_cas_notif_error ;
  GGS_lstringlist  var_cas_acc_apps ;
  GGS_ident_map  var_cas_others ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGE) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_message_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  const GGS_bool cond_3732 = var_cas_messages.reader_hasKey (var_cas_message_name.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (210))) ;
  if (cond_3732.isBuiltAndTrue ()) {
    var_cas_messages.modifier_del (inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (211)) ;
    var_cas_mess_prop = var_cas_mess.reader_messageproperty (inLexique COMMA_SOURCE_FILE_AT_LINE (212)) ;
    var_cas_notif = var_cas_mess.reader_notification (inLexique COMMA_SOURCE_FILE_AT_LINE (213)) ;
    var_cas_notif_error = var_cas_mess.reader_notificationerror (inLexique COMMA_SOURCE_FILE_AT_LINE (214)) ;
    var_cas_acc_apps = var_cas_mess.reader_acc_apps (inLexique COMMA_SOURCE_FILE_AT_LINE (215)) ;
    var_cas_others = var_cas_mess.reader_other_fields (inLexique COMMA_SOURCE_FILE_AT_LINE (216)) ;
    var_cas_desc = var_cas_mess.reader_desc (inLexique COMMA_SOURCE_FILE_AT_LINE (217)) ;
  }else if (cond_3732.isBuiltAndFalse ()) {
    var_cas_mess_prop = GGS_void_mess_prop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (219)) ;
    var_cas_notif = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (220)) ;
    var_cas_notif_error = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (221)) ;
    var_cas_acc_apps = GGS_lstringlist ::constructor_emptyList () ;
    var_cas_others = GGS_ident_map ::constructor_emptyMap (inLexique COMMA_SOURCE_FILE_AT_LINE (223)) ;
    var_cas_desc = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (224)) ;
    var_cas_mess = GGS_message_obj ::constructor_new (inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_SOURCE_FILE_AT_LINE (225)) ;
  }
  nt_message_5F_attributes_ (inLexique, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  nt_description_ (inLexique, var_cas_desc) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  var_cas_mess = GGS_message_obj ::constructor_new (inLexique, var_cas_desc, var_cas_notif, var_cas_notif_error, var_cas_acc_apps, var_cas_others, var_cas_mess_prop COMMA_SOURCE_FILE_AT_LINE (232)) ;
  var_cas_messages.modifier_put (inLexique, var_cas_message_name, var_cas_mess COMMA_SOURCE_FILE_AT_LINE (233)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mess_i0_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_message_5F_attributes_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'message_attributes'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_attributes_i1_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_action_obj  &var_cas_notif,
                                GGS_action_obj  &var_cas_notif_error,
                                GGS_lstringlist  &var_cas_acc_apps,
                                GGS_ident_map  &var_cas_others,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_goil_5F_obj_5F_message_0 (inLexique)) {
        case 2 : {
          { const GGS_mess_prop_obj _var_4725 = var_cas_mess_prop ; // CAST instruction
            if (_var_4725.getPtr () != NULL) {
              macroValidPointer (_var_4725.getPtr ()) ;
              if (typeid (cPtr_void_mess_prop) == typeid (* (_var_4725.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MESSAGEPROPERTY attribute already defined") COMMA_SOURCE_FILE_AT_LINE (249)) ;
                var_cas_mess_prop.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (249)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (250)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGEPROPERTY) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_message_5F_property_ (inLexique, var_cas_mess_prop) ;
          GGS_lstring  automatic_var_4816_0 ;
          nt_description_ (inLexique, automatic_var_4816_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          { const GGS_action_obj _var_5014 = var_cas_notif ; // CAST instruction
            if (_var_5014.getPtr () != NULL) {
              macroValidPointer (_var_5014.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_5014.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NOTIFICATION attribute already defined") COMMA_SOURCE_FILE_AT_LINE (257)) ;
                var_cas_notif.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (257)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("previously defined here") COMMA_SOURCE_FILE_AT_LINE (258)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_ (inLexique, var_cas_notif) ;
          GGS_lstring  automatic_var_5105_0 ;
          nt_description_ (inLexique, automatic_var_5105_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          { const GGS_action_obj _var_5324 = var_cas_notif_error ; // CAST instruction
            if (_var_5324.getPtr () != NULL) {
              macroValidPointer (_var_5324.getPtr ()) ;
              if (typeid (cPtr_void_action) == typeid (* (_var_5324.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NOTIFICATIONERROR attribute already defined") COMMA_SOURCE_FILE_AT_LINE (265)) ;
                var_cas_notif_error.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (265)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was previously defined here") COMMA_SOURCE_FILE_AT_LINE (266)) ;
              }
            }
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATIONERROR) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_ (inLexique, var_cas_notif_error) ;
          GGS_lstring  automatic_var_5421_0 ;
          nt_description_ (inLexique, automatic_var_5421_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 5 : {
          GGS_lstring  var_cas_app ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACCESSING_5F_APPLICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_att_5F_token (var_cas_app) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
          GGS_lstring  automatic_var_5522_0 ;
          nt_description_ (inLexique, automatic_var_5522_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          ::routine_add_lstring_unique (inLexique,  var_cas_acc_apps,  var_cas_app,  GGS_string ("ACCESSING_APPLICATION") COMMA_SOURCE_FILE_AT_LINE (271)) ;
          } break ;
        case 6 : {
          nt_free_5F_field_ (inLexique, var_cas_others) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_attributes_i1_parse (C_Lexique_goil_5F_lexique & inLexique) {
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_goil_5F_obj_5F_message_0 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGEPROPERTY) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_message_5F_property_parse (inLexique) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_parse (inLexique) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 4 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NOTIFICATIONERROR) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          nt_notification_5F_property_parse (inLexique) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 5 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACCESSING_5F_APPLICATION) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 6 : {
          nt_free_5F_field_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'message_property'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_property_i2_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  switch (select_goil_5F_obj_5F_message_1 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_INTERNAL) COMMA_HERE) ;
      nt_ssi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sse_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sde_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 4 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      var_cas_mess_prop = GGS_szi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (283)) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_sze_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      nt_rzi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 7 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_rze_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 8 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rui_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 9 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rqi_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 10 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rue_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 11 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rqe_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 12 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_rde_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    case 13 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_SENDERS) COMMA_HERE) ;
      nt_rzs_5F_attributes_ (inLexique, var_cas_mess_prop) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_message_5F_property_i2_parse (C_Lexique_goil_5F_lexique & inLexique) {
  switch (select_goil_5F_obj_5F_message_1 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_INTERNAL) COMMA_HERE) ;
      nt_ssi_5F_attributes_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_STATIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sse_5F_attributes_parse (inLexique) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_sde_5F_attributes_parse (inLexique) ;
      } break ;
    case 4 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SEND_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_sze_5F_attributes_parse (inLexique) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_INTERNAL) COMMA_HERE) ;
      nt_rzi_5F_attributes_parse (inLexique) ;
      } break ;
    case 7 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_EXTERNAL) COMMA_HERE) ;
      nt_rze_5F_attributes_parse (inLexique) ;
      } break ;
    case 8 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rui_5F_attributes_parse (inLexique) ;
      } break ;
    case 9 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_INTERNAL) COMMA_HERE) ;
      nt_rqi_5F_attributes_parse (inLexique) ;
      } break ;
    case 10 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_UNQUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rue_5F_attributes_parse (inLexique) ;
      } break ;
    case 11 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_QUEUED_5F_EXTERNAL) COMMA_HERE) ;
      nt_rqe_5F_attributes_parse (inLexique) ;
      } break ;
    case 12 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_DYNAMIC_5F_EXTERNAL) COMMA_HERE) ;
      nt_rde_5F_attributes_parse (inLexique) ;
      } break ;
    case 13 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVE_5F_ZERO_5F_SENDERS) COMMA_HERE) ;
      nt_rzs_5F_attributes_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//        Implementation of production rule 'notification_property'          *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_notification_5F_property_i3_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_action_obj  &var_cas_notif) {
  switch (select_goil_5F_obj_5F_message_2 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NONE) COMMA_HERE) ;
      var_cas_notif = GGS_void_action ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (301)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SETEVENT) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      GGS_bool var_cas_has_task = GGS_bool (false) ;
      GGS_lstring  var_cas_task_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (305)) ;
      GGS_bool var_cas_has_event = GGS_bool (false) ;
      GGS_lstring  var_cas_event_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (307)) ;
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
          switch (select_goil_5F_obj_5F_message_3 (inLexique)) {
            case 2 : {
              const GGS_bool cond_7095 = var_cas_has_task ;
              if (cond_7095.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TASK already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (312)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_att_5F_token (var_cas_task_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_7177_0 ;
              nt_description_ (inLexique, automatic_var_7177_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_task = GGS_bool (true) ;
              } break ;
            case 3 : {
              const GGS_bool cond_7333 = var_cas_has_event ;
              if (cond_7333.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("EVENT already defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (321)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_EVENT) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_att_5F_token (var_cas_event_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              GGS_lstring  automatic_var_7425_0 ;
              nt_description_ (inLexique, automatic_var_7425_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_event = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      const GGS_bool cond_7587 = (var_cas_has_task).operator_not () ;
      if (cond_7587.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Task not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (331)) ;
      }
      const GGS_bool cond_7695 = (var_cas_has_event).operator_not () ;
      if (cond_7695.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Event not defined for SETEVENT notification") COMMA_SOURCE_FILE_AT_LINE (334)) ;
      }
      var_cas_notif = GGS_setevent_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_task_name, var_cas_event_name COMMA_SOURCE_FILE_AT_LINE (335)) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_task_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACTIVATETASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_task_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_7893_0 ;
      nt_description_ (inLexique, automatic_var_7893_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_activatetask_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_task_name COMMA_SOURCE_FILE_AT_LINE (342)) ;
      } break ;
    case 4 : {
      GGS_lstring  var_cas_function_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACKNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_function_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_8127_0 ;
      nt_description_ (inLexique, automatic_var_8127_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_callback_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_function_name COMMA_SOURCE_FILE_AT_LINE (349)) ;
      } break ;
    case 5 : {
      GGS_lstring  var_cas_flag_name ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAG) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAGNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_flag_name) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      GGS_lstring  automatic_var_8332_0 ;
      nt_description_ (inLexique, automatic_var_8332_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_notif = GGS_flag_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_flag_name COMMA_SOURCE_FILE_AT_LINE (356)) ;
      } break ;
    case 6 : {
      GGS_bool var_cas_has_function = GGS_bool (false) ;
      GGS_lstring  var_cas_function_name = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (359)) ;
      GGS_bool var_cas_has_ipdu = GGS_bool (false) ;
      GGS_luint64  var_cas_ipdu = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (361)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
          switch (select_goil_5F_obj_5F_message_4 (inLexique)) {
            case 2 : {
              const GGS_bool cond_8783 = var_cas_has_function ;
              if (cond_8783.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (367)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CALLBACKROUTINENAME) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_a_5F_string (var_cas_function_name) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
              GGS_lstring  automatic_var_8873_0 ;
              nt_description_ (inLexique, automatic_var_8873_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_function = GGS_bool (true) ;
              } break ;
            case 3 : {
              const GGS_bool cond_9057 = var_cas_has_ipdu ;
              if (cond_9057.isBuiltAndTrue ()) {
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback routine already defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (373)) ;
              }
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MONITOREDIPDU) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.assignFromAttribute_integerNumber (var_cas_ipdu) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
              GGS_lstring  automatic_var_9137_0 ;
              nt_description_ (inLexique, automatic_var_9137_0) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              var_cas_has_ipdu = GGS_bool (true) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      const GGS_bool cond_9321 = (var_cas_has_function).operator_not () ;
      if (cond_9321.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("Callback not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (380)) ;
      }
      const GGS_bool cond_9435 = (var_cas_has_ipdu).operator_not () ;
      if (cond_9435.isBuiltAndTrue ()) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("IPDU not defined for NMCALLBACK notification") COMMA_SOURCE_FILE_AT_LINE (383)) ;
      }
      var_cas_notif = GGS_nmcallback_action ::constructor_new (inLexique, GGS_location (inLexique), var_cas_function_name, var_cas_ipdu COMMA_SOURCE_FILE_AT_LINE (384)) ;
      } break ;
    default :
      break ;
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_notification_5F_property_i3_parse (C_Lexique_goil_5F_lexique & inLexique) {
  switch (select_goil_5F_obj_5F_message_2 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NONE) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SETEVENT) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_3 = true ;
        while (syntaxRepeat_3) {
          switch (select_goil_5F_obj_5F_message_3 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              nt_description_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_EVENT) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
              nt_description_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_3 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ACTIVATETASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TASK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      nt_description_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 4 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_COMCALLBACKNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      nt_description_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAG) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FLAGNAME) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      nt_description_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INMCALLBACK) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      { bool syntaxRepeat_4 = true ;
        while (syntaxRepeat_4) {
          switch (select_goil_5F_obj_5F_message_4 (inLexique)) {
            case 2 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CALLBACKROUTINENAME) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
              nt_description_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              } break ;
            case 3 : {
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MONITOREDIPDU) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
              nt_description_parse (inLexique) ;
              inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
              } break ;
            default :
              syntaxRepeat_4 = false ;
              break ;
          }
        }
      }
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'ssi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_ssi_5F_attributes_i4_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_cdatatype ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_ssi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype COMMA_SOURCE_FILE_AT_LINE (396)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_ssi_5F_attributes_i4_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_cdatatype_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sse_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sse_5F_attributes_i5_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (403)) ;
  GGS_bool var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (405)) ;
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (407)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (409)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (411)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (413)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (415)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_goil_5F_obj_5F_message_5 (inLexique)) {
        case 2 : {
          const GGS_bool cond_10597 = var_cas_has_cdatatype ;
          if (cond_10597.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (422)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_10797 = var_cas_has_transferproperty ;
          if (cond_10797.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (428)) ;
          }
          nt_transferproperty_ (inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_11011 = var_cas_has_net_message ;
          if (cond_11011.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (434)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 5 : {
          const GGS_bool cond_11200 = var_cas_has_filter ;
          if (cond_11200.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (440)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 6 : {
          const GGS_bool cond_11395 = var_cas_has_net_order_callout ;
          if (cond_11395.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (446)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 7 : {
          const GGS_bool cond_11621 = var_cas_has_cpu_order_callout ;
          if (cond_11621.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (452)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 8 : {
          const GGS_bool cond_11836 = var_cas_has_initial_value ;
          if (cond_11836.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (458)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_12043 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_12043.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (465)) ;
  }
  const GGS_bool cond_12161 = (var_cas_has_transferproperty).operator_not () ;
  if (cond_12161.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY is missing in the message") COMMA_SOURCE_FILE_AT_LINE (468)) ;
  }
  const GGS_bool cond_12272 = (var_cas_has_net_message).operator_not () ;
  if (cond_12272.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (471)) ;
  }
  var_cas_mess_prop = GGS_sse_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_transferproperty, var_cas_filter, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (473)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sse_5F_attributes_i5_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_5 = true ;
    while (syntaxRepeat_5) {
      switch (select_goil_5F_obj_5F_message_5 (inLexique)) {
        case 2 : {
          nt_cdatatype_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_transferproperty_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_networkmessage_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_filter_parse (inLexique) ;
          } break ;
        case 6 : {
          nt_networkordercallout_parse (inLexique) ;
          } break ;
        case 7 : {
          nt_cpuordercallout_parse (inLexique) ;
          } break ;
        case 8 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_5 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sde_5F_attributes_i6_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_transferproperty = GGS_bool (false) ;
  GGS_lstring  var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (489)) ;
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (491)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (493)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (495)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (497)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_goil_5F_obj_5F_message_6 (inLexique)) {
        case 2 : {
          const GGS_bool cond_13212 = var_cas_has_transferproperty ;
          if (cond_13212.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("TRANSFERPROPERTY subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (504)) ;
          }
          nt_transferproperty_ (inLexique, var_cas_transferproperty) ;
          var_cas_has_transferproperty = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_13426 = var_cas_has_net_message ;
          if (cond_13426.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (510)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_13639 = var_cas_has_net_order_callout ;
          if (cond_13639.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (516)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 5 : {
          const GGS_bool cond_13865 = var_cas_has_cpu_order_callout ;
          if (cond_13865.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (522)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        case 6 : {
          const GGS_bool cond_14080 = var_cas_has_initial_value ;
          if (cond_14080.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (528)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_sde_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_transferproperty, var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_initial_value, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (533)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sde_5F_attributes_i6_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_6 = true ;
    while (syntaxRepeat_6) {
      switch (select_goil_5F_obj_5F_message_6 (inLexique)) {
        case 2 : {
          nt_transferproperty_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_networkmessage_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_networkordercallout_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_cpuordercallout_parse (inLexique) ;
          } break ;
        case 6 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_6 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sze_5F_attributes_i7_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (547)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (549)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (551)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_goil_5F_obj_5F_message_7 (inLexique)) {
        case 2 : {
          const GGS_bool cond_14882 = var_cas_has_net_message ;
          if (cond_14882.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (558)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_15095 = var_cas_has_net_order_callout ;
          if (cond_15095.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (564)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_15321 = var_cas_has_cpu_order_callout ;
          if (cond_15321.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (570)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_15537 = (var_cas_has_net_message).operator_not () ;
  if (cond_15537.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (577)) ;
  }
  var_cas_mess_prop = GGS_sze_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (578)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sze_5F_attributes_i7_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_7 = true ;
    while (syntaxRepeat_7) {
      switch (select_goil_5F_obj_5F_message_7 (inLexique)) {
        case 2 : {
          nt_networkmessage_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_networkordercallout_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_cpuordercallout_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_7 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzi_5F_attributes_i8_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_lstring  var_cas_sending_message ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_mess_prop = GGS_rzi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message COMMA_SOURCE_FILE_AT_LINE (594)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzi_5F_attributes_i8_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  nt_sendingmessage_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rze_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rze_5F_attributes_i9_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_net_message = GGS_bool (false) ;
  GGS_lstring  var_cas_net_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (604)) ;
  GGS_bool var_cas_has_net_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_net_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (606)) ;
  GGS_bool var_cas_has_cpu_order_callout = GGS_bool (false) ;
  GGS_lstring  var_cas_cpu_order_callout = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (608)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_goil_5F_obj_5F_message_8 (inLexique)) {
        case 2 : {
          const GGS_bool cond_16430 = var_cas_has_net_message ;
          if (cond_16430.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (615)) ;
          }
          nt_networkmessage_ (inLexique, var_cas_net_message) ;
          var_cas_has_net_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_16643 = var_cas_has_net_order_callout ;
          if (cond_16643.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (621)) ;
          }
          nt_networkordercallout_ (inLexique, var_cas_net_order_callout) ;
          var_cas_has_net_order_callout = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_16869 = var_cas_has_cpu_order_callout ;
          if (cond_16869.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CPUORDERCALLOUT subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (627)) ;
          }
          nt_cpuordercallout_ (inLexique, var_cas_cpu_order_callout) ;
          var_cas_has_cpu_order_callout = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_17085 = (var_cas_has_net_message).operator_not () ;
  if (cond_17085.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("NETWORKMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (634)) ;
  }
  var_cas_mess_prop = GGS_rze_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_order_callout, var_cas_cpu_order_callout, var_cas_net_message COMMA_SOURCE_FILE_AT_LINE (635)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rze_5F_attributes_i9_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_8 = true ;
    while (syntaxRepeat_8) {
      switch (select_goil_5F_obj_5F_message_8 (inLexique)) {
        case 2 : {
          nt_networkmessage_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_networkordercallout_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_cpuordercallout_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_8 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rui_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rui_5F_attributes_i10_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (647)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (649)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (651)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_goil_5F_obj_5F_message_9 (inLexique)) {
        case 2 : {
          const GGS_bool cond_17722 = var_cas_has_sending_message ;
          if (cond_17722.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (658)) ;
          }
          nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_17919 = var_cas_has_filter ;
          if (cond_17919.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (664)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_18103 = var_cas_has_initial_value ;
          if (cond_18103.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (670)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_18312 = (var_cas_has_sending_message).operator_not () ;
  if (cond_18312.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (677)) ;
  }
  var_cas_mess_prop = GGS_rui_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message, var_cas_filter, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (678)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rui_5F_attributes_i10_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_9 = true ;
    while (syntaxRepeat_9) {
      switch (select_goil_5F_obj_5F_message_9 (inLexique)) {
        case 2 : {
          nt_sendingmessage_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_filter_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_9 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqi_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqi_5F_attributes_i11_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_sending_message = GGS_bool (false) ;
  GGS_lstring  var_cas_sending_message = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (690)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (692)) ;
  GGS_bool var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (694)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_goil_5F_obj_5F_message_10 (inLexique)) {
        case 2 : {
          const GGS_bool cond_18935 = var_cas_has_sending_message ;
          if (cond_18935.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (700)) ;
          }
          nt_sendingmessage_ (inLexique, var_cas_sending_message) ;
          var_cas_has_sending_message = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_19132 = var_cas_has_filter ;
          if (cond_19132.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (706)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_19310 = var_cas_has_queue_size ;
          if (cond_19310.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (712)) ;
          }
          nt_queuesize_ (inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("INITIALVALUE subattribute ignore for queued messages") COMMA_SOURCE_FILE_AT_LINE (716)) ;
          GGS_basic_type  automatic_var_19498_0 ;
          nt_initialvalue_ (inLexique, automatic_var_19498_0) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_19626 = (var_cas_has_sending_message).operator_not () ;
  if (cond_19626.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SENDINGMESSAGE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (722)) ;
  }
  const GGS_bool cond_19722 = (var_cas_has_queue_size).operator_not () ;
  if (cond_19722.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (725)) ;
  }
  var_cas_mess_prop = GGS_rqi_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_sending_message, var_cas_filter, var_cas_queue_size COMMA_SOURCE_FILE_AT_LINE (726)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqi_5F_attributes_i11_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_10 = true ;
    while (syntaxRepeat_10) {
      switch (select_goil_5F_obj_5F_message_10 (inLexique)) {
        case 2 : {
          nt_sendingmessage_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_filter_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_queuesize_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_10 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rue_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rue_5F_attributes_i12_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (738)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (740)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (742)) ;
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (743)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_goil_5F_obj_5F_message_11 (inLexique)) {
        case 2 : {
          const GGS_bool cond_20368 = var_cas_has_cdatatype ;
          if (cond_20368.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (750)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_20548 = var_cas_has_filter ;
          if (cond_20548.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (756)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          { const GGS_link_obj _var_20745 = var_cas_link ; // CAST instruction
            if (_var_20745.getPtr () != NULL) {
              macroValidPointer (_var_20745.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_20745.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (763)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 5 : {
          const GGS_bool cond_20898 = var_cas_has_initial_value ;
          if (cond_20898.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (768)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_21105 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_21105.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (775)) ;
  }
  { const GGS_link_obj _var_21220 = var_cas_link ; // CAST instruction
    if (_var_21220.getPtr () != NULL) {
      macroValidPointer (_var_21220.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_21220.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (779)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rue_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_filter, var_cas_link, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (782)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rue_5F_attributes_i12_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_11 = true ;
    while (syntaxRepeat_11) {
      switch (select_goil_5F_obj_5F_message_11 (inLexique)) {
        case 2 : {
          nt_cdatatype_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_filter_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_link_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_11 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rqe_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqe_5F_attributes_i13_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (795)) ;
  GGS_bool var_cas_has_filter = GGS_bool (false) ;
  GGS_filter_prop_obj  var_cas_filter = GGS_void_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (797)) ;
  GGS_bool var_cas_has_queue_size = GGS_bool (false) ;
  GGS_luint64  var_cas_queue_size = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (799)) ;
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (800)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_goil_5F_obj_5F_message_12 (inLexique)) {
        case 2 : {
          const GGS_bool cond_21878 = var_cas_has_cdatatype ;
          if (cond_21878.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (807)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_22058 = var_cas_has_filter ;
          if (cond_22058.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("FILTER subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (813)) ;
          }
          nt_filter_ (inLexique, var_cas_filter) ;
          var_cas_has_filter = GGS_bool (true) ;
          } break ;
        case 4 : {
          const GGS_bool cond_22236 = var_cas_has_queue_size ;
          if (cond_22236.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (819)) ;
          }
          nt_queuesize_ (inLexique, var_cas_queue_size) ;
          var_cas_has_queue_size = GGS_bool (true) ;
          } break ;
        case 5 : {
          { const GGS_link_obj _var_22444 = var_cas_link ; // CAST instruction
            if (_var_22444.getPtr () != NULL) {
              macroValidPointer (_var_22444.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_22444.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (826)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 6 : {
          GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticWarning (inLexique, GGS_string ("INITIALVALUE subattribute ignore for queued messages") COMMA_SOURCE_FILE_AT_LINE (829)) ;
          GGS_basic_type  automatic_var_22590_0 ;
          nt_initialvalue_ (inLexique, automatic_var_22590_0) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_22717 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_22717.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (836)) ;
  }
  const GGS_bool cond_22813 = (var_cas_has_queue_size).operator_not () ;
  if (cond_22813.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("QUEUESIZE subattribute missing") COMMA_SOURCE_FILE_AT_LINE (839)) ;
  }
  { const GGS_link_obj _var_22928 = var_cas_link ; // CAST instruction
    if (_var_22928.getPtr () != NULL) {
      macroValidPointer (_var_22928.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_22928.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (843)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rqe_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_queue_size, var_cas_filter, var_cas_link COMMA_SOURCE_FILE_AT_LINE (846)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rqe_5F_attributes_i13_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_12 = true ;
    while (syntaxRepeat_12) {
      switch (select_goil_5F_obj_5F_message_12 (inLexique)) {
        case 2 : {
          nt_cdatatype_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_filter_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_queuesize_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_link_parse (inLexique) ;
          } break ;
        case 6 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_12 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rde_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rde_5F_attributes_i14_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_link_obj  var_cas_link = GGS_void_link ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (859)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (861)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
      switch (select_goil_5F_obj_5F_message_13 (inLexique)) {
        case 2 : {
          { const GGS_link_obj _var_23429 = var_cas_link ; // CAST instruction
            if (_var_23429.getPtr () != NULL) {
              macroValidPointer (_var_23429.getPtr ()) ;
              if (typeid (cPtr_void_link) == typeid (* (_var_23429.getPtr ()))) {
              }else{
                GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (869)) ;
              }
            }
          }
          nt_link_ (inLexique, var_cas_link) ;
          } break ;
        case 3 : {
          const GGS_bool cond_23582 = var_cas_has_initial_value ;
          if (cond_23582.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (874)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  { const GGS_link_obj _var_23801 = var_cas_link ; // CAST instruction
    if (_var_23801.getPtr () != NULL) {
      macroValidPointer (_var_23801.getPtr ()) ;
      if (typeid (cPtr_void_link) == typeid (* (_var_23801.getPtr ()))) {
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("LINK subattribute missing") COMMA_SOURCE_FILE_AT_LINE (883)) ;
      }else{
      }
    }
  }
  var_cas_mess_prop = GGS_rde_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_link, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (886)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rde_5F_attributes_i14_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_13 = true ;
    while (syntaxRepeat_13) {
      switch (select_goil_5F_obj_5F_message_13 (inLexique)) {
        case 2 : {
          nt_link_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_13 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'rzs_attributes'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzs_5F_attributes_i15_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_mess_prop_obj  &var_cas_mess_prop) {
  GGS_bool var_cas_has_cdatatype = GGS_bool (false) ;
  GGS_lstring  var_cas_cdatatype = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (898)) ;
  GGS_bool var_cas_has_initial_value = GGS_bool (false) ;
  GGS_basic_type  var_cas_initial_value = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (900)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_goil_5F_obj_5F_message_14 (inLexique)) {
        case 2 : {
          const GGS_bool cond_24290 = var_cas_has_cdatatype ;
          if (cond_24290.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (907)) ;
          }
          nt_cdatatype_ (inLexique, var_cas_cdatatype) ;
          var_cas_has_cdatatype = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_24483 = var_cas_has_initial_value ;
          if (cond_24483.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE subattribute already defined") COMMA_SOURCE_FILE_AT_LINE (913)) ;
          }
          nt_initialvalue_ (inLexique, var_cas_initial_value) ;
          var_cas_has_initial_value = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_24691 = (var_cas_has_cdatatype).operator_not () ;
  if (cond_24691.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("CDATATYPE is missing in the message") COMMA_SOURCE_FILE_AT_LINE (921)) ;
  }
  var_cas_mess_prop = GGS_rzs_mess_prop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_cdatatype, var_cas_initial_value COMMA_SOURCE_FILE_AT_LINE (923)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_rzs_5F_attributes_i15_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_14 = true ;
    while (syntaxRepeat_14) {
      switch (select_goil_5F_obj_5F_message_14 (inLexique)) {
        case 2 : {
          nt_cdatatype_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_14 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'cdatatype'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cdatatype_i16_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_cdatatype) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CDATATYPE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_cdatatype) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_24930_0 ;
  nt_description_ (inLexique, automatic_var_24930_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cdatatype_i16_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CDATATYPE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'transferproperty'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_transferproperty_i17_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_transferproperty) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRANSFERPROPERTY) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_15 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRIGGERED) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("triggered"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (946)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PENDING) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("pending"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (948)) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_HERE) ;
      var_cas_transferproperty = GGS_lstring ::constructor_new (inLexique, GGS_string ("auto"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (950)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_25326_0 ;
  nt_description_ (inLexique, automatic_var_25326_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_transferproperty_i17_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRANSFERPROPERTY) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_15 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRIGGERED) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PENDING) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_AUTO) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'networkmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkmessage_i18_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_net_message) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_net_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_25475_0 ;
  nt_description_ (inLexique, automatic_var_25475_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkmessage_i18_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                Implementation of production rule 'filter'                 *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_filter_i19_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_filter_prop_obj  &var_cas_filter) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FILTER) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_16 (inLexique)) {
    case 1 : {
      var_cas_filter = GGS_always_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (970)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ALWAYS) COMMA_HERE) ;
      } break ;
    case 2 : {
      var_cas_filter = GGS_never_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (973)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEVER) COMMA_HERE) ;
      } break ;
    case 3 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_ (inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewequalsx_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask, var_cas_x COMMA_SOURCE_FILE_AT_LINE (980)) ;
      } break ;
    case 4 : {
      GGS_luint64  var_cas_mask ;
      GGS_luint64  var_cas_x ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_ (inLexique, var_cas_mask, var_cas_x) ;
      var_cas_filter = GGS_maskednewdiffersx_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask, var_cas_x COMMA_SOURCE_FILE_AT_LINE (986)) ;
      } break ;
    case 5 : {
      var_cas_filter = GGS_newisequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (988)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISEQUAL) COMMA_HERE) ;
      } break ;
    case 6 : {
      var_cas_filter = GGS_newisdifferent_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (991)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISDIFFERENT) COMMA_HERE) ;
      } break ;
    case 7 : {
      GGS_luint64  var_cas_mask ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_ (inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewequalsmaskedold_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask COMMA_SOURCE_FILE_AT_LINE (997)) ;
      } break ;
    case 8 : {
      GGS_luint64  var_cas_mask ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_ (inLexique, var_cas_mask) ;
      var_cas_filter = GGS_maskednewdiffersmaskedold_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_mask COMMA_SOURCE_FILE_AT_LINE (1002)) ;
      } break ;
    case 9 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISWITHIN) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_ (inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newiswithin ::constructor_new (inLexique, var_cas_filterLocation, var_cas_min, var_cas_max COMMA_SOURCE_FILE_AT_LINE (1008)) ;
      } break ;
    case 10 : {
      GGS_luint64  var_cas_min ;
      GGS_luint64  var_cas_max ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISOUTSIDE) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_ (inLexique, var_cas_min, var_cas_max) ;
      var_cas_filter = GGS_newisoutside ::constructor_new (inLexique, var_cas_filterLocation, var_cas_min, var_cas_max COMMA_SOURCE_FILE_AT_LINE (1014)) ;
      } break ;
    case 11 : {
      var_cas_filter = GGS_newisgreater_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1016)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATER) COMMA_HERE) ;
      } break ;
    case 12 : {
      var_cas_filter = GGS_newislessorequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1019)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESSOREQUAL) COMMA_HERE) ;
      } break ;
    case 13 : {
      var_cas_filter = GGS_newisless_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1022)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESS) COMMA_HERE) ;
      } break ;
    case 14 : {
      var_cas_filter = GGS_newisgreaterorequal_filter ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1025)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATEROREQUAL) COMMA_HERE) ;
      } break ;
    case 15 : {
      GGS_luint64  var_cas_period ;
      GGS_luint64  var_cas_offset ;
      GGS_location  var_cas_filterLocation = GGS_location (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ONEEVERYN) COMMA_HERE) ;
      nt_period_5F_offset_5F_attribute_ (inLexique, var_cas_period, var_cas_offset) ;
      var_cas_filter = GGS_oneeveryn_filter ::constructor_new (inLexique, var_cas_filterLocation, var_cas_period, var_cas_offset COMMA_SOURCE_FILE_AT_LINE (1032)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_27853_0 ;
  nt_description_ (inLexique, automatic_var_27853_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_filter_i19_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FILTER) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_16 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ALWAYS) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEVER) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_parse (inLexique) ;
      } break ;
    case 4 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSX) COMMA_HERE) ;
      nt_mask_5F_x_5F_attribute_parse (inLexique) ;
      } break ;
    case 5 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISEQUAL) COMMA_HERE) ;
      } break ;
    case 6 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISDIFFERENT) COMMA_HERE) ;
      } break ;
    case 7 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWEQUALSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_parse (inLexique) ;
      } break ;
    case 8 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASKEDNEWDIFFERSMASKEDOLD) COMMA_HERE) ;
      nt_mask_5F_attribute_parse (inLexique) ;
      } break ;
    case 9 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISWITHIN) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_parse (inLexique) ;
      } break ;
    case 10 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISOUTSIDE) COMMA_HERE) ;
      nt_min_5F_max_5F_attribute_parse (inLexique) ;
      } break ;
    case 11 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATER) COMMA_HERE) ;
      } break ;
    case 12 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESSOREQUAL) COMMA_HERE) ;
      } break ;
    case 13 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISLESS) COMMA_HERE) ;
      } break ;
    case 14 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NEWISGREATEROREQUAL) COMMA_HERE) ;
      } break ;
    case 15 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ONEEVERYN) COMMA_HERE) ;
      nt_period_5F_offset_5F_attribute_parse (inLexique) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'mask_x_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_x_5F_attribute_i20_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_mask,
                                GGS_luint64  &var_cas_x) {
  GGS_bool var_cas_has_mask = GGS_bool (false) ;
  GGS_bool var_cas_has_x = GGS_bool (false) ;
  var_cas_mask = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1043)) ;
  var_cas_x = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1044)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
      switch (select_goil_5F_obj_5F_message_17 (inLexique)) {
        case 2 : {
          const GGS_bool cond_28201 = var_cas_has_mask ;
          if (cond_28201.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MASK is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1051)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_mask) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_28270_0 ;
          nt_description_ (inLexique, automatic_var_28270_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_mask = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_28412 = var_cas_has_x ;
          if (cond_28412.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("X is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1057)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_X) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_x) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_28475_0 ;
          nt_description_ (inLexique, automatic_var_28475_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_x = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_28620 = (var_cas_has_mask).operator_not () ;
  if (cond_28620.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MASK is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1064)) ;
  }
  const GGS_bool cond_28707 = (var_cas_has_x).operator_not () ;
  if (cond_28707.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("X is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1067)) ;
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_x_5F_attribute_i20_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_17 = true ;
    while (syntaxRepeat_17) {
      switch (select_goil_5F_obj_5F_message_17 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_X) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_17 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'mask_attribute'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_attribute_i21_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_mask) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_mask) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_28837_0 ;
  nt_description_ (inLexique, automatic_var_28837_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_mask_5F_attribute_i21_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MASK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'min_max_attribute'            *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_min_5F_max_5F_attribute_i22_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_min,
                                GGS_luint64  &var_cas_max) {
  GGS_bool var_cas_has_min = GGS_bool (false) ;
  GGS_bool var_cas_has_max = GGS_bool (false) ;
  var_cas_min = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1084)) ;
  var_cas_max = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1085)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_goil_5F_obj_5F_message_18 (inLexique)) {
        case 2 : {
          const GGS_bool cond_29197 = var_cas_has_min ;
          if (cond_29197.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MIN is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1092)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MIN) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_min) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_29264_0 ;
          nt_description_ (inLexique, automatic_var_29264_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_min = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_29409 = var_cas_has_max ;
          if (cond_29409.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MAX is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1098)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MAX) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_max) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_29476_0 ;
          nt_description_ (inLexique, automatic_var_29476_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_max = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_29621 = (var_cas_has_min).operator_not () ;
  if (cond_29621.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MIN is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1105)) ;
  }
  const GGS_bool cond_29712 = (var_cas_has_max).operator_not () ;
  if (cond_29712.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MAX is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1108)) ;
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_min_5F_max_5F_attribute_i22_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_18 = true ;
    while (syntaxRepeat_18) {
      switch (select_goil_5F_obj_5F_message_18 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MIN) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MAX) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_18 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//       Implementation of production rule 'period_offset_attribute'         *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_period_5F_offset_5F_attribute_i23_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_period,
                                GGS_luint64  &var_cas_offset) {
  GGS_bool var_cas_has_period = GGS_bool (false) ;
  GGS_bool var_cas_has_offset = GGS_bool (false) ;
  var_cas_period = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1117)) ;
  var_cas_offset = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (1118)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_goil_5F_obj_5F_message_19 (inLexique)) {
        case 2 : {
          const GGS_bool cond_30091 = var_cas_has_period ;
          if (cond_30091.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("PERIOD is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1125)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PERIOD) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_period) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_30164_0 ;
          nt_description_ (inLexique, automatic_var_30164_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_period = GGS_bool (true) ;
          } break ;
        case 3 : {
          const GGS_bool cond_30318 = var_cas_has_offset ;
          if (cond_30318.isBuiltAndTrue ()) {
            GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("OFFSET is already defined for the filter") COMMA_SOURCE_FILE_AT_LINE (1131)) ;
          }
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OFFSET) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.assignFromAttribute_integerNumber (var_cas_offset) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          GGS_lstring  automatic_var_30391_0 ;
          nt_description_ (inLexique, automatic_var_30391_0) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          var_cas_has_offset = GGS_bool (true) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_30545 = (var_cas_has_period).operator_not () ;
  if (cond_30545.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("PERIOD is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1138)) ;
  }
  const GGS_bool cond_30642 = (var_cas_has_offset).operator_not () ;
  if (cond_30642.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("OFFSET is missing in the filter") COMMA_SOURCE_FILE_AT_LINE (1141)) ;
  }
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_period_5F_offset_5F_attribute_i23_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_19 = true ;
    while (syntaxRepeat_19) {
      switch (select_goil_5F_obj_5F_message_19 (inLexique)) {
        case 2 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_PERIOD) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        case 3 : {
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_OFFSET) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
          nt_description_parse (inLexique) ;
          inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
          } break ;
        default :
          syntaxRepeat_19 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'networkordercallout'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkordercallout_i24_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_net_order_callout) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_net_order_callout) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_30815_0 ;
  nt_description_ (inLexique, automatic_var_30815_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_networkordercallout_i24_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//           Implementation of production rule 'cpuordercallout'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cpuordercallout_i25_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_cpu_order_callout) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPUORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_a_5F_string (var_cas_cpu_order_callout) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  GGS_lstring  automatic_var_30981_0 ;
  nt_description_ (inLexique, automatic_var_30981_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_cpuordercallout_i25_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_CPUORDERCALLOUT) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'initialvalue'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_initialvalue_i26_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_basic_type  &var_cas_initial_value) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INITIALVALUE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_20 (inLexique)) {
    case 1 : {
      GGS_luint64  var_cas_ival ;
      inLexique.assignFromAttribute_integerNumber (var_cas_ival) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
      var_cas_initial_value = GGS_uint64_class ::constructor_new (inLexique, var_cas_ival.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1170)), var_cas_ival.reader_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (1170)) COMMA_SOURCE_FILE_AT_LINE (1170)) ;
      } break ;
    case 2 : {
      GGS_ldouble  var_cas_dval ;
      inLexique.assignFromAttribute_floatNumber (var_cas_dval) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_HERE) ;
      var_cas_initial_value = GGS_float_class ::constructor_new (inLexique, var_cas_dval.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1174)), var_cas_dval.reader_double (inLexique COMMA_SOURCE_FILE_AT_LINE (1174)) COMMA_SOURCE_FILE_AT_LINE (1174)) ;
      } break ;
    case 3 : {
      GGS_lstring  var_cas_sval ;
      inLexique.assignFromAttribute_a_5F_string (var_cas_sval) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      var_cas_initial_value = GGS_string_class ::constructor_new (inLexique, var_cas_sval.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (1178)), var_cas_sval.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (1178)) COMMA_SOURCE_FILE_AT_LINE (1178)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_31542_0 ;
  nt_description_ (inLexique, automatic_var_31542_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_initialvalue_i26_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_INITIALVALUE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_20 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_float_5F_number) COMMA_HERE) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_string) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'sendingmessage'             *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sendingmessage_i27_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_sending_message) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SENDINGMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_sending_message) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  GGS_lstring  automatic_var_31699_0 ;
  nt_description_ (inLexique, automatic_var_31699_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_sendingmessage_i27_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SENDINGMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'queuesize'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_queuesize_i28_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_queue_size) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_QUEUESIZE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_queue_size) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_31844_0 ;
  nt_description_ (inLexique, automatic_var_31844_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_queuesize_i28_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_QUEUESIZE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//                 Implementation of production rule 'link'                  *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_link_i29_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_link_obj  &var_cas_link) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_LINK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_21 (inLexique)) {
    case 1 : {
      GGS_lstring  var_cas_rcv_mess ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVEMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_rcv_mess) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_32051_0 ;
      nt_description_ (inLexique, automatic_var_32051_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_link = GGS_true_link ::constructor_new (inLexique, GGS_location (inLexique), var_cas_rcv_mess COMMA_SOURCE_FILE_AT_LINE (1211)) ;
      } break ;
    case 2 : {
      GGS_lstring  var_cas_net_mess ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.assignFromAttribute_att_5F_token (var_cas_net_mess) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      GGS_lstring  automatic_var_32250_0 ;
      nt_description_ (inLexique, automatic_var_32250_0) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      var_cas_link = GGS_false_link ::constructor_new (inLexique, GGS_location (inLexique), var_cas_net_mess COMMA_SOURCE_FILE_AT_LINE (1217)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_32361_0 ;
  nt_description_ (inLexique, automatic_var_32361_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_message::rule_goil_5F_obj_5F_message_link_i29_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_LINK) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_message_21 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_TRUE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVEMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      nt_description_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_FALSE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
      nt_description_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

