#---------------------------------------------------------------*

#--- Lib PM directory
ifdef LIBPM_PATH_ENV_VAR
  LIB_PM_PATH := $(LIBPM_PATH_ENV_VAR)
  $(info *** LIBPM path:"$(LIB_PM_PATH)" (given by LIBPM_PATH_ENV_VAR environment variable))
else
  ifeq ($(shell if [ -d ../libpm ] ; then echo 1 ; else echo 0 ; fi), 1) 
    LIB_PM_PATH := ../libpm
    $(info *** LIBPM path:"$(LIB_PM_PATH)" (libpm found at this path))
  else
    ifeq ($(shell if [ -d ../../libpm ] ; then echo 1 ; else echo 0 ; fi), 1) 
      LIB_PM_PATH := ../../libpm
      $(info *** LIBPM path:"$(LIB_PM_PATH)" (libpm found at this path))
    else
      $(error Cannot find libpm: neither ../libpm nor ../../libpm exist, LIBPM_PATH_ENV_VAR environment variable does not exist)
      LIB_PM_PATH :=
    endif
  endif
endif

#---------------------------------------------------------------*
#                                                               *
#     Project source files directories                          *
#                                                               *
#---------------------------------------------------------------*

SOURCES_DIR := ../galgas_sources/GALGAS_OUTPUT
SOURCES_DIR += ../galgas_sources/GALGAS_OUTPUT/include-files
SOURCES_DIR += ../hand_coded_sources


#---------------------------------------------------------------*
#                                                               *
#     Source files names list (without their actual path)       *
#                                                               *
#---------------------------------------------------------------*

SOURCES :=

#--- Files from libpm --------------------
include $(LIB_PM_PATH)/galgas/galgas_sources_for_makefile.mke

#--- Hand-coded files ---------------------


#--- Files generated by GALGAS ------------
SOURCES += template_semantics.cpp
SOURCES += template_scanner.cpp
SOURCES += template_expression_parser.cpp
SOURCES += template_parser.cpp
SOURCES += template_grammar.cpp
SOURCES += template_invocation.cpp
SOURCES += template_routines.cpp
SOURCES += template_functions.cpp
SOURCES += api_scanner.cpp
SOURCES += api_parser.cpp
SOURCES += api_grammar.cpp
SOURCES += goil_lexique.cpp
SOURCES += goil_options.cpp
SOURCES += goil_syntax.cpp
SOURCES += goil_semantics.cpp
SOURCES += goil_basic_types.cpp
SOURCES += goil_semantic_types.cpp
SOURCES += goil_imp_def.cpp
SOURCES += goil_routines.cpp
SOURCES += goil_check.cpp
SOURCES += defaults.cpp
SOURCES += goil_semantic_verification.cpp
SOURCES += scheduletable_verif.cpp
SOURCES += goil_alarm_verif.cpp
SOURCES += isrs_verif.cpp
SOURCES += tasks_verif.cpp
SOURCES += resources_verif.cpp
SOURCES += goil_app_verif.cpp
SOURCES += goil_env_verification.cpp
SOURCES += goil_message_verif.cpp
SOURCES += goil_types_os.cpp
SOURCES += goil_types_scheduletable.cpp
SOURCES += goil_types_app.cpp
SOURCES += goil_types_action.cpp
SOURCES += goil_types_root.cpp
SOURCES += goil_types_timing_prot.cpp
SOURCES += goil_types_resource.cpp
SOURCES += goil_types_isr.cpp
SOURCES += goil_types_task.cpp
SOURCES += goil_types_counter.cpp
SOURCES += goil_types_networkmessage.cpp
SOURCES += com_type.cpp
SOURCES += goil_obj_os.cpp
SOURCES += goil_obj_task.cpp
SOURCES += goil_obj_counter.cpp
SOURCES += goil_obj_appmode.cpp
SOURCES += goil_obj_alarm.cpp
SOURCES += goil_obj_resource.cpp
SOURCES += goil_obj_event.cpp
SOURCES += goil_obj_isr.cpp
SOURCES += goil_obj_message.cpp
SOURCES += goil_obj_networkmessage.cpp
SOURCES += goil_obj_com.cpp
SOURCES += goil_obj_ipdu.cpp
SOURCES += goil_obj_scheduletable.cpp
SOURCES += goil_obj_application.cpp
SOURCES += goil_timing_prot_attrs.cpp
SOURCES += system_config.cpp
SOURCES += config_type.cpp
SOURCES += goil_code_generation.cpp
SOURCES += goil_grammar.cpp
SOURCES += goil_file_level_include.cpp
SOURCES += goil_cpu_level_include.cpp
SOURCES += goil_program.cpp
SOURCES += cfg_lexique.cpp
SOURCES += cfg_syntax.cpp
SOURCES += cfg_grammar.cpp
SOURCES += cfg_types.cpp


#---------------------------------------------------------------*
