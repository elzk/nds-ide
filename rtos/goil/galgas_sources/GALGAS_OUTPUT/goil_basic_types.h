//---------------------------------------------------------------------------*
//                                                                           *
//                        File 'goil_basic_types.h'                          *
//                        Generated by version 2.0.0                         *
//                       july 7th, 2010, at 17h16'7"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_basic_types_DEFINED
#define goil_basic_types_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_basic_type ;
class cPtr_basic_type ;
class GGS_void ;
class cPtr_void ;
class GGS_uint32_class ;
class cPtr_uint32_class ;
class GGS_sint32_class ;
class cPtr_sint32_class ;
class GGS_uint64_class ;
class cPtr_uint64_class ;
class GGS_sint64_class ;
class cPtr_sint64_class ;
class GGS_float_class ;
class cPtr_float_class ;
class GGS_string_class ;
class cPtr_string_class ;
class GGS_bool_class ;
class cPtr_bool_class ;
class GGS_void_uint32_class ;
class cPtr_void_uint32_class ;
class GGS_void_sint32_class ;
class cPtr_void_sint32_class ;
class GGS_void_uint64_class ;
class cPtr_void_uint64_class ;
class GGS_void_sint64_class ;
class cPtr_void_sint64_class ;
class GGS_void_float_class ;
class cPtr_void_float_class ;
class GGS_void_string_class ;
class cPtr_void_string_class ;
class GGS_void_bool_class ;
class cPtr_void_bool_class ;
class GGS_auto_uint32_class ;
class cPtr_auto_uint32_class ;
class GGS_auto_sint32_class ;
class cPtr_auto_sint32_class ;
class GGS_auto_uint64_class ;
class cPtr_auto_uint64_class ;
class GGS_auto_sint64_class ;
class cPtr_auto_sint64_class ;
class GGS_auto_string_class ;
class cPtr_auto_string_class ;
class GGS_auto_bool_class ;
class cPtr_auto_bool_class ;
class GGS_list_uint32 ;
class GGS_list_sint32 ;
class GGS_list_uint64 ;
class GGS_list_sint64 ;
class GGS_number_set ;
class cPtr_number_set ;
class GGS_uint32_set ;
class cPtr_uint32_set ;
class GGS_sint32_set ;
class cPtr_sint32_set ;
class GGS_uint64_set ;
class cPtr_uint64_set ;
class GGS_sint64_set ;
class cPtr_sint64_set ;
class GGS_float_set ;
class cPtr_float_set ;
class GGS_uint32_empty_set ;
class cPtr_uint32_empty_set ;
class GGS_sint32_empty_set ;
class cPtr_sint32_empty_set ;
class GGS_uint64_empty_set ;
class cPtr_uint64_empty_set ;
class GGS_sint64_empty_set ;
class cPtr_sint64_empty_set ;
class GGS_float_empty_set ;
class cPtr_float_empty_set ;
class GGS_uint32_range ;
class cPtr_uint32_range ;
class GGS_uint32_list ;
class cPtr_uint32_list ;
class GGS_sint32_range ;
class cPtr_sint32_range ;
class GGS_sint32_list ;
class cPtr_sint32_list ;
class GGS_uint64_range ;
class cPtr_uint64_range ;
class GGS_uint64_list ;
class cPtr_uint64_list ;
class GGS_sint64_range ;
class cPtr_sint64_range ;
class GGS_sint64_list ;
class cPtr_sint64_list ;
class GGS_imp_type ;
class cPtr_imp_type ;
class GGS_imp_sca_type ;
class cPtr_imp_sca_type ;
class GGS_imp_obj_ref ;
class cPtr_imp_obj_ref ;
class GGS_void_type ;
class cPtr_void_type ;
class GGS_uint32_type ;
class cPtr_uint32_type ;
class GGS_sint32_type ;
class cPtr_sint32_type ;
class GGS_uint64_type ;
class cPtr_uint64_type ;
class GGS_sint64_type ;
class cPtr_sint64_type ;
class GGS_ident_map ;
class GGS_stringMap ;
class GGS_lstringMap ;
class GGS_prefix_map ;
class GGS_stringset_map ;
class GGS_ident_list ;
class GGS_ident_list_map ;
class GGS_oil_obj ;
class cPtr_oil_obj ;
class GGS_autostart_obj ;
class cPtr_autostart_obj ;
class GGS_autostart_void ;
class cPtr_autostart_void ;
class GGS_autostart_false ;
class cPtr_autostart_false ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_basic_type'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_basic_type ;

//---------------------------------------------------------------------------*

class GGS_basic_type : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_basic_type (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_basic_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_basic_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_basic_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_basic_type * getPtr (void) const {
    return (cPtr_basic_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_location (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_basic_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_basic_type * operator () (LOCATION_ARGS) const {
      return (cPtr_basic_type *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_basic_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__basic_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         GALGAS class 'GGS_void'                           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void ;

//---------------------------------------------------------------------------*

class GGS_void : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_void (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_void (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void * getPtr (void) const {
    return (cPtr_void *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void * operator () (LOCATION_ARGS) const {
      return (cPtr_void *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_uint32_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_class ;

//---------------------------------------------------------------------------*

class GGS_uint32_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_uint32_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_uint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_class * getPtr (void) const {
    return (cPtr_uint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'uint32_or_error'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_uint32_or_error ;

//---------------------------------------------------------------------------*

GGS_uint  function_uint32_or_error (C_Compiler &,
                                GGS_basic_type  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_sint32_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_class ;

//---------------------------------------------------------------------------*

class GGS_sint32_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_sint32_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_sint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_class * getPtr (void) const {
    return (cPtr_sint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint  reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_uint64_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_class ;

//---------------------------------------------------------------------------*

class GGS_uint64_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_uint64_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_uint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_class * getPtr (void) const {
    return (cPtr_uint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint64  reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'uint64OrError'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_uint64OrError ;

//---------------------------------------------------------------------------*

GGS_uint64  function_uint64OrError (C_Compiler &,
                                GGS_basic_type  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'luint64OrError'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_luint64OrError ;

//---------------------------------------------------------------------------*

GGS_luint64  function_luint64OrError (C_Compiler &,
                                GGS_basic_type  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_sint64_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_class ;

//---------------------------------------------------------------------------*

class GGS_sint64_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_sint64_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_sint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_class * getPtr (void) const {
    return (cPtr_sint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint64  reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_float_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_float_class ;

//---------------------------------------------------------------------------*

class GGS_float_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_float_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_float_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_float_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_float_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_float_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_double& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_float_class * getPtr (void) const {
    return (cPtr_float_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_double reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_float_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_float_class * operator () (LOCATION_ARGS) const {
      return (cPtr_float_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_float_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__float_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_string_class'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_string_class ;

//---------------------------------------------------------------------------*

class GGS_string_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_string_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_string_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_string_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_string_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_string_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_string_class * getPtr (void) const {
    return (cPtr_string_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_string reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_string_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_string_class * operator () (LOCATION_ARGS) const {
      return (cPtr_string_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_string_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__string_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_bool_class'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_bool_class ;

//---------------------------------------------------------------------------*

class GGS_bool_class : public GGS_basic_type {
//--- Default constructor
  public : inline GGS_bool_class (void) :
  GGS_basic_type () {}

//--- Pointer assignment constructor
  public : GGS_bool_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_bool_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_bool_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_bool_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_bool_class * getPtr (void) const {
    return (cPtr_bool_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_value (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_bool_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_bool_class * operator () (LOCATION_ARGS) const {
      return (cPtr_bool_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_bool_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__bool_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_uint32_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_uint32_class ;

//---------------------------------------------------------------------------*

class GGS_void_uint32_class : public GGS_uint32_class {
//--- Default constructor
  public : inline GGS_void_uint32_class (void) :
  GGS_uint32_class () {}

//--- Pointer assignment constructor
  public : GGS_void_uint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_uint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_uint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_uint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_uint32_class * getPtr (void) const {
    return (cPtr_void_uint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_uint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_uint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_uint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_uint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_uint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_sint32_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_sint32_class ;

//---------------------------------------------------------------------------*

class GGS_void_sint32_class : public GGS_sint32_class {
//--- Default constructor
  public : inline GGS_void_sint32_class (void) :
  GGS_sint32_class () {}

//--- Pointer assignment constructor
  public : GGS_void_sint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_sint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_sint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_sint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_sint32_class * getPtr (void) const {
    return (cPtr_void_sint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_sint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_sint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_sint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_sint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_sint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_uint64_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_uint64_class ;

//---------------------------------------------------------------------------*

class GGS_void_uint64_class : public GGS_uint64_class {
//--- Default constructor
  public : inline GGS_void_uint64_class (void) :
  GGS_uint64_class () {}

//--- Pointer assignment constructor
  public : GGS_void_uint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_uint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_uint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_uint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_uint64_class * getPtr (void) const {
    return (cPtr_void_uint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_uint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_uint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_uint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_uint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_uint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_sint64_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_sint64_class ;

//---------------------------------------------------------------------------*

class GGS_void_sint64_class : public GGS_sint64_class {
//--- Default constructor
  public : inline GGS_void_sint64_class (void) :
  GGS_sint64_class () {}

//--- Pointer assignment constructor
  public : GGS_void_sint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_sint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_sint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_sint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_sint64_class * getPtr (void) const {
    return (cPtr_void_sint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_sint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_sint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_sint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_sint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_sint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_float_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_float_class ;

//---------------------------------------------------------------------------*

class GGS_void_float_class : public GGS_float_class {
//--- Default constructor
  public : inline GGS_void_float_class (void) :
  GGS_float_class () {}

//--- Pointer assignment constructor
  public : GGS_void_float_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_float_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_float_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_float_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_double& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_float_class * getPtr (void) const {
    return (cPtr_void_float_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_float_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_float_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_float_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_float_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_float_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_string_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_string_class ;

//---------------------------------------------------------------------------*

class GGS_void_string_class : public GGS_string_class {
//--- Default constructor
  public : inline GGS_void_string_class (void) :
  GGS_string_class () {}

//--- Pointer assignment constructor
  public : GGS_void_string_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_string_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_string_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_string_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_string_class * getPtr (void) const {
    return (cPtr_void_string_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_string_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_string_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_string_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_string_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_string_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_void_bool_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_bool_class ;

//---------------------------------------------------------------------------*

class GGS_void_bool_class : public GGS_bool_class {
//--- Default constructor
  public : inline GGS_void_bool_class (void) :
  GGS_bool_class () {}

//--- Pointer assignment constructor
  public : GGS_void_bool_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_bool_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_bool_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_bool_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_bool_class * getPtr (void) const {
    return (cPtr_void_bool_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_bool_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_bool_class * operator () (LOCATION_ARGS) const {
      return (cPtr_void_bool_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_bool_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_bool_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_auto_uint32_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_uint32_class ;

//---------------------------------------------------------------------------*

class GGS_auto_uint32_class : public GGS_uint32_class {
//--- Default constructor
  public : inline GGS_auto_uint32_class (void) :
  GGS_uint32_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_uint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_uint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_uint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_uint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_uint32_class * getPtr (void) const {
    return (cPtr_auto_uint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_uint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_uint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_uint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_uint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_uint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_auto_sint32_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_sint32_class ;

//---------------------------------------------------------------------------*

class GGS_auto_sint32_class : public GGS_sint32_class {
//--- Default constructor
  public : inline GGS_auto_sint32_class (void) :
  GGS_sint32_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_sint32_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_sint32_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_sint32_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_sint32_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_sint32_class * getPtr (void) const {
    return (cPtr_auto_sint32_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_sint32_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_sint32_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_sint32_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_sint32_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_sint32_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_auto_uint64_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_uint64_class ;

//---------------------------------------------------------------------------*

class GGS_auto_uint64_class : public GGS_uint64_class {
//--- Default constructor
  public : inline GGS_auto_uint64_class (void) :
  GGS_uint64_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_uint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_uint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_uint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_uint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_uint64_class * getPtr (void) const {
    return (cPtr_auto_uint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_uint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_uint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_uint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_uint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_uint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_auto_sint64_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_sint64_class ;

//---------------------------------------------------------------------------*

class GGS_auto_sint64_class : public GGS_sint64_class {
//--- Default constructor
  public : inline GGS_auto_sint64_class (void) :
  GGS_sint64_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_sint64_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_sint64_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_sint64_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_sint64_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_sint64_class * getPtr (void) const {
    return (cPtr_auto_sint64_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_sint64_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_sint64_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_sint64_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_sint64_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_sint64_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_auto_string_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_string_class ;

//---------------------------------------------------------------------------*

class GGS_auto_string_class : public GGS_string_class {
//--- Default constructor
  public : inline GGS_auto_string_class (void) :
  GGS_string_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_string_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_string_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_string_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_string_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_string& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_string_class * getPtr (void) const {
    return (cPtr_auto_string_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_string_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_string_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_string_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_string_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_string_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_auto_bool_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_auto_bool_class ;

//---------------------------------------------------------------------------*

class GGS_auto_bool_class : public GGS_bool_class {
//--- Default constructor
  public : inline GGS_auto_bool_class (void) :
  GGS_bool_class () {}

//--- Pointer assignment constructor
  public : GGS_auto_bool_class (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_auto_bool_class (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_auto_bool_class
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_auto_bool_class constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_bool& argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_auto_bool_class * getPtr (void) const {
    return (cPtr_auto_bool_class *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_auto_bool_class * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_auto_bool_class * operator () (LOCATION_ARGS) const {
      return (cPtr_auto_bool_class *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_auto_bool_class castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__auto_bool_class ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@list_uint32'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_uint32 ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_list_uint32 ;

//---------------------------------------------------------------------------*

class GGS_list_uint32 : public AC_GGS_list {
  public : typedef elementOf_GGS_list_uint32 cElement ;

//--- Constructor 'emptyList'
  public : static GGS_list_uint32 constructor_emptyList (void) ;
  public : static GGS_list_uint32 constructor_listWithValue (const GGS_uint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_list_uint32 & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_list_uint32
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_list_uint32
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_list_uint32 * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_list_uint32 inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_list_uint32 operator_concat (const GGS_list_uint32 & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint 
  reader_valAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setValAtIndex (C_Compiler & inLexique,
                              const GGS_uint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_list_uint32 castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_list_uint32 & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint   & _val (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@list_sint32'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_sint32 ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_list_sint32 ;

//---------------------------------------------------------------------------*

class GGS_list_sint32 : public AC_GGS_list {
  public : typedef elementOf_GGS_list_sint32 cElement ;

//--- Constructor 'emptyList'
  public : static GGS_list_sint32 constructor_emptyList (void) ;
  public : static GGS_list_sint32 constructor_listWithValue (const GGS_sint & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_list_sint32 & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_list_sint32
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_list_sint32
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_list_sint32 * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_sint & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_sint & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_sint & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_sint & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_list_sint32 inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_sint & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_list_sint32 operator_concat (const GGS_list_sint32 & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_sint & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_sint & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_sint & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_sint 
  reader_valAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setValAtIndex (C_Compiler & inLexique,
                              const GGS_sint  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_list_sint32 castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_list_sint32 & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_sint   & _val (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@list_uint64'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_uint64 ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_list_uint64 ;

//---------------------------------------------------------------------------*

class GGS_list_uint64 : public AC_GGS_list {
  public : typedef elementOf_GGS_list_uint64 cElement ;

//--- Constructor 'emptyList'
  public : static GGS_list_uint64 constructor_emptyList (void) ;
  public : static GGS_list_uint64 constructor_listWithValue (const GGS_uint64 & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_list_uint64 & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_list_uint64
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_list_uint64
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_list_uint64 * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_uint64 & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_uint64 & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_uint64 & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_uint64 & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_list_uint64 inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_uint64 & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_list_uint64 operator_concat (const GGS_list_uint64 & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_uint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_uint64 
  reader_valAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setValAtIndex (C_Compiler & inLexique,
                              const GGS_uint64  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_list_uint64 castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_list_uint64 & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint64   & _val (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           list '@list_sint64'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_sint64 ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_list_sint64 ;

//---------------------------------------------------------------------------*

class GGS_list_sint64 : public AC_GGS_list {
  public : typedef elementOf_GGS_list_sint64 cElement ;

//--- Constructor 'emptyList'
  public : static GGS_list_sint64 constructor_emptyList (void) ;
  public : static GGS_list_sint64 constructor_listWithValue (const GGS_sint64 & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_list_sint64 & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_list_sint64
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_list_sint64
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_list_sint64 * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_sint64 & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_sint64 & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_sint64 & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_sint64 & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_list_sint64 inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_sint64 & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_list_sint64 operator_concat (const GGS_list_sint64 & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_sint64 & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_sint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_sint64 & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_sint64 
  reader_valAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setValAtIndex (C_Compiler & inLexique,
                              const GGS_sint64  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_list_sint64 castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_list_sint64 & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_sint64   & _val (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_number_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_number_set ;

//---------------------------------------------------------------------------*

class GGS_number_set : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_number_set (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_number_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_number_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_number_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_number_set * getPtr (void) const {
    return (cPtr_number_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_loc (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_number_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_number_set * operator () (LOCATION_ARGS) const {
      return (cPtr_number_set *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_number_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__number_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint32_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_set ;

//---------------------------------------------------------------------------*

class GGS_uint32_set : public GGS_number_set {
//--- Default constructor
  public : inline GGS_uint32_set (void) :
  GGS_number_set () {}

//--- Pointer assignment constructor
  public : GGS_uint32_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_set * getPtr (void) const {
    return (cPtr_uint32_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_set * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint32_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_set ;

//---------------------------------------------------------------------------*

class GGS_sint32_set : public GGS_number_set {
//--- Default constructor
  public : inline GGS_sint32_set (void) :
  GGS_number_set () {}

//--- Pointer assignment constructor
  public : GGS_sint32_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_set * getPtr (void) const {
    return (cPtr_sint32_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_set * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint64_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_set ;

//---------------------------------------------------------------------------*

class GGS_uint64_set : public GGS_number_set {
//--- Default constructor
  public : inline GGS_uint64_set (void) :
  GGS_number_set () {}

//--- Pointer assignment constructor
  public : GGS_uint64_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_set * getPtr (void) const {
    return (cPtr_uint64_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_set * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint64_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_set ;

//---------------------------------------------------------------------------*

class GGS_sint64_set : public GGS_number_set {
//--- Default constructor
  public : inline GGS_sint64_set (void) :
  GGS_number_set () {}

//--- Pointer assignment constructor
  public : GGS_sint64_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_set * getPtr (void) const {
    return (cPtr_sint64_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_set * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_float_set'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_float_set ;

//---------------------------------------------------------------------------*

class GGS_float_set : public GGS_number_set {
//--- Default constructor
  public : inline GGS_float_set (void) :
  GGS_number_set () {}

//--- Pointer assignment constructor
  public : GGS_float_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_float_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_float_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_float_set * getPtr (void) const {
    return (cPtr_float_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_float_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_float_set * operator () (LOCATION_ARGS) const {
      return (cPtr_float_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_float_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__float_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_uint32_empty_set'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_empty_set ;

//---------------------------------------------------------------------------*

class GGS_uint32_empty_set : public GGS_uint32_set {
//--- Default constructor
  public : inline GGS_uint32_empty_set (void) :
  GGS_uint32_set () {}

//--- Pointer assignment constructor
  public : GGS_uint32_empty_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_empty_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_empty_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint32_empty_set constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_empty_set * getPtr (void) const {
    return (cPtr_uint32_empty_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_empty_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_empty_set * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_empty_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_empty_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_empty_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_sint32_empty_set'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_empty_set ;

//---------------------------------------------------------------------------*

class GGS_sint32_empty_set : public GGS_sint32_set {
//--- Default constructor
  public : inline GGS_sint32_empty_set (void) :
  GGS_sint32_set () {}

//--- Pointer assignment constructor
  public : GGS_sint32_empty_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_empty_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_empty_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint32_empty_set constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_empty_set * getPtr (void) const {
    return (cPtr_sint32_empty_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_empty_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_empty_set * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_empty_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_empty_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_empty_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_uint64_empty_set'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_empty_set ;

//---------------------------------------------------------------------------*

class GGS_uint64_empty_set : public GGS_uint64_set {
//--- Default constructor
  public : inline GGS_uint64_empty_set (void) :
  GGS_uint64_set () {}

//--- Pointer assignment constructor
  public : GGS_uint64_empty_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_empty_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_empty_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64_empty_set constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_empty_set * getPtr (void) const {
    return (cPtr_uint64_empty_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_empty_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_empty_set * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_empty_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_empty_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_empty_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_sint64_empty_set'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_empty_set ;

//---------------------------------------------------------------------------*

class GGS_sint64_empty_set : public GGS_sint64_set {
//--- Default constructor
  public : inline GGS_sint64_empty_set (void) :
  GGS_sint64_set () {}

//--- Pointer assignment constructor
  public : GGS_sint64_empty_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_empty_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_empty_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64_empty_set constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_empty_set * getPtr (void) const {
    return (cPtr_sint64_empty_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_empty_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_empty_set * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_empty_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_empty_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_empty_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_float_empty_set'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_float_empty_set ;

//---------------------------------------------------------------------------*

class GGS_float_empty_set : public GGS_float_set {
//--- Default constructor
  public : inline GGS_float_empty_set (void) :
  GGS_float_set () {}

//--- Pointer assignment constructor
  public : GGS_float_empty_set (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_float_empty_set (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_float_empty_set
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_float_empty_set constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_float_empty_set * getPtr (void) const {
    return (cPtr_float_empty_set *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_float_empty_set * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_float_empty_set * operator () (LOCATION_ARGS) const {
      return (cPtr_float_empty_set *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_float_empty_set castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__float_empty_set ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_uint32_range'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_range ;

//---------------------------------------------------------------------------*

class GGS_uint32_range : public GGS_uint32_set {
//--- Default constructor
  public : inline GGS_uint32_range (void) :
  GGS_uint32_set () {}

//--- Pointer assignment constructor
  public : GGS_uint32_range (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_range (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_range
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint32_range constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint & argument_1,
                                const GGS_uint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_range * getPtr (void) const {
    return (cPtr_uint32_range *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint  reader_min (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint  reader_max (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_range * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_range * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_range *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_range castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_range ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint32_list'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_list ;

//---------------------------------------------------------------------------*

class GGS_uint32_list : public GGS_uint32_set {
//--- Default constructor
  public : inline GGS_uint32_list (void) :
  GGS_uint32_set () {}

//--- Pointer assignment constructor
  public : GGS_uint32_list (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_list (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_list
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint32_list constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_list_uint32 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_list * getPtr (void) const {
    return (cPtr_uint32_list *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_list_uint32  reader_li (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_list * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_list * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_list *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_list ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_sint32_range'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_range ;

//---------------------------------------------------------------------------*

class GGS_sint32_range : public GGS_sint32_set {
//--- Default constructor
  public : inline GGS_sint32_range (void) :
  GGS_sint32_set () {}

//--- Pointer assignment constructor
  public : GGS_sint32_range (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_range (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_range
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint32_range constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint & argument_1,
                                const GGS_sint & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_range * getPtr (void) const {
    return (cPtr_sint32_range *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint  reader_min (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sint  reader_max (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_range * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_range * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_range *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_range castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_range ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint32_list'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_list ;

//---------------------------------------------------------------------------*

class GGS_sint32_list : public GGS_sint32_set {
//--- Default constructor
  public : inline GGS_sint32_list (void) :
  GGS_sint32_set () {}

//--- Pointer assignment constructor
  public : GGS_sint32_list (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_list (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_list
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint32_list constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_list_sint32 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_list * getPtr (void) const {
    return (cPtr_sint32_list *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_list_sint32  reader_li (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_list * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_list * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_list *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_list ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_uint64_range'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_range ;

//---------------------------------------------------------------------------*

class GGS_uint64_range : public GGS_uint64_set {
//--- Default constructor
  public : inline GGS_uint64_range (void) :
  GGS_uint64_set () {}

//--- Pointer assignment constructor
  public : GGS_uint64_range (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_range (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_range
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64_range constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_uint64 & argument_1,
                                const GGS_uint64 & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_range * getPtr (void) const {
    return (cPtr_uint64_range *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint64  reader_min (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint64  reader_max (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_range * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_range * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_range *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_range castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_range ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint64_list'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_list ;

//---------------------------------------------------------------------------*

class GGS_uint64_list : public GGS_uint64_set {
//--- Default constructor
  public : inline GGS_uint64_list (void) :
  GGS_uint64_set () {}

//--- Pointer assignment constructor
  public : GGS_uint64_list (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_list (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_list
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64_list constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_list_uint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_list * getPtr (void) const {
    return (cPtr_uint64_list *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_list_uint64  reader_li (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_list * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_list * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_list *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_list ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_sint64_range'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_range ;

//---------------------------------------------------------------------------*

class GGS_sint64_range : public GGS_sint64_set {
//--- Default constructor
  public : inline GGS_sint64_range (void) :
  GGS_sint64_set () {}

//--- Pointer assignment constructor
  public : GGS_sint64_range (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_range (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_range
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64_range constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_sint64 & argument_1,
                                const GGS_sint64 & argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_range * getPtr (void) const {
    return (cPtr_sint64_range *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint64  reader_min (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sint64  reader_max (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_range * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_range * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_range *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_range castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_range ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint64_list'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_list ;

//---------------------------------------------------------------------------*

class GGS_sint64_list : public GGS_sint64_set {
//--- Default constructor
  public : inline GGS_sint64_list (void) :
  GGS_sint64_set () {}

//--- Pointer assignment constructor
  public : GGS_sint64_list (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_list (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_list
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64_list constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_list_sint64 & argument_1
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_list * getPtr (void) const {
    return (cPtr_sint64_list *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_list_sint64  reader_li (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_list * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_list * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_list *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_list ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_imp_type'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_imp_type ;

//---------------------------------------------------------------------------*

class GGS_imp_type : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_imp_type (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_imp_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_imp_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_imp_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_imp_type * getPtr (void) const {
    return (cPtr_imp_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_loc (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_lstring  reader_desc (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_bool reader_multiple (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_imp_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_imp_type * operator () (LOCATION_ARGS) const {
      return (cPtr_imp_type *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_imp_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__imp_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_imp_sca_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_imp_sca_type ;

//---------------------------------------------------------------------------*

class GGS_imp_sca_type : public GGS_imp_type {
//--- Default constructor
  public : inline GGS_imp_sca_type (void) :
  GGS_imp_type () {}

//--- Pointer assignment constructor
  public : GGS_imp_sca_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_imp_sca_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_imp_sca_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_imp_sca_type * getPtr (void) const {
    return (cPtr_imp_sca_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_bool reader_with_auto (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_imp_sca_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_imp_sca_type * operator () (LOCATION_ARGS) const {
      return (cPtr_imp_sca_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_imp_sca_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__imp_sca_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_imp_obj_ref'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_imp_obj_ref ;

//---------------------------------------------------------------------------*

class GGS_imp_obj_ref : public GGS_imp_type {
//--- Default constructor
  public : inline GGS_imp_obj_ref (void) :
  GGS_imp_type () {}

//--- Pointer assignment constructor
  public : GGS_imp_obj_ref (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_imp_obj_ref (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_imp_obj_ref
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_imp_obj_ref * getPtr (void) const {
    return (cPtr_imp_obj_ref *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_imp_obj_ref * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_imp_obj_ref * operator () (LOCATION_ARGS) const {
      return (cPtr_imp_obj_ref *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_imp_obj_ref castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__imp_obj_ref ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       GALGAS class 'GGS_void_type'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_type ;

//---------------------------------------------------------------------------*

class GGS_void_type : public GGS_imp_type {
//--- Default constructor
  public : inline GGS_void_type (void) :
  GGS_imp_type () {}

//--- Pointer assignment constructor
  public : GGS_void_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_type constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_type * getPtr (void) const {
    return (cPtr_void_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_type * operator () (LOCATION_ARGS) const {
      return (cPtr_void_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint32_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint32_type ;

//---------------------------------------------------------------------------*

class GGS_uint32_type : public GGS_imp_sca_type {
//--- Default constructor
  public : inline GGS_uint32_type (void) :
  GGS_imp_sca_type () {}

//--- Pointer assignment constructor
  public : GGS_uint32_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint32_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint32_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint32_type constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_uint32_class & argument_4,
                                const GGS_uint32_set & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint32_type * getPtr (void) const {
    return (cPtr_uint32_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint32_class  reader_def_val (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint32_set  reader_set (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint32_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint32_type * operator () (LOCATION_ARGS) const {
      return (cPtr_uint32_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint32_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint32_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint32_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint32_type ;

//---------------------------------------------------------------------------*

class GGS_sint32_type : public GGS_imp_sca_type {
//--- Default constructor
  public : inline GGS_sint32_type (void) :
  GGS_imp_sca_type () {}

//--- Pointer assignment constructor
  public : GGS_sint32_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint32_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint32_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint32_type constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_sint32_class & argument_4,
                                const GGS_sint32_set & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint32_type * getPtr (void) const {
    return (cPtr_sint32_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint32_class  reader_def_val (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sint32_set  reader_set (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint32_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint32_type * operator () (LOCATION_ARGS) const {
      return (cPtr_sint32_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint32_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint32_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_uint64_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_uint64_type ;

//---------------------------------------------------------------------------*

class GGS_uint64_type : public GGS_imp_sca_type {
//--- Default constructor
  public : inline GGS_uint64_type (void) :
  GGS_imp_sca_type () {}

//--- Pointer assignment constructor
  public : GGS_uint64_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_uint64_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_uint64_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_uint64_type constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_uint64_class & argument_4,
                                const GGS_uint64_set & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_uint64_type * getPtr (void) const {
    return (cPtr_uint64_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_uint64_class  reader_def_val (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_uint64_set  reader_set (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_uint64_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_uint64_type * operator () (LOCATION_ARGS) const {
      return (cPtr_uint64_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_uint64_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__uint64_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_sint64_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_sint64_type ;

//---------------------------------------------------------------------------*

class GGS_sint64_type : public GGS_imp_sca_type {
//--- Default constructor
  public : inline GGS_sint64_type (void) :
  GGS_imp_sca_type () {}

//--- Pointer assignment constructor
  public : GGS_sint64_type (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_sint64_type (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_sint64_type
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_sint64_type constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_lstring & argument_1,
                                const GGS_bool& argument_2,
                                const GGS_bool& argument_3,
                                const GGS_sint64_class & argument_4,
                                const GGS_sint64_set & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_sint64_type * getPtr (void) const {
    return (cPtr_sint64_type *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_sint64_class  reader_def_val (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_sint64_set  reader_set (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_sint64_type * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_sint64_type * operator () (LOCATION_ARGS) const {
      return (cPtr_sint64_type *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_sint64_type castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__sint64_type ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@ident_map'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ident_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ident_map ;

//---------------------------------------------------------------------------*

class GGS_ident_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_ident_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_ident_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_ident_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ident_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ident_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ident_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ident_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_ident_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_basic_type & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_basic_type &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_basic_type   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_basic_type & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_basic_type & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_ident_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ident_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ident_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ident_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ident_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_basic_type   & _value (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                             Map '@stringMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_stringMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringMap ;

//---------------------------------------------------------------------------*

class GGS_stringMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_stringMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_stringMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_stringMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_stringMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_stringMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_stringMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_stringMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_string& inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_string  & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_string& inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_string& outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_stringMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_stringMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_stringMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_stringMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_stringMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _value (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@lstringMap'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_lstringMap ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_lstringMap ;

//---------------------------------------------------------------------------*

class GGS_lstringMap : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_lstringMap cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_lstringMap & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_lstringMap & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_lstringMap castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_lstringMap * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_lstringMap * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_lstringMap constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_lstringMap constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_lstring & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_lstring &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_lstring   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_lstring & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_lstring & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_lstringMap constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_lstringMap & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_lstringMap reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_lstringMap & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_lstringMap & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _value (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@prefix_map'                              *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_prefix_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_prefix_map ;

//---------------------------------------------------------------------------*

class GGS_prefix_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_prefix_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_prefix_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_prefix_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_prefix_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_prefix_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_prefix_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_prefix_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_prefix_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_string& inValue0,
                                             const GGS_string& inValue1
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kInsertMessage_add [] ;

  public : static const utf32 kInsertMessage_insert_prefix [] ;

//--- 'add' Insert Modifier
  public : void modifier_add (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

//--- 'insert_prefix' Insert Modifier
  public : void modifier_insert_prefix (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_string&  inParameter0,
                                const GGS_string&  inParameter1 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_prefix [] ;

//--- 'prefix' Search Method
  public : void method_prefix (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_string  & outParameter0,
                                GGS_string  & outParameter1 COMMA_LOCATION_ARGS) const ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_string& inParameter0,
                                   const GGS_string& inParameter1,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_string& outParameter0,
                                   GGS_string& outParameter1,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_prefix_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_prefix_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_prefix_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_prefix_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_prefix_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_string  & _prefix (LOCATION_ARGS) const ;
    public : /* const */ GGS_string  & _tag_to_rep (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Map '@stringset_map'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_stringset_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_stringset_map ;

//---------------------------------------------------------------------------*

class GGS_stringset_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_stringset_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_stringset_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_stringset_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_stringset_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_stringset_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_stringset_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_stringset_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_stringset_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_stringset & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_delete [] ;

//--- 'delete' Remove Modifier
  public : void modifier_delete (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_stringset & outParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_add [] ;

//--- 'add' Insert Modifier
  public : void modifier_add (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_stringset &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_stringset   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_stringset & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_stringset & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_stringset & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_stringset_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_stringset_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_stringset_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_stringset_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_stringset_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_stringset   & _ids (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            list '@ident_list'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ident_list ;

//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ident_list ;

//---------------------------------------------------------------------------*

class GGS_ident_list : public AC_GGS_list {
  public : typedef elementOf_GGS_ident_list cElement ;

//--- Constructor 'emptyList'
  public : static GGS_ident_list constructor_emptyList (void) ;
  public : static GGS_ident_list constructor_listWithValue (const GGS_lstring & argument_0) ;
//--- Get sublist
  protected : void
  internalSubListWithRange (GGS_ident_list & ioList,
                            const PMSInt32 inFirstIndex,
                            const PMSInt32 inCount) const ;

  public : GGS_ident_list
  reader_subListWithRange (C_Compiler & inLexique,
                           const GGS_uint & inFirstIndex,
                           const GGS_uint & inCount
                           COMMA_LOCATION_ARGS) const ;

  public : GGS_ident_list
  reader_subListFromIndex (C_Compiler & inLexique,
                           const GGS_uint & inIndex
                           COMMA_LOCATION_ARGS) const ;

//--- Get first object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalFirstObject () ;
  }
//--- Get last object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalLastObject () ;
  }
//--- Operator () used for method call
  public : const GGS_ident_list * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'first'
  public : void method_first (C_Compiler & inLexique,
                              GGS_lstring & _out_0
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'last'
  public : void method_last (C_Compiler & inLexique,
                             GGS_lstring & _out_0
                             COMMA_LOCATION_ARGS) const ;
//--- Modifier 'popLast'
  public : void modifier_popLast (C_Compiler & inLexique,
                                GGS_lstring & _out_0
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popFirst'
  public : void modifier_popFirst (C_Compiler & inLexique,
                                 GGS_lstring & _out_0
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_ident_list inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_lstring & argument_0) ;
//--- Handling '.' GALGAS operator
  public : GGS_ident_list operator_concat (const GGS_ident_list & inOperand) const ;
  public : void modifier_prependValue (C_Compiler & inLexique,
                                const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;
//--- Internal Methods
  protected : void internalAppendValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

  protected : void internalPrependValues (const GGS_lstring & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- List Insulation
  protected : void insulateList (void) ;

//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--------------------------------- Direct Read Access
  public : GGS_lstring 
  reader_obj_nameAtIndex (C_Compiler & inLexique, const GGS_uint & inIndex COMMA_LOCATION_ARGS) const ;

//--------------------------------- Direct Write Access
  public : void
  modifier_setObj_nameAtIndex (C_Compiler & inLexique,
                              const GGS_lstring  & inObject,
                              const GGS_uint & inIndex
                              COMMA_LOCATION_ARGS) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ident_list castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- List Enumerator
  public : class cEnumerator : public cAbstractListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_ident_list & inList,
                                 const bool inAscending) :
    cAbstractListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_lstring   & _obj_name (LOCATION_ARGS) const ;
  } ;

} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Map '@ident_list_map'                            *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ident_list_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_ident_list_map ;

//---------------------------------------------------------------------------*

class GGS_ident_list_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_ident_list_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_ident_list_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_ident_list_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_ident_list_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_ident_list_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_ident_list_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_ident_list_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_ident_list_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_ident_list & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_delete [] ;

//--- 'delete' Remove Modifier
  public : void modifier_delete (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ident_list & outParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_add [] ;

//--- 'add' Insert Modifier
  public : void modifier_add (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_ident_list &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_ident_list   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_ident_list & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_ident_list & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_ident_list & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_ident_list_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_ident_list_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_ident_list_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_ident_list_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_ident_list_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_ident_list   & _objs (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        GALGAS class 'GGS_oil_obj'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_oil_obj ;

//---------------------------------------------------------------------------*

class GGS_oil_obj : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_oil_obj (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_oil_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_oil_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_oil_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_oil_obj * getPtr (void) const {
    return (cPtr_oil_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_lstring  reader_desc (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_oil_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_oil_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_oil_obj *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_oil_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__oil_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     GALGAS class 'GGS_autostart_obj'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_autostart_obj ;

//---------------------------------------------------------------------------*

class GGS_autostart_obj : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_autostart_obj (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_autostart_obj (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_autostart_obj (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_autostart_obj
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_autostart_obj * getPtr (void) const {
    return (cPtr_autostart_obj *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_location (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_autostart_obj * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_autostart_obj * operator () (LOCATION_ARGS) const {
      return (cPtr_autostart_obj *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_autostart_obj castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__autostart_obj ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_autostart_void'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_autostart_void ;

//---------------------------------------------------------------------------*

class GGS_autostart_void : public GGS_autostart_obj {
//--- Default constructor
  public : inline GGS_autostart_void (void) :
  GGS_autostart_obj () {}

//--- Pointer assignment constructor
  public : GGS_autostart_void (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_autostart_void (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_autostart_void
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_autostart_void constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_autostart_void * getPtr (void) const {
    return (cPtr_autostart_void *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_autostart_void * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_autostart_void * operator () (LOCATION_ARGS) const {
      return (cPtr_autostart_void *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_autostart_void castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__autostart_void ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_autostart_false'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_autostart_false ;

//---------------------------------------------------------------------------*

class GGS_autostart_false : public GGS_autostart_obj {
//--- Default constructor
  public : inline GGS_autostart_false (void) :
  GGS_autostart_obj () {}

//--- Pointer assignment constructor
  public : GGS_autostart_false (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_autostart_false (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_autostart_false
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_autostart_false constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_autostart_false * getPtr (void) const {
    return (cPtr_autostart_false *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_autostart_false * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_autostart_false * operator () (LOCATION_ARGS) const {
      return (cPtr_autostart_false *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_autostart_false castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__autostart_false ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'empty_lstring'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_empty_lstring ;

//---------------------------------------------------------------------------*

GGS_lstring  function_empty_lstring (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Function 'void_obj'                             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_void_obj ;

//---------------------------------------------------------------------------*

GGS_basic_type  function_void_obj (C_Compiler & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'set_uint32'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_set_uint32 (C_Compiler &,
                                GGS_basic_type  &,
                                GGS_luint64  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'set_uint64'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_set_uint64 (C_Compiler &,
                                GGS_basic_type  &,
                                GGS_luint64  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'set_lstring'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_set_lstring (C_Compiler &,
                                GGS_basic_type  &,
                                GGS_lstring  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'set_bool'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_set_bool (C_Compiler &,
                                GGS_basic_type  &,
                                GGS_lbool  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Function 'getBool'                             *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_getBool ;

//---------------------------------------------------------------------------*

GGS_bool function_getBool (C_Compiler &,
                                const GGS_basic_type  ,
                                const GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Function 'yes_no'                              *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_yes_no ;

//---------------------------------------------------------------------------*

GGS_string function_yes_no (C_Compiler &,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Function 'true_false'                            *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_true_false ;

//---------------------------------------------------------------------------*

GGS_string function_true_false (C_Compiler &,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Function 'bool_define'                           *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_bool_define ;

//---------------------------------------------------------------------------*

GGS_string function_bool_define (C_Compiler &,
                                GGS_string ,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'bool_make_define'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_bool_make_define ;

//---------------------------------------------------------------------------*

GGS_string function_bool_make_define (C_Compiler &,
                                GGS_string ,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'bool_class_define'                        *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_bool_class_define ;

//---------------------------------------------------------------------------*

GGS_string function_bool_class_define (C_Compiler &,
                                GGS_string ,
                                GGS_basic_type  ,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Function 'bool_class_make_define'                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_bool_class_make_define ;

//---------------------------------------------------------------------------*

GGS_string function_bool_class_make_define (C_Compiler &,
                                GGS_string ,
                                GGS_basic_type  ,
                                GGS_bool  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'bool_flag'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_bool_flag (C_Compiler &,
                                GGS_string &,
                                GGS_basic_type  ,
                                GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                              Routine 'p_bt'                               *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_p_bt (C_Compiler &,
                                const GGS_basic_type   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Function 'luint64_value'                          *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_luint64_value ;

//---------------------------------------------------------------------------*

GGS_luint64  function_luint64_value (C_Compiler &,
                                const GGS_uint64_class   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_basic_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_basic_type : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_basic_type (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  location ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        abstract class 'cPtr_void'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_void (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint32_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_uint32_class (const GGS_location & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint  value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint32_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_sint32_class (const GGS_location & ,
                                const GGS_sint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint  value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint64_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_uint64_class (const GGS_location & ,
                                const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint64  value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint64_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_sint64_class (const GGS_location & ,
                                const GGS_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint64  value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_float_class'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_float_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_float_class (const GGS_location & ,
                                const GGS_double& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_double value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_string_class'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_string_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_string_class (const GGS_location & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_string value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_bool_class'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_bool_class : public cPtr_basic_type {
  private : typedef cPtr_basic_type inherited ;
//--- Constructor
  public : cPtr_bool_class (const GGS_location & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool value ;
//--- Method 'string'
  public : virtual void method_string (C_Compiler &,
                                GGS_string& 
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_void_uint32_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_uint32_class : public cPtr_uint32_class {
  private : typedef cPtr_uint32_class inherited ;
//--- Constructor
  public : cPtr_void_uint32_class (const GGS_location & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_void_sint32_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_sint32_class : public cPtr_sint32_class {
  private : typedef cPtr_sint32_class inherited ;
//--- Constructor
  public : cPtr_void_sint32_class (const GGS_location & ,
                                const GGS_sint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_void_uint64_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_uint64_class : public cPtr_uint64_class {
  private : typedef cPtr_uint64_class inherited ;
//--- Constructor
  public : cPtr_void_uint64_class (const GGS_location & ,
                                const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_void_sint64_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_sint64_class : public cPtr_sint64_class {
  private : typedef cPtr_sint64_class inherited ;
//--- Constructor
  public : cPtr_void_sint64_class (const GGS_location & ,
                                const GGS_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_void_float_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_float_class : public cPtr_float_class {
  private : typedef cPtr_float_class inherited ;
//--- Constructor
  public : cPtr_void_float_class (const GGS_location & ,
                                const GGS_double& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_void_string_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_string_class : public cPtr_string_class {
  private : typedef cPtr_string_class inherited ;
//--- Constructor
  public : cPtr_void_string_class (const GGS_location & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_void_bool_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_bool_class : public cPtr_bool_class {
  private : typedef cPtr_bool_class inherited ;
//--- Constructor
  public : cPtr_void_bool_class (const GGS_location & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_auto_uint32_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_uint32_class : public cPtr_uint32_class {
  private : typedef cPtr_uint32_class inherited ;
//--- Constructor
  public : cPtr_auto_uint32_class (const GGS_location & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_auto_sint32_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_sint32_class : public cPtr_sint32_class {
  private : typedef cPtr_sint32_class inherited ;
//--- Constructor
  public : cPtr_auto_sint32_class (const GGS_location & ,
                                const GGS_sint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_auto_uint64_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_uint64_class : public cPtr_uint64_class {
  private : typedef cPtr_uint64_class inherited ;
//--- Constructor
  public : cPtr_auto_uint64_class (const GGS_location & ,
                                const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_auto_sint64_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_sint64_class : public cPtr_sint64_class {
  private : typedef cPtr_sint64_class inherited ;
//--- Constructor
  public : cPtr_auto_sint64_class (const GGS_location & ,
                                const GGS_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_auto_string_class'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_string_class : public cPtr_string_class {
  private : typedef cPtr_string_class inherited ;
//--- Constructor
  public : cPtr_auto_string_class (const GGS_location & ,
                                const GGS_string& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_auto_bool_class'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_auto_bool_class : public cPtr_bool_class {
  private : typedef cPtr_bool_class inherited ;
//--- Constructor
  public : cPtr_auto_bool_class (const GGS_location & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@list_uint32'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_uint32 : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint  val ;
//--- Constructor
  public : elementOf_GGS_list_uint32 (const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_list_uint32 * nextObject (void) const { return (elementOf_GGS_list_uint32 *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_list_uint32 * previousObject (void) const { return (elementOf_GGS_list_uint32 *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_list_uint32 ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@list_sint32'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_sint32 : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_sint  val ;
//--- Constructor
  public : elementOf_GGS_list_sint32 (const GGS_sint & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_list_sint32 * nextObject (void) const { return (elementOf_GGS_list_sint32 *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_list_sint32 * previousObject (void) const { return (elementOf_GGS_list_sint32 *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_list_sint32 ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@list_uint64'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_uint64 : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_uint64  val ;
//--- Constructor
  public : elementOf_GGS_list_uint64 (const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_list_uint64 * nextObject (void) const { return (elementOf_GGS_list_uint64 *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_list_uint64 * previousObject (void) const { return (elementOf_GGS_list_uint64 *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_list_uint64 ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@list_sint64'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_list_sint64 : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_sint64  val ;
//--- Constructor
  public : elementOf_GGS_list_sint64 (const GGS_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_list_sint64 * nextObject (void) const { return (elementOf_GGS_list_sint64 *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_list_sint64 * previousObject (void) const { return (elementOf_GGS_list_sint64 *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_list_sint64 ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_number_set'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_number_set : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_number_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  loc ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_uint32_set'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_set : public cPtr_number_set {
  private : typedef cPtr_number_set inherited ;
//--- Constructor
  public : cPtr_uint32_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_sint32_set'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_set : public cPtr_number_set {
  private : typedef cPtr_number_set inherited ;
//--- Constructor
  public : cPtr_sint32_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_uint64_set'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_set : public cPtr_number_set {
  private : typedef cPtr_number_set inherited ;
//--- Constructor
  public : cPtr_uint64_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_sint64_set'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_set : public cPtr_number_set {
  private : typedef cPtr_number_set inherited ;
//--- Constructor
  public : cPtr_sint64_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_float_set'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_float_set : public cPtr_number_set {
  private : typedef cPtr_number_set inherited ;
//--- Constructor
  public : cPtr_float_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_uint32_empty_set'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_empty_set : public cPtr_uint32_set {
  private : typedef cPtr_uint32_set inherited ;
//--- Constructor
  public : cPtr_uint32_empty_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_sint32_empty_set'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_empty_set : public cPtr_sint32_set {
  private : typedef cPtr_sint32_set inherited ;
//--- Constructor
  public : cPtr_sint32_empty_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_uint64_empty_set'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_empty_set : public cPtr_uint64_set {
  private : typedef cPtr_uint64_set inherited ;
//--- Constructor
  public : cPtr_uint64_empty_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_sint64_empty_set'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_empty_set : public cPtr_sint64_set {
  private : typedef cPtr_sint64_set inherited ;
//--- Constructor
  public : cPtr_sint64_empty_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_float_empty_set'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_float_empty_set : public cPtr_float_set {
  private : typedef cPtr_float_set inherited ;
//--- Constructor
  public : cPtr_float_empty_set (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint32_range'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_range : public cPtr_uint32_set {
  private : typedef cPtr_uint32_set inherited ;
//--- Constructor
  public : cPtr_uint32_range (const GGS_location & ,
                                const GGS_uint & ,
                                const GGS_uint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint  min ;
  public : GGS_uint  max ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint32_list'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_list : public cPtr_uint32_set {
  private : typedef cPtr_uint32_set inherited ;
//--- Constructor
  public : cPtr_uint32_list (const GGS_location & ,
                                const GGS_list_uint32 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_list_uint32  li ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint32_range'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_range : public cPtr_sint32_set {
  private : typedef cPtr_sint32_set inherited ;
//--- Constructor
  public : cPtr_sint32_range (const GGS_location & ,
                                const GGS_sint & ,
                                const GGS_sint & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint  min ;
  public : GGS_sint  max ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint32_list'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_list : public cPtr_sint32_set {
  private : typedef cPtr_sint32_set inherited ;
//--- Constructor
  public : cPtr_sint32_list (const GGS_location & ,
                                const GGS_list_sint32 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_list_sint32  li ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint64_range'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_range : public cPtr_uint64_set {
  private : typedef cPtr_uint64_set inherited ;
//--- Constructor
  public : cPtr_uint64_range (const GGS_location & ,
                                const GGS_uint64 & ,
                                const GGS_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint64  min ;
  public : GGS_uint64  max ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint64_list'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_list : public cPtr_uint64_set {
  private : typedef cPtr_uint64_set inherited ;
//--- Constructor
  public : cPtr_uint64_list (const GGS_location & ,
                                const GGS_list_uint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_list_uint64  li ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint64_range'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_range : public cPtr_sint64_set {
  private : typedef cPtr_sint64_set inherited ;
//--- Constructor
  public : cPtr_sint64_range (const GGS_location & ,
                                const GGS_sint64 & ,
                                const GGS_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint64  min ;
  public : GGS_sint64  max ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint64_list'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_list : public cPtr_sint64_set {
  private : typedef cPtr_sint64_set inherited ;
//--- Constructor
  public : cPtr_sint64_list (const GGS_location & ,
                                const GGS_list_sint64 & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_list_sint64  li ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_imp_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_imp_type : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_imp_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  loc ;
  public : GGS_lstring  desc ;
  public : GGS_bool multiple ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_imp_sca_type'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_imp_sca_type : public cPtr_imp_type {
  private : typedef cPtr_imp_type inherited ;
//--- Constructor
  public : cPtr_imp_sca_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_bool with_auto ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_imp_obj_ref'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_imp_obj_ref : public cPtr_imp_type {
  private : typedef cPtr_imp_type inherited ;
//--- Constructor
  public : cPtr_imp_obj_ref (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     abstract class 'cPtr_void_type'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_type : public cPtr_imp_type {
  private : typedef cPtr_imp_type inherited ;
//--- Constructor
  public : cPtr_void_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint32_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint32_type : public cPtr_imp_sca_type {
  private : typedef cPtr_imp_sca_type inherited ;
//--- Constructor
  public : cPtr_uint32_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_uint32_class & ,
                                const GGS_uint32_set & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint32_class  def_val ;
  public : GGS_uint32_set  set ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint32_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint32_type : public cPtr_imp_sca_type {
  private : typedef cPtr_imp_sca_type inherited ;
//--- Constructor
  public : cPtr_sint32_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_sint32_class & ,
                                const GGS_sint32_set & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint32_class  def_val ;
  public : GGS_sint32_set  set ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_uint64_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_uint64_type : public cPtr_imp_sca_type {
  private : typedef cPtr_imp_sca_type inherited ;
//--- Constructor
  public : cPtr_uint64_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_uint64_class & ,
                                const GGS_uint64_set & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_uint64_class  def_val ;
  public : GGS_uint64_set  set ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_sint64_type'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_sint64_type : public cPtr_imp_sca_type {
  private : typedef cPtr_imp_sca_type inherited ;
//--- Constructor
  public : cPtr_sint64_type (const GGS_location & ,
                                const GGS_lstring & ,
                                const GGS_bool& ,
                                const GGS_bool& ,
                                const GGS_sint64_class & ,
                                const GGS_sint64_set & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_sint64_class  def_val ;
  public : GGS_sint64_set  set ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@ident_map'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ident_map {
  public : GGS_basic_type  value ;

  public : e_ident_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ident_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ident_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_ident_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_ident_map * nextObject (void) const { return (elementOf_GGS_ident_map *) mNextItem ; }
  public : inline elementOf_GGS_ident_map * infObject (void) const { return (elementOf_GGS_ident_map *) mInfPtr ; }
  public : inline elementOf_GGS_ident_map * supObject (void) const { return (elementOf_GGS_ident_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ident_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@stringMap'                         *
//                                                                           *
//---------------------------------------------------------------------------*

class e_stringMap {
  public : GGS_string value ;

  public : e_stringMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_stringMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_stringMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_stringMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_stringMap * nextObject (void) const { return (elementOf_GGS_stringMap *) mNextItem ; }
  public : inline elementOf_GGS_stringMap * infObject (void) const { return (elementOf_GGS_stringMap *) mInfPtr ; }
  public : inline elementOf_GGS_stringMap * supObject (void) const { return (elementOf_GGS_stringMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_stringMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@lstringMap'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_lstringMap {
  public : GGS_lstring  value ;

  public : e_lstringMap (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_lstringMap : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_lstringMap (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_lstringMap & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_lstringMap * nextObject (void) const { return (elementOf_GGS_lstringMap *) mNextItem ; }
  public : inline elementOf_GGS_lstringMap * infObject (void) const { return (elementOf_GGS_lstringMap *) mInfPtr ; }
  public : inline elementOf_GGS_lstringMap * supObject (void) const { return (elementOf_GGS_lstringMap *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_lstringMap mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Element of map '@prefix_map'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_prefix_map {
  public : GGS_string prefix ;
  public : GGS_string tag_to_rep ;

  public : e_prefix_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_prefix_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_prefix_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_prefix_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_prefix_map * nextObject (void) const { return (elementOf_GGS_prefix_map *) mNextItem ; }
  public : inline elementOf_GGS_prefix_map * infObject (void) const { return (elementOf_GGS_prefix_map *) mInfPtr ; }
  public : inline elementOf_GGS_prefix_map * supObject (void) const { return (elementOf_GGS_prefix_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_prefix_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@stringset_map'                       *
//                                                                           *
//---------------------------------------------------------------------------*

class e_stringset_map {
  public : GGS_stringset  ids ;

  public : e_stringset_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_stringset_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_stringset_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_stringset_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_stringset_map * nextObject (void) const { return (elementOf_GGS_stringset_map *) mNextItem ; }
  public : inline elementOf_GGS_stringset_map * infObject (void) const { return (elementOf_GGS_stringset_map *) mInfPtr ; }
  public : inline elementOf_GGS_stringset_map * supObject (void) const { return (elementOf_GGS_stringset_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_stringset_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of list '@ident_list'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_ident_list : public AC_GGS_list::cListElement {
//--- Attributes
  public : GGS_lstring  obj_name ;
//--- Constructor
  public : elementOf_GGS_ident_list (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Access to next
  public : inline elementOf_GGS_ident_list * nextObject (void) const { return (elementOf_GGS_ident_list *) internalNextItem () ; }

//--- Access to previous
  public : inline elementOf_GGS_ident_list * previousObject (void) const { return (elementOf_GGS_ident_list *) internalPreviousItem () ; }

//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cListElement * inOperand) const ;

//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Friend class declaration
  friend class GGS_ident_list ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Element of map '@ident_list_map'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class e_ident_list_map {
  public : GGS_ident_list  objs ;

  public : e_ident_list_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_ident_list_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_ident_list_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_ident_list_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_ident_list_map * nextObject (void) const { return (elementOf_GGS_ident_list_map *) mNextItem ; }
  public : inline elementOf_GGS_ident_list_map * infObject (void) const { return (elementOf_GGS_ident_list_map *) mInfPtr ; }
  public : inline elementOf_GGS_ident_list_map * supObject (void) const { return (elementOf_GGS_ident_list_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_ident_list_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      abstract class 'cPtr_oil_obj'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_oil_obj : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_oil_obj (const GGS_lstring & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_lstring  desc ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_autostart_obj'                     *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_autostart_obj : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_autostart_obj (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  location ;
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   abstract class 'cPtr_autostart_void'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_autostart_void : public cPtr_autostart_obj {
  private : typedef cPtr_autostart_obj inherited ;
//--- Constructor
  public : cPtr_autostart_void (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_autostart_false'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_autostart_false : public cPtr_autostart_obj {
  private : typedef cPtr_autostart_obj inherited ;
//--- Constructor
  public : cPtr_autostart_false (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
