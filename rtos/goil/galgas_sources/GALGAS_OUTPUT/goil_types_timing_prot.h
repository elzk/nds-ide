//---------------------------------------------------------------------------*
//                                                                           *
//                     File 'goil_types_timing_prot.h'                       *
//                        Generated by version 2.0.0                         *
//                       july 7th, 2010, at 17h16'16"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef goil_types_timing_prot_DEFINED
#define goil_types_timing_prot_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "cfg_types.h"
#include "goil_basic_types.h"
#include "goil_routines.h"
#include "goil_types_resource.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_rezlock_map ;
class GGS_timing_prot ;
class cPtr_timing_prot ;
class GGS_void_timing_prot ;
class cPtr_void_timing_prot ;
class GGS_false_timing_prot ;
class cPtr_false_timing_prot ;
class GGS_timing_prot_task ;
class cPtr_timing_prot_task ;
class GGS_timing_prot_isr ;
class cPtr_timing_prot_isr ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Map '@rezlock_map'                             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_rezlock_map ;

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_rezlock_map ;

//---------------------------------------------------------------------------*

class GGS_rezlock_map : public AC_GGS_map {
//--- Element Class
  public : typedef elementOf_GGS_rezlock_map cElement ;

//--- Get pointers
  public : inline cElement * firstObject (void) const { return (cElement *) internalFirstObject () ; }
  public : inline cElement * lastObject (void) const { return (cElement *) internalLastObject () ; }

//--- Comparison methods
  public : GGS_bool operator_isEqual (const GGS_rezlock_map & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_rezlock_map & inOperand) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_rezlock_map castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Create an element
  protected : virtual AC_galgas_map_element *
  new_element (const GGS_lstring & inKey, void * inInfo, const PMUInt32 inInitialState) ;

//--- Assign information to an existing element
  protected : virtual void
  assignInfo (AC_galgas_map_element * inPtr, void * inInfo) ;

//--- Enter an index
  public : void enterIndex (const GGS_string & inKey,
                            AC_galgas_index_core & outIndex) ;

//--- Get object pointer (for method call)
  public : inline GGS_rezlock_map * operator () (UNUSED_LOCATION_ARGS) { return this ; }
  public : inline const GGS_rezlock_map * operator () (UNUSED_LOCATION_ARGS) const { return this ; }

//--- 'emptyMap' constructor
  public : static GGS_rezlock_map constructor_emptyMap (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;

//--- 'mapWithKeyAndValue' constructor
  public : static GGS_rezlock_map constructor_mapWithKeyAndValue (C_Compiler & inLexique,
                                             const GGS_lstring & inKey
,
                                             const GGS_uint64 & inValue0
                                             COMMA_LOCATION_ARGS) ;

//--- Method used for duplicate a map
  protected : virtual void internalInsertForDuplication (AC_galgas_map_element * inPtr) ;

//--- Modifiers "set'Value'ForKey"

  public : static const utf32 kRemoveMessage_del [] ;

//--- 'del' Remove Modifier
  public : void modifier_del (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint64 & outParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kInsertMessage_put [] ;

//--- 'put' Insert Modifier
  public : void modifier_put (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                const GGS_uint64 &  inParameter0 COMMA_LOCATION_ARGS) ;

  public : static const utf32 kSearchMessage_get [] ;

//--- 'get' Search Method
  public : void method_get (C_Compiler & inLexique,
                                const GGS_lstring & inKey,
                                GGS_uint64   & outParameter0 COMMA_LOCATION_ARGS) const ;
//--- Internal method for removing an element
  protected : void removeElement (C_Compiler & inLexique,
                                   const utf32 * inErrorMessage,
                                   const GGS_lstring & inKey,
                                   GGS_uint64 & outParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for inserting an element
  protected : void insertElement (C_Compiler & inLexique,
                                  const PMUInt32 inInitialState,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   const GGS_uint64 & inParameter0,
                                   GGS_luint * outIndex
                                   COMMA_LOCATION_ARGS) ;
//--- Internal method for searching for an element
  protected : void searchElement (C_Compiler & inLexique,
                                  const PMUInt32 inActionIndex,
                                  const utf32 * inErrorMessage,
                                  const GGS_lstring & inKey,
                                   GGS_uint64 & outParameter0,
                                  GGS_luint * outIndex
                                  COMMA_LOCATION_ARGS) const ;
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
  public : static GGS_rezlock_map constructor_mapWithMapToOverride (C_Compiler & inLexique,
                                            const GGS_rezlock_map & inMapToOverride
                                            COMMA_LOCATION_ARGS) ;
  public : GGS_rezlock_map reader_overriddenMap (C_Compiler & inLexique
                                            COMMA_LOCATION_ARGS) const ;

//--------------------------------- Key stringset (for map with an associated automaton)
//--------------------------------- Map Enumerator
  public : class cEnumerator : public cAbstractMapEnumerator {
  //--- Constructors
    public : inline cEnumerator (const GGS_rezlock_map & inMap,
                                 const bool inAscending) :
    cAbstractMapEnumerator (inMap, inAscending) {
    }
    public : inline cEnumerator (const GGS_rezlock_map & inMap) :
    cAbstractMapEnumerator (inMap) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_uint64   & _time (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'gen_rez_table'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_gen_rez_table (C_Compiler &,
                                GGS_rezlock_map  ,
                                GGS_resource_map  ,
                                GGS_uint64  ,
                                GGS_string & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      GALGAS class 'GGS_timing_prot'                       *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_timing_prot ;

//---------------------------------------------------------------------------*

class GGS_timing_prot : public AC_GGS_class {
//--- Default constructor
  public : inline GGS_timing_prot (void) :
  AC_GGS_class () {}

//--- Pointer assignment constructor
  public : GGS_timing_prot (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_timing_prot (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_timing_prot
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_timing_prot * getPtr (void) const {
    return (cPtr_timing_prot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_location  reader_location (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_timing_prot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_timing_prot * operator () (LOCATION_ARGS) const {
      return (cPtr_timing_prot *) mPointer ;
    }
  #endif

//--- Galgas RTTI
AC_galgasClassRunTimeInformationEX * galgasObjectRunTimeInfo (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_timing_prot castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasRootClassRunTimeInformationEX gClassInfoFor__timing_prot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_void_timing_prot'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_void_timing_prot ;

//---------------------------------------------------------------------------*

class GGS_void_timing_prot : public GGS_timing_prot {
//--- Default constructor
  public : inline GGS_void_timing_prot (void) :
  GGS_timing_prot () {}

//--- Pointer assignment constructor
  public : GGS_void_timing_prot (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_void_timing_prot (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_void_timing_prot
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_void_timing_prot constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_void_timing_prot * getPtr (void) const {
    return (cPtr_void_timing_prot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_void_timing_prot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_void_timing_prot * operator () (LOCATION_ARGS) const {
      return (cPtr_void_timing_prot *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_void_timing_prot castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__void_timing_prot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_false_timing_prot'                    *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_false_timing_prot ;

//---------------------------------------------------------------------------*

class GGS_false_timing_prot : public GGS_timing_prot {
//--- Default constructor
  public : inline GGS_false_timing_prot (void) :
  GGS_timing_prot () {}

//--- Pointer assignment constructor
  public : GGS_false_timing_prot (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_false_timing_prot (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_false_timing_prot
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_false_timing_prot constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_false_timing_prot * getPtr (void) const {
    return (cPtr_false_timing_prot *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_false_timing_prot * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_false_timing_prot * operator () (LOCATION_ARGS) const {
      return (cPtr_false_timing_prot *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_false_timing_prot castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__false_timing_prot ;

//---------------------------------------------------------------------------*
//                                                                           *
//                   GALGAS class 'GGS_timing_prot_task'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_timing_prot_task ;

//---------------------------------------------------------------------------*

class GGS_timing_prot_task : public GGS_timing_prot {
//--- Default constructor
  public : inline GGS_timing_prot_task (void) :
  GGS_timing_prot () {}

//--- Pointer assignment constructor
  public : GGS_timing_prot_task (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_timing_prot_task (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_timing_prot_task
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_timing_prot_task constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_basic_type & argument_1,
                                const GGS_basic_type & argument_2,
                                const GGS_basic_type & argument_3,
                                const GGS_basic_type & argument_4,
                                const GGS_rezlock_map & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_timing_prot_task * getPtr (void) const {
    return (cPtr_timing_prot_task *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_basic_type  reader_exe_budget (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_time_frame (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_os_it_lock (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_all_it_lock (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_rezlock_map  reader_rezlocks (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_timing_prot_task * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_timing_prot_task * operator () (LOCATION_ARGS) const {
      return (cPtr_timing_prot_task *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_timing_prot_task castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__timing_prot_task ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    GALGAS class 'GGS_timing_prot_isr'                     *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_timing_prot_isr ;

//---------------------------------------------------------------------------*

class GGS_timing_prot_isr : public GGS_timing_prot {
//--- Default constructor
  public : inline GGS_timing_prot_isr (void) :
  GGS_timing_prot () {}

//--- Pointer assignment constructor
  public : GGS_timing_prot_isr (const cPtr__AC_galgas_class * inPointer) ;

//--- Object assignment constructor
  public : GGS_timing_prot_isr (cPtr__AC_galgas_class & inObject) ;

//--- castFrom class method (implements cast expression)
  public : static GGS_timing_prot_isr
  castFrom (C_Compiler & inLexique,
             cPtr__AC_galgas_class * inPointer,
             const bool inUseKindOfClass,
             const GGS_location & inErrorLocation
             COMMA_LOCATION_ARGS) ;

//--- 'new' constructor
  public : static GGS_timing_prot_isr constructor_new (C_Compiler & inLexique,
                                const GGS_location & argument_0,
                                const GGS_basic_type & argument_1,
                                const GGS_basic_type & argument_2,
                                const GGS_basic_type & argument_3,
                                const GGS_basic_type & argument_4,
                                const GGS_rezlock_map & argument_5
                                COMMA_LOCATION_ARGS) ;

//--- getPtr
  public : inline cPtr_timing_prot_isr * getPtr (void) const {
    return (cPtr_timing_prot_isr *) mPointer ;
  }

//--- 'description' reader
  public : virtual const char * actualTypeName (void) const ;

//--- Readers
  public : GGS_basic_type  reader_exe_time (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_time_frame (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_os_it_lock (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_basic_type  reader_all_it_lock (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;
  public : GGS_rezlock_map  reader_rezlocks (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;

//--- Modifiers

//--- operator ()
  #ifndef DO_NOT_GENERATE_CHECKINGS
    public : cPtr_timing_prot_isr * operator () (LOCATION_ARGS) const ;
  #else
    public : inline cPtr_timing_prot_isr * operator () (LOCATION_ARGS) const {
      return (cPtr_timing_prot_isr *) mPointer ;
    }
  #endif

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_timing_prot_isr castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

} ;

//---------------------------------------------------------------------------*

extern C_galgasClassRunTimeInformationEX gClassInfoFor__timing_prot_isr ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Element of map '@rezlock_map'                        *
//                                                                           *
//---------------------------------------------------------------------------*

class e_rezlock_map {
  public : GGS_uint64  time ;

  public : e_rezlock_map (void) ;
} ;

//---------------------------------------------------------------------------*

class elementOf_GGS_rezlock_map : public AC_galgas_map_element {
//--- Constructor
  public : elementOf_GGS_rezlock_map (const GGS_lstring & inKey,
                                     const PMSInt32 inIndex,
                                     const e_rezlock_map & inInfo,
                                     const PMUInt32 inInitialState = 0) ;
//--- Get pointers
  public : inline elementOf_GGS_rezlock_map * nextObject (void) const { return (elementOf_GGS_rezlock_map *) mNextItem ; }
  public : inline elementOf_GGS_rezlock_map * infObject (void) const { return (elementOf_GGS_rezlock_map *) mInfPtr ; }
  public : inline elementOf_GGS_rezlock_map * supObject (void) const { return (elementOf_GGS_rezlock_map *) mSupPtr ; }
//--- Comparison
  protected : virtual bool isEqualToMapElement (const AC_galgas_map_element * inOperand) const ;
//--- Data member
  public : e_rezlock_map mInfo ;
//--- Method for 'description' reader
  public : void appendForMapDescription (const PMSInt32 inElementIndex,
                                         C_String & ioString,
                                         const PMSInt32 inIndentation) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    abstract class 'cPtr_timing_prot'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_timing_prot : public cPtr__AC_galgas_class {
//--- Constructor
  public : cPtr_timing_prot (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_location  location ;
//--- Method 'generate'
  public : virtual void method_generate (C_Compiler &,
                                GGS_config  ,
                                GGS_string& ,
                                GGS_string& ,
                                GGS_string ,
                                GGS_resource_map  
                                COMMA_LOCATION_ARGS) const = 0 ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_void_timing_prot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_void_timing_prot : public cPtr_timing_prot {
  private : typedef cPtr_timing_prot inherited ;
//--- Constructor
  public : cPtr_void_timing_prot (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Method 'generate'
  public : virtual void method_generate (C_Compiler &,
                                GGS_config  ,
                                GGS_string& ,
                                GGS_string& ,
                                GGS_string ,
                                GGS_resource_map  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 abstract class 'cPtr_false_timing_prot'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_false_timing_prot : public cPtr_timing_prot {
  private : typedef cPtr_timing_prot inherited ;
//--- Constructor
  public : cPtr_false_timing_prot (const GGS_location & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
//--- Method 'generate'
  public : virtual void method_generate (C_Compiler &,
                                GGS_config  ,
                                GGS_string& ,
                                GGS_string& ,
                                GGS_string ,
                                GGS_resource_map  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_timing_prot_task'                   *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_timing_prot_task : public cPtr_timing_prot {
  private : typedef cPtr_timing_prot inherited ;
//--- Constructor
  public : cPtr_timing_prot_task (const GGS_location & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_rezlock_map & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_basic_type  exe_budget ;
  public : GGS_basic_type  time_frame ;
  public : GGS_basic_type  os_it_lock ;
  public : GGS_basic_type  all_it_lock ;
  public : GGS_rezlock_map  rezlocks ;
//--- Method 'generate'
  public : virtual void method_generate (C_Compiler &,
                                GGS_config  ,
                                GGS_string& ,
                                GGS_string& ,
                                GGS_string ,
                                GGS_resource_map  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                  abstract class 'cPtr_timing_prot_isr'                    *
//                                                                           *
//---------------------------------------------------------------------------*

class cPtr_timing_prot_isr : public cPtr_timing_prot {
  private : typedef cPtr_timing_prot inherited ;
//--- Constructor
  public : cPtr_timing_prot_isr (const GGS_location & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_basic_type & ,
                                const GGS_rezlock_map & 
                                COMMA_LOCATION_ARGS) ;

//--- Attributes
  public : GGS_basic_type  exe_time ;
  public : GGS_basic_type  time_frame ;
  public : GGS_basic_type  os_it_lock ;
  public : GGS_basic_type  all_it_lock ;
  public : GGS_rezlock_map  rezlocks ;
//--- Method 'generate'
  public : virtual void method_generate (C_Compiler &,
                                GGS_config  ,
                                GGS_string& ,
                                GGS_string& ,
                                GGS_string ,
                                GGS_resource_map  
                                COMMA_LOCATION_ARGS) const ;

//--- Class message
  public : virtual const char * instanceMessage (void) const ;
  public : static const char * _static_message (void) ;

//--- Method for 'description' reader
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;

//--- Comparison
  public : virtual bool
  isEqualToObject (const cPtr__AC_galgas_class * inOperand) const ;

//--- Galgas RTTI
  public : virtual AC_galgasClassRunTimeInformationEX * galgasRTTI (void) const ;

//--- Make clone
  public : virtual cPtr__AC_galgas_class * makeClone (void) const ;
} ;

//---------------------------------------------------------------------------*

#endif
