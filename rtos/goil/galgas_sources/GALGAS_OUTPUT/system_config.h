//---------------------------------------------------------------------------*
//                                                                           *
//                          File 'system_config.h'                           *
//                        Generated by version 2.0.0                         *
//                       july 9th, 2010, at 9h45'24"                         *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

#ifndef system_config_DEFINED
#define system_config_DEFINED

#include <string.h>

//---------------------------------------------------------------------------*

#include "galgas/GGS__header.h"

//---------------------------------------------------------------------------*

// Include imported semantics
#include "goil_env_verification.h"
#include "goil_options.h"
#include "goil_types_root.h"
#include "template_invocation.h"

//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//                          Class Predeclarations                            *
//                                                                           *
//---------------------------------------------------------------------------*

class GGS_taskKind ;
class GGS_receiverSortedList ;
class GGS_receiverReverseSortedList ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Class for 'taskKind' Enumeration                      *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_taskKind ;

//---------------------------------------------------------------------------*

class GGS_taskKind : public GGS__root {
//--- Enumeration
  public : enum enumeration {kNotBuilt, enum_all, enum_basic, enum_extended} ;

//--- Private attribute
  private : enumeration mValue ;

//--- Get value
  public : inline enumeration enumValue (void) const { return mValue ; }

//--- Default constructor
  public : inline GGS_taskKind (void) : mValue (kNotBuilt) {}

//--- Internal constructor
  private : inline GGS_taskKind (const enumeration inValue) : mValue (inValue) {}

//--- Bit count for bdd
  public : static inline PMUInt16 bitCount (void) { return 2 ; }

//--- Is built ?
  public : bool isBuilt (void) const ;

//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_taskKind castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--- Construction from GALGAS constructor
  public : static inline GGS_taskKind  constructor_all (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_taskKind (enum_all) ;
  }
  public : static inline GGS_taskKind  constructor_basic (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_taskKind (enum_basic) ;
  }
  public : static inline GGS_taskKind  constructor_extended (C_Compiler & /* inLexique */ COMMA_UNUSED_LOCATION_ARGS) {
    return GGS_taskKind (enum_extended) ;
  }

//--- Readers

//--- 'description' reader
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;

//--- Drop operation
  public : inline void drop (void) { mValue = kNotBuilt ; }

//--- Comparison operators
  public : GGS_bool operator_isEqual (const GGS_taskKind inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_taskKind inOperand) const ;
  public : GGS_bool operator_infOrEqual (const GGS_taskKind inOperand) const ;
  public : GGS_bool operator_supOrEqual (const GGS_taskKind inOperand) const ;
  public : GGS_bool operator_strictInf (const GGS_taskKind inOperand) const ;
  public : GGS_bool operator_strictSup (const GGS_taskKind inOperand) const ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    Routine 'setAppRelatedAttributes'                      *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setAppRelatedAttributes (C_Compiler &,
                                GGS_goilTemplateFieldMap  &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                const GGS_lstring   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Function 'orderedTaskList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_orderedTaskList ;

//---------------------------------------------------------------------------*

GGS_tasks_by_type  function_orderedTaskList (C_Compiler &,
                                const GGS_root_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'computeTaskList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_computeTaskList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                const GGS_taskKind ,
                                GGS_goilTemplateFieldMapList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'computeISRList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_computeISRList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                const GGS_uint64  ,
                                GGS_goilTemplateFieldMapList  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setTasksList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setTasksList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'setBasicTasksList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setBasicTasksList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'setExtendedTasksList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setExtendedTasksList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setISRs1List'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setISRs1List (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setISRs2List'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setISRs2List (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setProcessesList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setProcessesList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setCountersList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setCountersList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setEventsList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setEventsList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_eventMaskMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setAction'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setAction (C_Compiler &,
                                GGS_goilTemplateFieldMap  &,
                                const GGS_action_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setAlarmsList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setAlarmsList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setResourcesList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setResourcesList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_map  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                    sorted list '@receiverSortedList'                      *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_receiverSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_receiverSortedList ;

//---------------------------------------------------------------------------*


class GGS_receiverSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_receiverSortedList cElement ;
//--- Default Constructor
  public : GGS_receiverSortedList (void) ;
//--- Copy Constructor
  public : GGS_receiverSortedList (const GGS_receiverSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_receiverSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_receiverSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_receiverSortedList constructor_emptySortedList (void) ;
  public : static GGS_receiverSortedList constructor_sortedListWithValue (const GGS_message_obj & argument_0,
                           const GGS_string& argument_1,
                           const GGS_location & argument_2,
                           const GGS_string& argument_3,
                           const GGS_location & argument_4) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_receiverSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_message_obj & _out_0,
                              GGS_string& _out_1,
                              GGS_location & _out_2,
                              GGS_string& _out_3,
                              GGS_location & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_message_obj & _out_0,
                             GGS_string& _out_1,
                             GGS_location & _out_2,
                             GGS_string& _out_3,
                             GGS_location & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_message_obj & _out_0,
                                GGS_string& _out_1,
                                GGS_location & _out_2,
                                GGS_string& _out_3,
                                GGS_location & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_message_obj & _out_0,
                                 GGS_string& _out_1,
                                 GGS_location & _out_2,
                                 GGS_string& _out_3,
                                 GGS_location & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_receiverSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_message_obj & argument_0,
                                const GGS_string& argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_location & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_receiverSortedList operator_concat (const GGS_receiverSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_message_obj & argument_0,
                                const GGS_string& argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_location & argument_4) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_receiverSortedList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_receiverSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_message_obj  & _mess (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _senderName (LOCATION_ARGS) const ;
    public : /* const */ GGS_location  & _senderLocation (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _receiverName (LOCATION_ARGS) const ;
    public : /* const */ GGS_location  & _receiverLocation (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                 sorted list '@receiverReverseSortedList'                  *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_receiverReverseSortedList ;
//---------------------------------------------------------------------------*

extern const C_galgas_type_descriptorEX kTypeDescriptor_GGS_receiverReverseSortedList ;

//---------------------------------------------------------------------------*


class GGS_receiverReverseSortedList : public AC_GGS_sortedlist {
  public : typedef elementOf_GGS_receiverReverseSortedList cElement ;
//--- Default Constructor
  public : GGS_receiverReverseSortedList (void) ;
//--- Copy Constructor
  public : GGS_receiverReverseSortedList (const GGS_receiverReverseSortedList & inSource) ;
//--- Comparison Operators
  public : GGS_bool operator_isEqual (const GGS_receiverReverseSortedList & inOperand) const ;
  public : GGS_bool operator_isNotEqual (const GGS_receiverReverseSortedList & inOperand) const ;
//--- Constructor 'emptySortedList'
  public : static GGS_receiverReverseSortedList constructor_emptySortedList (void) ;
  public : static GGS_receiverReverseSortedList constructor_sortedListWithValue (const GGS_message_obj & argument_0,
                           const GGS_string& argument_1,
                           const GGS_location & argument_2,
                           const GGS_string& argument_3,
                           const GGS_location & argument_4) ;
//--- Get smallest object
  public : inline cElement * firstObject (void) const {
    return (cElement *) internalSmallestObject () ;
  }
//--- Get greatest object
  public : inline cElement * lastObject (void) const {
    return (cElement *) internalGreatestObject () ;
  }
//--- Operators () used for method call
  public : const GGS_receiverReverseSortedList * operator () (UNUSED_LOCATION_ARGS) const { return this ;} 
//--- Method 'smallest'
  public : void method_smallest (C_Compiler & inLexique,
                              GGS_message_obj & _out_0,
                              GGS_string& _out_1,
                              GGS_location & _out_2,
                              GGS_string& _out_3,
                              GGS_location & _out_4
                              COMMA_LOCATION_ARGS) const ;
//--- Method 'greatest'
  public : void method_greatest (C_Compiler & inLexique,
                             GGS_message_obj & _out_0,
                             GGS_string& _out_1,
                             GGS_location & _out_2,
                             GGS_string& _out_3,
                             GGS_location & _out_4
                             COMMA_LOCATION_ARGS) const ;
//--- Method 'popGreatest'
  public : void modifier_popGreatest (C_Compiler & inLexique,
                                GGS_message_obj & _out_0,
                                GGS_string& _out_1,
                                GGS_location & _out_2,
                                GGS_string& _out_3,
                                GGS_location & _out_4
                                COMMA_LOCATION_ARGS) ;
//--- Modifier 'popSmallest'
  public : void modifier_popSmallest (C_Compiler & inLexique,
                                 GGS_message_obj & _out_0,
                                 GGS_string& _out_1,
                                 GGS_location & _out_2,
                                 GGS_string& _out_3,
                                 GGS_location & _out_4
                                 COMMA_LOCATION_ARGS) ;
//--- Handle '.=' operator
  public : void dotAssign_operation (const GGS_receiverReverseSortedList inOperand) ;

//--- Handling '+=' GALGAS operator
  public : void addAssign_operation (const GGS_message_obj & argument_0,
                                const GGS_string& argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_location & argument_4) ;
//--- Handling '.' GALGAS operator
  public : GGS_receiverReverseSortedList operator_concat (const GGS_receiverReverseSortedList & inOperand) const ;

//--- Internal Methods
  protected : void internalAppendValues (const GGS_message_obj & argument_0,
                                const GGS_string& argument_1,
                                const GGS_location & argument_2,
                                const GGS_string& argument_3,
                                const GGS_location & argument_4) ;
//--- List Insulation
  protected : void insulateList (void) ;
//--- Reader 'description
  public : virtual GGS_string reader_description (const PMSInt32 inIndentation = 0) const ;
//--- Introspection
  public : virtual const C_galgas_type_descriptorEX * typeDescriptor (void) const ;

  public : GGS_object reader_object (void) const ;

  public : static GGS_receiverReverseSortedList castFromObject (C_Compiler & inLexique,
                                           const GGS_object & inObject,
                                           const GGS_location & inErrorLocation
                                           COMMA_LOCATION_ARGS) ;

//--------------------------------- Sorted List Enumerator
  public : class cEnumerator : public cAbstractSortedListEnumerator {
  //--- Constructor
    public : inline cEnumerator (const GGS_receiverReverseSortedList & inList,
                                 const bool inAscending) :
    cAbstractSortedListEnumerator (inList, inAscending) {
    }
  //--- Iterator method
    public : inline cElement * nextObject (void) {
      return (cElement *) internalNextObject () ;
    }
    public : /* const */ GGS_message_obj  & _mess (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _senderName (LOCATION_ARGS) const ;
    public : /* const */ GGS_location  & _senderLocation (LOCATION_ARGS) const ;
    public : /* const */ GGS_string & _receiverName (LOCATION_ARGS) const ;
    public : /* const */ GGS_location  & _receiverLocation (LOCATION_ARGS) const ;
  } ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setFilter'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setFilter (C_Compiler &,
                                GGS_goilTemplateFieldMap  &,
                                const GGS_filter_prop_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setMessagesList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setMessagesList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'setScheduletablesList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setScheduletablesList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'computeBinaryVector'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_computeBinaryVector (C_Compiler &,
                                const GGS_string ,
                                GGS_string &,
                                GGS_uint  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'computeVector'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_computeVector (C_Compiler &,
                                GGS_string &,
                                const GGS_lstring  ,
                                const GGS_lstring  ,
                                const GGS_lstringlist  ,
                                const GGS_lstringlist   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                     Routine 'setOsapplicationsList'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setOsapplicationsList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_stringMap  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setReadyList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setReadyList (C_Compiler &,
                                const GGS_root_obj  ,
                                const GGS_prio_list  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setProcessCount'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setProcessCount (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setResourceCount'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setResourceCount (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'setSourceFileList'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setSourceFileList (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setCFlagsList'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setCFlagsList (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setCPPFlagsList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setCPPFlagsList (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setAsFlagsList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setAsFlagsList (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setLdFlagsList'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setLdFlagsList (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setTraceFlag'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setTraceFlag (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setLinkScript'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setLinkScript (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setMemoryMapping'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setMemoryMapping (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setCompiler'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setCompiler (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setAssembler'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setAssembler (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setLinker'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setLinker (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setTarget'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setTarget (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'setTemplatePath'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setTemplatePath (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Routine 'setTrampolinePath'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setTrampolinePath (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setSystemCall'                           *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setSystemCall (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                            Routine 'setDebug'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setDebug (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'setUseInterruptTable'                       *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setUseInterruptTable (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                         Routine 'setBuildConfig'                          *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setBuildConfig (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                       Function 'useCommunication'                         *
//                                                                           *
//---------------------------------------------------------------------------*

extern const C_galgas_function_descriptorEX kFunction_descriptor_useCommunication ;

//---------------------------------------------------------------------------*

GGS_bool function_useCommunication (C_Compiler &,
                                const GGS_root_obj   COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setUseCom'                             *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setUseCom (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setExtended'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setExtended (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                        Routine 'scalabilityClass'                         *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_scalabilityClass (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_uint64  &,
                                GGS_bool &,
                                GGS_bool & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'setScalabilityClass'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setScalabilityClass (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setUseHooks'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setUseHooks (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                          Routine 'setOsConfig'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setOsConfig (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'setInterruptSources'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setInterruptSources (C_Compiler &,
                                const GGS_config  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                      Routine 'addDirectoryAndFile'                        *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_addDirectoryAndFile (C_Compiler &,
                                GGS_goilTemplateFieldMapList  &,
                                const GGS_string ,
                                const GGS_string  COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//                           Routine 'setEnvData'                            *
//                                                                           *
//---------------------------------------------------------------------------*

void routine_setEnvData (C_Compiler &,
                                const GGS_root_obj  ,
                                GGS_goilTemplateVariableMap  & COMMA_LOCATION_ARGS) ;

//---------------------------------------------------------------------------*
//                                                                           *
//               Element of sorted list '@receiverSortedList'                *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_receiverSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_message_obj  mess ;
  public : GGS_string senderName ;
  public : GGS_location  senderLocation ;
  public : GGS_string receiverName ;
  public : GGS_location  receiverLocation ;
//--- Constructor
  public : elementOf_GGS_receiverSortedList (const GGS_message_obj & ,
                                const GGS_string& ,
                                const GGS_location & ,
                                const GGS_string& ,
                                const GGS_location & ) ;

//--- Access to next
  public : inline elementOf_GGS_receiverSortedList * nextObject (void) const { return (elementOf_GGS_receiverSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_receiverSortedList * previousObject (void) const { return (elementOf_GGS_receiverSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_receiverSortedList ;
} ;

//---------------------------------------------------------------------------*
//                                                                           *
//           Element of sorted list '@receiverReverseSortedList'             *
//                                                                           *
//---------------------------------------------------------------------------*

class elementOf_GGS_receiverReverseSortedList : public AC_GGS_sortedlist::cSortedListElement {
//--- Attributes
  public : GGS_message_obj  mess ;
  public : GGS_string senderName ;
  public : GGS_location  senderLocation ;
  public : GGS_string receiverName ;
  public : GGS_location  receiverLocation ;
//--- Constructor
  public : elementOf_GGS_receiverReverseSortedList (const GGS_message_obj & ,
                                const GGS_string& ,
                                const GGS_location & ,
                                const GGS_string& ,
                                const GGS_location & ) ;

//--- Access to next
  public : inline elementOf_GGS_receiverReverseSortedList * nextObject (void) const { return (elementOf_GGS_receiverReverseSortedList *) internalNextItem () ; }
//--- Access to previous
  public : inline elementOf_GGS_receiverReverseSortedList * previousObject (void) const { return (elementOf_GGS_receiverReverseSortedList *) internalPreviousItem () ; }
//--- Element comparison
  protected : virtual bool
  isEqualToObject (const cSortedListElement * inOperand) const ;
//--- Method used for sorting elements
  protected : virtual PMSInt32 compareForSorting (const cSortedListElement * inOperand) const ;
//--- Method used for description
  public : virtual void
  appendForDescription (C_String & ioString,
                        const PMSInt32 inIndentation) const ;
  friend class GGS_receiverReverseSortedList ;
} ;

//---------------------------------------------------------------------------*

#endif
