#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est prot�g� par la loi sur la propri�t� intellectuelle
#
# This software is distributed under the Lesser GNU Public Licence
#
# GOIL task object parser
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

syntax goil_obj_task :
#--- Lexique Reference, used when grammar source file extension is .gGrammar
with "goil_lexique.gLexique";

import lexique goil_lexique in "goil_lexique.gLexique" ;
import option goil_options in "goil_options.gOption" ;
import semantics goil_semantics in "goil_semantics.gSemantics" ;
import semantics goil_types_timing_prot in "goil_types_timing_prot.gSemantics" ;

import "goil_options.gOption" ;
import "goil_semantics.gSemantics" ;
import "goil_types_timing_prot.gSemantics" ;

#
# local rules declaration
#
nonterminal <task>
  ?!@task_map tasks  
label parse
;

nonterminal <task_attributes>
  ?!@basic_type         priority
  ?!@lstring            schedule
  ?!@basic_type         activation
  ?!@task_autostart_obj autostart
  ?!@lstringlist        resources
  ?!@lstringlist        events
  ?!@lstringlist        messages
  ?!@lstringlist        acc_apps
  ?!@timing_prot        timing_prot
  ?!@ident_map          others  
label parse
;

nonterminal <task_autostart_params>
  !@task_autostart_obj task_autostart 
label parse
;

#
# external rules 
#
nonterminal <description>
  !@lstring desc  
label parse
;
nonterminal <free_field>
  ?!@ident_map ids  
label parse
;
nonterminal <timing_prot_attrs>
  !@basic_type  exe_budget
  !@basic_type  exe_time
  !@basic_type  time_frame
  !@basic_type  os_it_lock
  !@basic_type  all_it_lock
  !@rezlock_map rezlocks  
label parse
;

#
# local rules implementation
#
rule <task>
  ?!@task_map tasks 
:
  @lstring            task_name ;
  @task_obj           task ;
  @basic_type         priority ;
  @lstring            schedule ;
  @basic_type         activation ;
  @task_autostart_obj autostart ;
  @lstringlist        resources ;
  @lstringlist        events ;
  @lstringlist        messages ;
  @lstringlist        acc_apps ;
  @timing_prot        timing_prot ;
  @lstring            desc ;
  @ident_map          others ;

  $TASK$ ;
  $idf$ ?task_name ;
  if [tasks hasKey ![task_name string]] then
    [!?tasks del !task_name ?task] ;
    priority    := [task priority];
    schedule    := [task schedule] ;
    activation  := [task activation] ;
    autostart   := [task autostart] ;
    resources   := [task resources] ;
    events      := [task events] ;
    messages    := [task messages] ;
    acc_apps    := [task acc_apps] ;
    timing_prot := [task timing_prot] ;
    desc        := [task desc] ;
    others      := [task others] ;
  else
    priority    := [@void new !here] ;
    schedule    := [@lstring new !"" !here] ;
    activation  := [@void new !here] ;
    autostart   := [@task_autostart_void new !here] ;
    resources   := [@lstringlist emptyList] ;
    events      := [@lstringlist emptyList] ;
    messages    := [@lstringlist emptyList] ;
    acc_apps    := [@lstringlist emptyList] ;
    timing_prot := [@void_timing_prot new !here] ;
    desc := [@lstring new !"" !here] ;
    others := [@ident_map emptyMap] ;
    task := [@task_obj new
      !desc
      !priority
      !schedule
      !activation
      !autostart
      !resources
      !events
      !messages
      !acc_apps
      !timing_prot
      !others
    ] ;
  end if ;
    ${$ ;
    <task_attributes>
      !?priority
      !?schedule
      !?activation
      !?autostart
      !?resources
      !?events
      !?messages
      !?acc_apps
      !?timing_prot
      !?others ; 
    $}$ ;
    <description> ?desc ;
    $;$ ;

  task := [@task_obj new
    !desc
    !priority
    !schedule
    !activation
    !autostart
    !resources
    !events
    !messages
    !acc_apps
    !timing_prot
    !others
  ] ;
  [!?tasks put !task_name !task] ;
end rule ; 

rule <task_attributes>
  ?!@basic_type         priority
  ?!@lstring            schedule
  ?!@basic_type         activation
  ?!@task_autostart_obj autostart
  ?!@lstringlist        resources
  ?!@lstringlist        events
  ?!@lstringlist        messages
  ?!@lstringlist        acc_apps
  ?!@timing_prot        timing_prot
  ?!@ident_map          others
:
  repeat
  while
    @luint64 prio ;
    $PRIORITY$ ; $=$ ; $uint_number$ ?prio ;  <description> ?* ; $;$ ;
    set_uint32 !?priority !prio !"PRIORITY" ;
  while
    @lstring sc ;
    $SCHEDULE$ ; $=$ ; 
    select $FULL$ ; sc := [@lstring new !"FULL" !here] ;
    or     $NON$ ; sc := [@lstring new !"NON" !here] ;
    end select ;
    set_lstring_if_empty !?schedule !sc !"SCHEDULE" ;
    <description> ?* ; $;$ ;
  while
    @task_autostart_obj auto ;
    $AUTOSTART$ ; $=$ ;
    select $TRUE$ ; ${$ ; <task_autostart_params> ?auto ; $}$ ;
    or     $FALSE$ ; auto := [@task_autostart_false new !here] ;
   end select ;
    cast autostart :
    when == @task_autostart_void do
      autostart := auto ;
    else 
      error here : "Redefinition of AUTOSTART" ;
      error [autostart location] : "was defined here" ;
    end cast ;
    <description> ?* ; $;$ ;
  while
    @luint64 act ;
    $ACTIVATION$ ; $=$ ; $uint_number$ ?act ; <description> ?* ; $;$ ;
    set_uint32 !?activation !act !"ACTIVATION" ;
  while
    @lstring resource ;
    $RESOURCE$ ; $=$ ; $idf$ ?resource ; <description> ?* ; $;$ ;
    add_lstring_unique !?resources !resource !"RESOURCE" ;
  while
    @lstring event ;
    $EVENT$ ; $=$ ; $idf$ ?event ; <description> ?* ; $;$ ;
    add_lstring_unique !?events !event !"EVENT" ;
  while
    @lstring mess ;
    $MESSAGE$ ; $=$ ; $idf$ ?mess ; <description> ?* ; $;$ ;
    add_lstring_unique !?messages !mess !"MESSAGE" ;
  while
    if [option goil_options.autosar_on value] == false then
      error here : "AUTOSAR flag is off, turn it on to use TIMINGPROTECTION attribute in TASK object" ;
    end if ;
    $TIMING_PROTECTION$ ; $=$ ;
    select
      $FALSE$ ;
      timing_prot := [@false_timing_prot new !here] ;
    or
      $TRUE$ ; ${$ ;
      @basic_type  exe_budget ;
      @basic_type  exe_time ;
      @basic_type  time_frame ;
      @basic_type  os_it_lock ;
      @basic_type  all_it_lock ;
      @rezlock_map rezlocks ;
      <timing_prot_attrs> ?exe_budget ?exe_time ?time_frame ?os_it_lock ?all_it_lock ?rezlocks ;
      cast exe_budget :
      when == @void do error here : "EXECUTIONBUDGET not declared" ;
      else end cast ;
      cast exe_time :
      when == @uint64_class et do
        error [et location] : "EXECUTIONTIME is not an attribute of task timing protection";
      else end cast ;
      timing_prot := [@timing_prot_task new
        !here
        !exe_budget
        !time_frame
        !os_it_lock
        !all_it_lock
        !rezlocks] ;
      $}$ ;
    end select ;
    $;$ ;
  while
    @lstring app ;
    $ACCESSING_APPLICATION$ ; $=$ ; $idf$ ?app ; <description> ?* ; $;$ ;
    add_lstring_unique !?acc_apps !app !"ACCESSING_APPLICATION" ;
  while
    <free_field> !?others ; <description> ?* ; $;$ ;
  end repeat ;
end rule;

rule <task_autostart_params>
  !@task_autostart_obj autostart
:
 @lstring appmode := [@lstring new !"" !here];
 @stringset appmodes [emptySet] ;
 repeat
 while
  $APPMODE$ ; $=$ ; $idf$ ?appmode ; <description> ?* ; $;$ ;
  if ([appmodes hasKey ![appmode string]]) then
   warning here : "APPMODE " . [appmode string] . " already defined for this task AUTOSTART attribute" ;
  end if ; 
  appmodes += ![appmode string] ;
 end repeat;
 autostart := [@task_autostart_true new !here !appmodes] ;
end rule ;

end syntax ;
# vim:ft=ggs:ts=4:sw=4
