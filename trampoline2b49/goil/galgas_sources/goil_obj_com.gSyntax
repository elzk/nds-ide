#
# Trampoline OS
#
# Trampoline is copyright (c) IRCCyN 2005+
# Trampoline est prot�g� par la loi sur la propri�t� intellectuelle
#
# This software is distributed under the Lesser GNU Public Licence
#
# GOIL com object parser
#
# $Date$
# $Rev$
# $Author$
# $URL$
#

syntax goil_obj_com :
#--- Lexique Reference, used when grammar source file extension is .gGrammar
with "goil_lexique.gLexique";

import lexique goil_lexique in "goil_lexique.gLexique" ;
import option goil_options in "goil_options.gOption" ;
import semantics goil_semantics in "goil_semantics.gSemantics" ;
import semantics com_type in "com_type.gSemantics" ;

import "goil_options.gOption" ;
import "goil_semantics.gSemantics" ;
import "com_type.gSemantics" ;

nonterminal <com>
  ?!@com com  
label parse
;
nonterminal <comtimebase>
  ?!@basic_type tb  
label parse
;
nonterminal <comerrorhook>
  ?!@basic_type eh  
label parse
;
nonterminal <comusegetserviceid>
  ?!@basic_type ugsid  
label parse
;
nonterminal <comuseparameteraccess>
  ?!@basic_type upa  
label parse
;
nonterminal <comstartcomextension>
  ?!@basic_type sce  
label parse
;
nonterminal <comappmode>
  ?!@lstringlist am  
label parse
;
nonterminal <comstatus>
  ?!@lstring s  
label parse
;
nonterminal <use>
  ?!@lstringlist u  
label parse
;

# external rules
nonterminal <boolean> !@lbool val  
label parse
;
nonterminal <description>
    !@lstring desc  
label parse
;

rule <com>
  ?!@com com
:
  # get the current values of the attributes
  @bool        usecom := true ;
  @basic_type  tb := [com timebase] ;
  @basic_type  eh := [com errorhook] ;
  @basic_type  ugsid := [com usegetserviceid] ;
  @basic_type  upa := [com useparameteraccess] ;
  @basic_type  sce := [com startcomextension] ;
  @lstringlist am := [com appmodes] ;
  @lstring     s := [com status] ;
  @lstringlist u := [com uses] ;

  $COM$ ;
  $idf$ ?* ;
  ${$ ;
  repeat
    while <comtimebase> !?tb ;
    while <comerrorhook> !?eh ;
    while <comusegetserviceid> !?ugsid ;
    while <comuseparameteraccess> !?upa ;
    while <comstartcomextension> !?sce ;
    while <comappmode> !?am;
    while <comstatus> !?s ;
    while <use> !?u ;
  end repeat ;
  $}$ ;
  <description> ?* ; $;$ ;

  com := [@com new
    ![@lstring new !"" !here]
    !usecom
    !tb
    !eh
    !ugsid
    !upa
    !sce
    !am
    !s
    !u
  ] ;
end rule ;

rule <comtimebase>
  ?!@basic_type tb 
:
  @ldouble f ;
  $COMTIMEBASE$ ; $=$ ; $float_number$ ?f ;
  cast tb :
  when == @float_class do
    error f : "Redefinition of COMTIMEBASE" ;
    error [tb location] : "was defined here" ;
  else
    tb := [@float_class new ![f location] ![f double]] ;
  end cast ;
  <description> ?* ; $;$ ;
end rule;

rule <comerrorhook>
  ?!@basic_type eh 
:
  @lbool b ;
  $COMERRORHOOK$ ; $=$ ; <boolean> ?b;
  set_bool !?eh !b !"COMERRORHOOK" ;
  <description> ?* ; $;$ ;
end rule;

rule <comusegetserviceid>
  ?!@basic_type ugsid
:
  @lbool b ;
  $COMUSEGETSERVICEID$ ; $=$ ; <boolean> ?b;
  set_bool !?ugsid !b !"COMUSEGETSERVICEID" ;
  <description> ?* ; $;$ ;
end rule;

rule <comuseparameteraccess>
  ?!@basic_type upa
:
  @lbool b ;
  $COMUSEPARAMETERACCESS$ ; $=$ ; <boolean> ?b;
  set_bool !?upa !b !"COMUSEPARAMETERACCESS" ;
  <description> ?* ; $;$ ;
end rule;

rule <comstartcomextension>
  ?!@basic_type sce
:
  @lbool b ;
  $COMSTARTCOMEXTENSION$ ; $=$ ; <boolean> ?b;
  set_bool !?sce !b !"COMSTARTCOMEXTENSION" ;
  <description> ?* ; $;$ ;
end rule;

rule <comappmode>
  ?!@lstringlist am
:
  @lstring s ;
  $COMAPPMODE$ ; $=$ ; $string$ ?s ;
  add_lstring_unique !?am !s !"COMAPPMODE";
  <description> ?* ; $;$ ;
end rule;

rule <comstatus>
  ?!@lstring s
:
  @lstring ss ;
  $COMSTATUS$ ; $=$ ;
  select
    $COMEXTENDED$ ; ss := [@lstring new !"extended" !here] ;
  or
    $COMSTANDARD$ ; ss := [@lstring new !"standard" !here] ;
  end select ;
  set_lstring_if_empty !?s !ss !"COMSTATUS" ;
  <description> ?* ; $;$ ;
end rule;

rule <use>
  ?!@lstringlist u
:
  @lstring use ;
  $USE$ ; $=$ ; $string$ ?use ;
  add_lstring_unique !?u !use !"USE" ;
  <description> ?* ; $;$ ;
end rule;

end syntax ;
# vim:ft=ggs:ts=4:sw=4
