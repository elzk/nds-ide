//---------------------------------------------------------------------------*
//                                                                           *
//                    File 'goil_obj_networkmessage.cpp'                     *
//                        Generated by version 2.0.0                         *
//                       july 7th, 2010, at 17h16'55"                        *
//                                                                           *
//---------------------------------------------------------------------------*

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//---------------------------------------------------------------------------*

#include "version_libpm.h"
#if CURRENT_LIBPM_VERSION != 820
  #error "This file has been compiled with a version of GALGAS that uses libpm version 820, different than the current version (CURRENT_LIBPM_VERSION) of libpm"
#endif

//---------------------------------------------------------------------------*

#include <typeinfo>
#include "utilities/MF_MemoryControl.h"
#include "files/C_TextFileWrite.h"
#include "galgas/C_galgas_CLI_Options.h"
#include "goil_obj_networkmessage.h"

//---------------------------------------------------------------------------*

#ifndef DO_NOT_GENERATE_CHECKINGS
  #define SOURCE_FILE_AT_LINE(line) "goil_obj_networkmessage.gSyntax", line
  #define COMMA_SOURCE_FILE_AT_LINE(line) , SOURCE_FILE_AT_LINE(line)
#else
  #define SOURCE_FILE_AT_LINE(line) 
  #define COMMA_SOURCE_FILE_AT_LINE(line) 
#endif


//--- START OF USER ZONE 2


//--- END OF USER ZONE 2

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'networkmess'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_networkmess_i0_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_netmess_map  &var_cas_netmess) {
  GGS_netmess_obj  var_cas_nm ;
  GGS_lstring  var_cas_name ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_name) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  const GGS_bool cond_1933 = var_cas_netmess.reader_hasKey (var_cas_name.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (97))) ;
  if (cond_1933.isBuiltAndTrue ()) {
    var_cas_netmess.modifier_del (inLexique, var_cas_name, var_cas_nm COMMA_SOURCE_FILE_AT_LINE (98)) ;
  }else if (cond_1933.isBuiltAndFalse ()) {
    var_cas_nm = GGS_netmess_obj ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (101)), GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (102)), GGS_void_netprop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (103)) COMMA_SOURCE_FILE_AT_LINE (100)) ;
  }
  GGS_lstring  var_cas_ipdu = var_cas_nm.reader_ipdu (inLexique COMMA_SOURCE_FILE_AT_LINE (107)) ;
  GGS_base_netprop  var_cas_netprop = var_cas_nm.reader_netprop (inLexique COMMA_SOURCE_FILE_AT_LINE (108)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_goil_5F_obj_5F_networkmessage_0 (inLexique)) {
        case 2 : {
          nt_ipdu_5F_ref_ (inLexique, var_cas_ipdu) ;
          } break ;
        case 3 : {
          nt_net_5F_messageproperty_ (inLexique, var_cas_netprop) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring  automatic_var_2281_0 ;
  nt_description_ (inLexique, automatic_var_2281_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  var_cas_nm = GGS_netmess_obj ::constructor_new (inLexique, GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (118)), var_cas_ipdu, var_cas_netprop COMMA_SOURCE_FILE_AT_LINE (117)) ;
  var_cas_netmess.modifier_put (inLexique, var_cas_name, var_cas_nm COMMA_SOURCE_FILE_AT_LINE (123)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_networkmess_i0_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_NETWORKMESSAGE) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_0 = true ;
    while (syntaxRepeat_0) {
      switch (select_goil_5F_obj_5F_networkmessage_0 (inLexique)) {
        case 2 : {
          nt_ipdu_5F_ref_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_net_5F_messageproperty_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_0 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//               Implementation of production rule 'ipdu_ref'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_ipdu_5F_ref_i1_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_ipdu) {
  GGS_lstring  var_cas_ip ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IPDU) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_att_5F_token (var_cas_ip) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  const GGS_bool cond_2639 = (var_cas_ipdu.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (131))).operator_isNotEqual (GGS_string ("")) ;
  if (cond_2639.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("IPDU is already defined for this network message") COMMA_SOURCE_FILE_AT_LINE (133)) ;
    var_cas_ipdu.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("wad defined here") COMMA_SOURCE_FILE_AT_LINE (134)) ;
  }else if (cond_2639.isBuiltAndFalse ()) {
    var_cas_ipdu = var_cas_ip ;
  }
  GGS_lstring  automatic_var_2687_0 ;
  nt_description_ (inLexique, automatic_var_2687_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_ipdu_5F_ref_i1_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_IPDU) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_idf) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//         Implementation of production rule 'net_messageproperty'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_net_5F_messageproperty_i2_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_base_netprop  &var_cas_netprop) {
  GGS_base_netprop  var_cas_nn ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGEPROPERTY) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_1 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STATIC) COMMA_HERE) ;
      nt_static_5F_mp_ (inLexique, var_cas_nn) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DYNAMIC) COMMA_HERE) ;
      nt_dynamic_5F_mp_ (inLexique, var_cas_nn) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ZERO) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      GGS_lstring  var_cas_dir ;
      nt_direction_ (inLexique, var_cas_dir) ;
      var_cas_nn = GGS_zero_netprop ::constructor_new (inLexique, GGS_location (inLexique), var_cas_dir COMMA_SOURCE_FILE_AT_LINE (159)) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  { const GGS_base_netprop _var_3466 = var_cas_netprop ; // CAST instruction
    if (_var_3466.getPtr () != NULL) {
      macroValidPointer (_var_3466.getPtr ()) ;
      if (typeid (cPtr_void_netprop) == typeid (* (_var_3466.getPtr ()))) {
        var_cas_netprop = var_cas_nn ;
      }else{
        GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("MESSAGEPROPERTY is already defined") COMMA_SOURCE_FILE_AT_LINE (167)) ;
        var_cas_netprop.reader_loc (inLexique COMMA_SOURCE_FILE_AT_LINE (167)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was defined here") COMMA_SOURCE_FILE_AT_LINE (168)) ;
      }
    }
  }
  GGS_lstring  automatic_var_3494_0 ;
  nt_description_ (inLexique, automatic_var_3494_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_net_5F_messageproperty_i2_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MESSAGEPROPERTY) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_1 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_STATIC) COMMA_HERE) ;
      nt_static_5F_mp_parse (inLexique) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DYNAMIC) COMMA_HERE) ;
      nt_dynamic_5F_mp_parse (inLexique) ;
      } break ;
    case 3 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_ZERO) COMMA_HERE) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
      nt_direction_parse (inLexique) ;
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'static_mp'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_static_5F_mp_i3_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_base_netprop  &var_cas_netprop) {
  GGS_lsint  var_cas_sizeinbits = GGS_lsint ::constructor_new (inLexique, GGS_sint (1L).operator_unary_minus (inLexique COMMA_HERE), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (175)) ;
  GGS_lstring  var_cas_bitordering = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (176)) ;
  GGS_lsint  var_cas_bitposition = GGS_lsint ::constructor_new (inLexique, GGS_sint (1L).operator_unary_minus (inLexique COMMA_HERE), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (177)) ;
  GGS_lstring  var_cas_datainterpretation = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (178)) ;
  GGS_basic_type  var_cas_initialvalue = GGS_void ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (179)) ;
  GGS_lstring  var_cas_direction = GGS_lstring ::constructor_new (inLexique, GGS_string (""), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (180)) ;
  GGS_location  var_cas_where = GGS_location (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_goil_5F_obj_5F_networkmessage_2 (inLexique)) {
        case 2 : {
          GGS_luint64  var_cas_sib ;
          nt_sizeinbits_ (inLexique, var_cas_sib) ;
          const GGS_bool cond_4088 = (var_cas_sizeinbits.reader_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (188))).operator_isEqual (GGS_sint (1L).operator_unary_minus (inLexique COMMA_HERE)) ;
          if (cond_4088.isBuiltAndTrue ()) {
            var_cas_sizeinbits = GGS_lsint ::constructor_new (inLexique, var_cas_sib.reader_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (189)).reader_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (189)), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (189)) ;
          }else if (cond_4088.isBuiltAndFalse ()) {
            var_cas_sib.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("SIZEINBITS is already defined") COMMA_SOURCE_FILE_AT_LINE (192)) ;
            var_cas_sizeinbits.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was defined here") COMMA_SOURCE_FILE_AT_LINE (193)) ;
          }
          } break ;
        case 3 : {
          GGS_lstring  var_cas_bo ;
          nt_bitordering_ (inLexique, var_cas_bo) ;
          const GGS_bool cond_4322 = (var_cas_bitordering.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (198))).operator_isEqual (GGS_string ("")) ;
          if (cond_4322.isBuiltAndTrue ()) {
            var_cas_bitordering = var_cas_bo ;
          }else if (cond_4322.isBuiltAndFalse ()) {
            var_cas_bo.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("BITORDERING is already defined") COMMA_SOURCE_FILE_AT_LINE (202)) ;
            var_cas_bitordering.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was define here") COMMA_SOURCE_FILE_AT_LINE (203)) ;
          }
          } break ;
        case 4 : {
          GGS_luint64  var_cas_bp ;
          nt_bitposition_ (inLexique, var_cas_bp) ;
          const GGS_bool cond_4591 = (var_cas_bitposition.reader_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (208))).operator_isEqual (GGS_sint (1L).operator_unary_minus (inLexique COMMA_HERE)) ;
          if (cond_4591.isBuiltAndTrue ()) {
            var_cas_bitposition = GGS_lsint ::constructor_new (inLexique, var_cas_bp.reader_uint64 (inLexique COMMA_SOURCE_FILE_AT_LINE (209)).reader_sint (inLexique COMMA_SOURCE_FILE_AT_LINE (209)), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (209)) ;
          }else if (cond_4591.isBuiltAndFalse ()) {
            var_cas_bp.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("BITPOSITION is already defined") COMMA_SOURCE_FILE_AT_LINE (212)) ;
            var_cas_bitposition.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was defined here") COMMA_SOURCE_FILE_AT_LINE (213)) ;
          }
          } break ;
        case 5 : {
          GGS_lstring  var_cas_di ;
          nt_datainterpretation_ (inLexique, var_cas_di) ;
          const GGS_bool cond_4847 = (var_cas_datainterpretation.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (218))).operator_isEqual (GGS_string ("")) ;
          if (cond_4847.isBuiltAndTrue ()) {
            var_cas_datainterpretation = var_cas_di ;
          }else if (cond_4847.isBuiltAndFalse ()) {
            var_cas_di.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("DATAINTERPRETATION is already defined") COMMA_SOURCE_FILE_AT_LINE (222)) ;
            var_cas_datainterpretation.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was define here") COMMA_SOURCE_FILE_AT_LINE (223)) ;
          }
          } break ;
        case 6 : {
          GGS_basic_type  var_cas_iv ;
          nt_initialvalue_ (inLexique, var_cas_iv) ;
          { const GGS_basic_type _var_5225 = var_cas_initialvalue ; // CAST instruction
            if (_var_5225.getPtr () != NULL) {
              macroValidPointer (_var_5225.getPtr ()) ;
              if (typeid (cPtr_void) == typeid (* (_var_5225.getPtr ()))) {
                var_cas_initialvalue = var_cas_iv ;
              }else{
                var_cas_iv.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (231)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("INITIALVALUE already defined") COMMA_SOURCE_FILE_AT_LINE (232)) ;
                var_cas_initialvalue.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (232)).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was defined here") COMMA_SOURCE_FILE_AT_LINE (233)) ;
              }
            }
          }
          } break ;
        case 7 : {
          GGS_lstring  var_cas_dir ;
          nt_direction_ (inLexique, var_cas_dir) ;
          const GGS_bool cond_5354 = (var_cas_direction.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (238))).operator_isEqual (GGS_string ("")) ;
          if (cond_5354.isBuiltAndTrue ()) {
            var_cas_direction = var_cas_dir ;
          }else if (cond_5354.isBuiltAndFalse ()) {
            var_cas_dir.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("DIRECTION is already defined") COMMA_SOURCE_FILE_AT_LINE (242)) ;
            var_cas_direction.reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("was define here") COMMA_SOURCE_FILE_AT_LINE (243)) ;
          }
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  const GGS_bool cond_5616 = (var_cas_direction.reader_string (inLexique COMMA_SOURCE_FILE_AT_LINE (249))).operator_isEqual (GGS_string ("")) ;
  if (cond_5616.isBuiltAndTrue ()) {
    GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("DIRECTION attribute is missing") COMMA_SOURCE_FILE_AT_LINE (251)) ;
  }
  GGS_luint64  var_cas_iv ;
  { const GGS_basic_type _var_5794 = var_cas_initialvalue ; // CAST instruction
    if (_var_5794.getPtr () != NULL) {
      macroValidPointer (_var_5794.getPtr ()) ;
      if (typeid (cPtr_uint64_class) == typeid (* (_var_5794.getPtr ()))) {
        const GGS_uint64_class var_cas_ui (_var_5794.getPtr ()) ;
        var_cas_iv = GGS_luint64 ::constructor_new (inLexique, var_cas_ui.reader_value (inLexique COMMA_SOURCE_FILE_AT_LINE (256)), var_cas_ui.reader_location (inLexique COMMA_SOURCE_FILE_AT_LINE (256)) COMMA_SOURCE_FILE_AT_LINE (256)) ;
      }else{
        var_cas_iv = GGS_luint64 ::constructor_new (inLexique, GGS_uint64 (0ULL), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (258)) ;
      }
    }
  }
  var_cas_netprop = GGS_static_netprop ::constructor_new (inLexique, var_cas_where, var_cas_sizeinbits, var_cas_bitordering, var_cas_bitposition, var_cas_datainterpretation, var_cas_iv, var_cas_direction COMMA_SOURCE_FILE_AT_LINE (261)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_static_5F_mp_i3_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_2 = true ;
    while (syntaxRepeat_2) {
      switch (select_goil_5F_obj_5F_networkmessage_2 (inLexique)) {
        case 2 : {
          nt_sizeinbits_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_bitordering_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_bitposition_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_datainterpretation_parse (inLexique) ;
          } break ;
        case 6 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        case 7 : {
          nt_direction_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_2 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'dynamic_mp'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_dynamic_5F_mp_i4_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_base_netprop  &var_cas_netprop) {
  GGS_location (inLexique).reader_location (inLexique COMMA_HERE).signalGGSSemanticError (inLexique, GGS_string ("DYNAMIC network messages are not supported") COMMA_SOURCE_FILE_AT_LINE (277)) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_goil_5F_obj_5F_networkmessage_3 (inLexique)) {
        case 2 : {
          GGS_luint64  automatic_var_6124_0 ;
          nt_maxsizeinbits_ (inLexique, automatic_var_6124_0) ;
          } break ;
        case 3 : {
          GGS_lstring  automatic_var_6153_0 ;
          nt_bitordering_ (inLexique, automatic_var_6153_0) ;
          } break ;
        case 4 : {
          GGS_luint64  automatic_var_6182_0 ;
          nt_bitposition_ (inLexique, automatic_var_6182_0) ;
          } break ;
        case 5 : {
          GGS_basic_type  automatic_var_6212_0 ;
          nt_initialvalue_ (inLexique, automatic_var_6212_0) ;
          } break ;
        case 6 : {
          GGS_lstring  automatic_var_6239_0 ;
          nt_direction_ (inLexique, automatic_var_6239_0) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  var_cas_netprop = GGS_void_netprop ::constructor_new (inLexique, GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (286)) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_dynamic_5F_mp_i4_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7B_) COMMA_HERE) ;
  { bool syntaxRepeat_3 = true ;
    while (syntaxRepeat_3) {
      switch (select_goil_5F_obj_5F_networkmessage_3 (inLexique)) {
        case 2 : {
          nt_maxsizeinbits_parse (inLexique) ;
          } break ;
        case 3 : {
          nt_bitordering_parse (inLexique) ;
          } break ;
        case 4 : {
          nt_bitposition_parse (inLexique) ;
          } break ;
        case 5 : {
          nt_initialvalue_parse (inLexique) ;
          } break ;
        case 6 : {
          nt_direction_parse (inLexique) ;
          } break ;
        default :
          syntaxRepeat_3 = false ;
          break ;
      }
    }
  }
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__7D_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'sizeinbits'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_sizeinbits_i5_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_sib) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SIZEINBITS) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_sib) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_6434_0 ;
  nt_description_ (inLexique, automatic_var_6434_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_sizeinbits_i5_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SIZEINBITS) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//            Implementation of production rule 'maxsizeinbits'              *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_maxsizeinbits_i6_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_msib) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MAXSIZEINBITS) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_msib) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_6573_0 ;
  nt_description_ (inLexique, automatic_var_6573_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_maxsizeinbits_i6_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_MAXSIZEINBITS) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'bitordering'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_bitordering_i7_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_bo) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BITORDERING) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BIGENDIAN) COMMA_HERE) ;
      var_cas_bo = GGS_lstring ::constructor_new (inLexique, GGS_string ("big"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (313)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_LITTLEENDIAN) COMMA_HERE) ;
      var_cas_bo = GGS_lstring ::constructor_new (inLexique, GGS_string ("little"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (315)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_6838_0 ;
  nt_description_ (inLexique, automatic_var_6838_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_bitordering_i7_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BITORDERING) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_4 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BIGENDIAN) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_LITTLEENDIAN) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//             Implementation of production rule 'bitposition'               *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_bitposition_i8_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_luint64  &var_cas_bp) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BITPOSITION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.assignFromAttribute_integerNumber (var_cas_bp) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  GGS_lstring  automatic_var_6969_0 ;
  nt_description_ (inLexique, automatic_var_6969_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_bitposition_i8_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BITPOSITION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_uint_5F_number) COMMA_HERE) ;
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//          Implementation of production rule 'datainterpretation'           *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_datainterpretation_i9_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_di) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DATAINTERPRETATION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UNSIGNEDINTEGER) COMMA_HERE) ;
      var_cas_di = GGS_lstring ::constructor_new (inLexique, GGS_string ("unsignedinteger"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (335)) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BYTEARRAY) COMMA_HERE) ;
      var_cas_di = GGS_lstring ::constructor_new (inLexique, GGS_string ("bytearray"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (337)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_7265_0 ;
  nt_description_ (inLexique, automatic_var_7265_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_datainterpretation_i9_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DATAINTERPRETATION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_5 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_UNSIGNEDINTEGER) COMMA_HERE) ;
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_BYTEARRAY) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*
//                                                                           *
//              Implementation of production rule 'direction'                *
//                                                                           *
//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_direction_i10_ (C_Lexique_goil_5F_lexique & inLexique,
                                GGS_lstring  &var_cas_dir) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DIRECTION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_6 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SENT) COMMA_HERE) ;
      var_cas_dir = GGS_lstring ::constructor_new (inLexique, GGS_string ("sent"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (348)) ;
      switch (select_goil_5F_obj_5F_networkmessage_7 (inLexique)) {
        case 1 : {
          GGS_lstring  automatic_var_7451_0 ;
          nt_transferproperty_ (inLexique, automatic_var_7451_0) ;
          } break ;
        case 2 : {
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVED) COMMA_HERE) ;
      var_cas_dir = GGS_lstring ::constructor_new (inLexique, GGS_string ("received"), GGS_location (inLexique) COMMA_SOURCE_FILE_AT_LINE (351)) ;
      } break ;
    default :
      break ;
  }
  GGS_lstring  automatic_var_7577_0 ;
  nt_description_ (inLexique, automatic_var_7577_0) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

void goil_obj_networkmessage::rule_goil_5F_obj_5F_networkmessage_direction_i10_parse (C_Lexique_goil_5F_lexique & inLexique) {
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_DIRECTION) COMMA_HERE) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3D_) COMMA_HERE) ;
  switch (select_goil_5F_obj_5F_networkmessage_6 (inLexique)) {
    case 1 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_SENT) COMMA_HERE) ;
      switch (select_goil_5F_obj_5F_networkmessage_7 (inLexique)) {
        case 1 : {
          nt_transferproperty_parse (inLexique) ;
          } break ;
        case 2 : {
          } break ;
        default :
          break ;
      }
      } break ;
    case 2 : {
      inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken_RECEIVED) COMMA_HERE) ;
      } break ;
    default :
      break ;
  }
  nt_description_parse (inLexique) ;
  inLexique.acceptTerminal (ACCEPT_TERMINAL (C_Lexique_goil_5F_lexique::kToken__3B_) COMMA_HERE) ;
  GGS_lstring::constructor_retrieveAndResetTemplateString (inLexique COMMA_HERE) ;
}

//---------------------------------------------------------------------------*

