#include "FreeRTOS.h"
#include "task.h"
#include <nds.h>
#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include "sevencore_io.h"

void
Exp_4_Homework_A(void)
{
	// Variables
	u8 key, scan = 0;
	u8 isFull_7SEG = FALSE;
	u8 save_key[NUM_7SEG_LED];
	u8 index = -1;
	int i;

	for (i = 0; i < NUM_7SEG_LED; i++)					// Turn Off All
		writeb_virtual_io(SEG7LED, 0x80 + (i << 4));
	while (1) {

		// Fill Here
		switch (readb_virtual_io(PUSH_SW)) {
			case VIRTUAL_SW_1 : writeb_virtual_io(SEG7LED, 0x01); break;
			case VIRTUAL_SW_2 : writeb_virtual_io(SEG7LED, 0x02); break;
			case VIRTUAL_SW_3 : writeb_virtual_io(SEG7LED, 0x03); break;
			case VIRTUAL_SW_4 : writeb_virtual_io(SEG7LED, 0x04); break;
			default :           writeb_virtual_io(SEG7LED, 0x80); break;
		}

		writeb_virtual_io(KEY_MATRIX, 0x80 >> scan);
		key = scan * 4;
		switch (readb_virtual_io(KEY_MATRIX)) {
			case 8 :  key += 1; break;
			case 4 :  key += 2; break;
			case 2 :  key += 3; break;
			case 1 :  key += 4; if (key == 16) key = 0; break;
			default : key = 255; break;
		}
		scan++;
		if (scan == 4)
			scan = 0;
		if (key < 16) {
			index++;
			save_key[index] = key;

			if ((index + 1) == NUM_7SEG_LED) {
				isFull_7SEG = TRUE;
				index = -1;
			}

			if (isFull_7SEG) {
				for(i = 0; i < NUM_7SEG_LED; i++)
					writeb_virtual_io(SEG7LED, (0x70 - (i << 4)) + save_key[i]);
			}
			else {
				for(i = 0; i <= index; i++)
					writeb_virtual_io(SEG7LED, (0x70 - (i << 4)) + save_key[i]);
			}
		}

		if (NDS_SWITCH() & KEY_START)
			break;
		vTaskDelay(MSEC2TICK(20));
	}
	while (NDS_SWITCH() & KEY_START)
		vTaskDelay(MSEC2TICK(10));		// Wait while START KEY is being pressed
}

